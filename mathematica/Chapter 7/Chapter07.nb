(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    270578,       6677]
NotebookOptionsPosition[    209464,       5643]
NotebookOutlinePosition[    228478,       6025]
CellTagsIndexPosition[    228066,       6009]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Discrete Probability", "BookChapterTitle",
 CounterAssignments->{{
   "ChapterNumber", 
    7}},ExpressionUUID->"6a6d53b3-16b5-4f96-8cdf-e8fce7e958a4"],

Cell[CellGroupData[{

Cell["Introduction", "Section",ExpressionUUID->"5c129b62-ff22-4c0e-8616-dc435656c647"],

Cell[TextData[{
 "In this chapter, we will see how to use ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to perform computations in discrete probability and to explore concepts of \
discrete probability. We will continue to make use of the functions described \
in the previous chapter. "
}], "Text",ExpressionUUID->"e9f849d2-9d5e-4c8e-8d5d-b578ed7cd0b9"],

Cell["\<\
We will make use of simulations to help explore concepts in discrete \
probability. In this context, a simulation refers to a computer program that \
models a real physical system. For example, instead of flipping an actual \
coin 100 times and recording whether each flip resulted in \
\[OpenCurlyDoubleQuote]heads\[CloseCurlyDoubleQuote] or \
\[OpenCurlyDoubleQuote]tails,\[CloseCurlyDoubleQuote] we could write a \
program that uses random numbers to generate a sequence of 100 \
\[OpenCurlyDoubleQuote]heads\[CloseCurlyDoubleQuote] or \
\[OpenCurlyDoubleQuote]tails.\[CloseCurlyDoubleQuote]\
\>", "Text",ExpressionUUID->"182324d2-31df-4a4a-8175-8df68c4c5247"],

Cell["\<\
Simulations are useful in discrete probability from two different \
perspectives. First, they can help analyze and/or confirm probabilities for \
systems that are difficult to compute deductively. For example, Computations \
and Explorations 7 from the textbook asks you to simulate the odd-person-out \
procedure in order to confirm your deductive calculations. Second, \
simulations can be very helpful as a way to better understand a problem and \
how to arrive at a solution. For example, in the Computer Projects 10 \
exercise, you are asked to build a simulation of the famous Monty Hall \
Three-Door problem. Building the simulation and analyzing the results can \
help improve your understanding of the reasons why the strategy described in \
the text is the best possible.\
\>", "Text",ExpressionUUID->"2172a1bb-2240-4ff2-9926-c88e7deb5354"]
}, Open  ]],

Cell[CellGroupData[{

Cell["7.1 An Introduction to Discrete Probability", "Section",
 CellTags->"Section1",ExpressionUUID->"eb92fc80-98c7-4ad8-ac1c-185057a3e876"],

Cell["\<\
To find the probability of an event in a finite sample space, you calculate \
the number of times the event occurs and divide by the total number of \
possible outcomes (the size of the sample space). \
\>", "Text",ExpressionUUID->"3530cf71-f412-4a61-8f68-3218c1869d4f"],

Cell["\<\
As in Example 4, Section 7.1, we calculate the probability of winning a \
lottery, where we need to choose 6 numbers correctly out of 40 possible \
numbers. The total number of ways to choose 6 numbers is: \
\>", "Text",ExpressionUUID->"bdd62906-88e1-4da9-ae9f-9602c03c5dba"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Binomial", "[", 
  RowBox[{"40", ",", "6"}], "]"}]], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"16a22139-300c-48ba-aa2d-2574230486b5"],

Cell[BoxData["3838380"], "Output",
 CellLabel->"Out[1]=",ExpressionUUID->"f4f8c318-c39b-4de8-9569-2ea4ead704b2"]
}, Open  ]],

Cell["\<\
Since there is one winning combination, the probability is 1 divided by that \
value.\
\>", "Text",ExpressionUUID->"47e3b35f-151b-44f0-bd59-6dbbfed8b40b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "/", 
  RowBox[{"Binomial", "[", 
   RowBox[{"40", ",", "6"}], "]"}]}]], "Input",
 CellLabel->"In[2]:=",ExpressionUUID->"9ea749c8-370e-4310-8554-be0b73300db6"],

Cell[BoxData[
 FractionBox["1", "3838380"]], "Output",
 CellLabel->"Out[2]=",ExpressionUUID->"35e0c843-cbe0-4a6e-9353-e83404e9aa20"]
}, Open  ]],

Cell[TextData[{
 "We can find a real number approximation by using the ",
 StyleBox[ButtonBox["N",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/N"], "FunctionLink"],
 " function\[LongDash]evaluation as a floating point number. Given a single \
argument, ",
 StyleBox[ButtonBox["N",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/N"], "FunctionLink"],
 " returns a numerical approximation of the value of the argument. With a \
positive integer as a second argument, you can control the number of digits \
of precision that are output."
}], "Text",ExpressionUUID->"ce358c70-6baf-40a4-b8f1-5b81a179b884"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"1", "/", 
   RowBox[{"Binomial", "[", 
    RowBox[{"40", ",", "6"}], "]"}]}], "]"}]], "Input",
 CellLabel->"In[3]:=",ExpressionUUID->"0bdcb80e-0a2f-49fb-8bb9-723f0cfeefff"],

Cell[BoxData["2.6052657631605`*^-7"], "Output",
 CellLabel->"Out[3]=",ExpressionUUID->"878172be-a7cf-406a-adea-65e46eb35127"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"1", "/", 
    RowBox[{"Binomial", "[", 
     RowBox[{"40", ",", "6"}], "]"}]}], ",", "20"}], "]"}]], "Input",
 CellLabel->"In[4]:=",ExpressionUUID->"9d10d190-d6bd-4982-a0ab-b184e7e2be90"],

Cell[BoxData["2.6052657631605000026052657631605`20.*^-7"], "Output",
 CellLabel->"Out[4]=",ExpressionUUID->"ccb2153c-bd80-44ed-98aa-bbd4a9017600"]
}, Open  ]],

Cell[TextData[{
 "We could also force a decimal approximation of the result by using ",
 StyleBox["1.0", "Code"],
 " or simply ",
 StyleBox["1.", "Code"],
 ", to show that we wish to work with decimals instead of the exact rational \
representation. For example, if we needed to choose from 50 numbers, the \
probability is"
}], "Text",ExpressionUUID->"753c8364-b35c-44b8-b966-24cdeedb8fba"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1.0", "/", 
  RowBox[{"Binomial", "[", 
   RowBox[{"50", ",", "6"}], "]"}]}]], "Input",
 CellLabel->"In[5]:=",ExpressionUUID->"72a78342-c509-458e-b8fb-2c9fd6622347"],

Cell[BoxData["6.292988980976294`*^-8"], "Output",
 CellLabel->"Out[5]=",ExpressionUUID->"f2b95ef1-1a05-4789-8130-0160a259a36c"]
}, Open  ]],

Cell[TextData[{
 "Continuing with this type of example, we define a function that computes \
the probability of winning a lottery where 6 numbers must be matched out of \
",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "6abf5642-c1d7-429c-a9c2-04d9c65a59b8"],
 " possible numbers, provided that ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "bc5c25f4-308c-4f9c-a3f0-25823d12f25d"],
 " is at least 6."
}], "Text",ExpressionUUID->"1acb3b55-fa8b-4071-9e76-5f53183bfc15"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"lottery", "[", "n_Integer", "]"}], "/;", 
   RowBox[{"n", "\[GreaterEqual]", "6"}]}], ":=", 
  RowBox[{"1.0", "/", 
   RowBox[{"Binomial", "[", 
    RowBox[{"n", ",", "6"}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellLabel->"In[6]:=",ExpressionUUID->"1695345c-067a-4641-a27a-e3ad6c0da54b"],

Cell["\<\
The probabilities above can now be computed with the function. \
\>", "Text",ExpressionUUID->"7329e694-690a-4651-aa1b-66a0144b719b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"lottery", "[", "40", "]"}], ",", 
   RowBox[{"lottery", "[", "50", "]"}]}], "}"}]], "Input",
 CellLabel->"In[7]:=",ExpressionUUID->"2d90f52d-cb5a-4356-a11d-311a3a0bf611"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.6052657631605`*^-7", ",", "6.292988980976294`*^-8"}], 
  "}"}]], "Output",
 CellLabel->"Out[7]=",ExpressionUUID->"ee9c70f4-8585-4c7e-81dd-a9873959cc2e"]
}, Open  ]],

Cell[TextData[{
 "Now, we can use the ",
 StyleBox[ButtonBox["Table",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Table"], "FunctionLink"],
 " function to look at a list of probabilities for a range of values of ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "61f7378e-1b7f-4823-a2fb-5c1f12bcbcd4"],
 " and graph these values with ",
 StyleBox[ButtonBox["ListPlot",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/ListPlot"], "FunctionLink"],
 " to visualize how the number of possible values in the lottery affects the \
probability of choosing the correct values."
}], "Text",ExpressionUUID->"4cd29d6a-e5a0-4107-976d-17dc5bfd58d0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lotteryValues", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"n", ",", 
      RowBox[{"lottery", "[", "n", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "40", ",", "50"}], "}"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellLabel->"In[8]:=",ExpressionUUID->"32d38d35-f51b-4861-a0bd-5d9012739044"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"40", ",", "2.6052657631605`*^-7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"41", ",", "2.2240073587955488`*^-7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"42", ",", "1.9062920218247562`*^-7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"43", ",", "1.6402977862213017`*^-7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"44", ",", "1.4166208153729424`*^-7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"45", ",", "1.2277380399898834`*^-7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"46", ",", "1.0675982956433769`*^-7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"47", ",", "9.313091515186905`*^-8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"48", ",", "8.148955075788542`*^-8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"49", ",", "7.151123842018516`*^-8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"50", ",", "6.292988980976294`*^-8"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[8]=",ExpressionUUID->"b8cdff0a-bd4f-4e5a-aca5-764e69eddf41"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "lotteryValues", "]"}]], "Input",
 CellLabel->"In[9]:=",ExpressionUUID->"46b2f2cb-ee47-4a9f-8d54-9058ef9de6d3"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{40., 2.6052657631605*^-7}, {41., 2.2240073587955488`*^-7}, {
      42., 1.9062920218247562`*^-7}, {43., 1.6402977862213017`*^-7}, {44., 
      1.4166208153729424`*^-7}, {45., 1.2277380399898834`*^-7}, {46., 
      1.0675982956433769`*^-7}, {47., 9.313091515186905*^-8}, {48., 
      8.148955075788542*^-8}, {49., 7.151123842018516*^-8}, {50., 
      6.292988980976294*^-8}}]}, {}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{39.84375000000001, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{40., 50.}, {0, 2.6052657631605*^-7}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[9]=",ExpressionUUID->"6ae01a6b-4abb-4632-a2a3-4ccae10abc13"]
}, Open  ]],

Cell[TextData[{
 "Refer to Section 2.3 of this manual for detailed information on the use of ",
 StyleBox[ButtonBox["ListPlot",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/ListPlot"], "FunctionLink"],
 "."
}], "Text",ExpressionUUID->"1cd67f47-43fe-4efe-b03d-dbc7d8da2f8f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["7.2 Probability Theory", "Section",
 CellTags->"Section2",ExpressionUUID->"ebef388e-7d42-4285-83da-6d2141e65084"],

Cell[TextData[{
 "We can use ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to perform a variety of calculations of probabilities."
}], "Text",ExpressionUUID->"d1dbb36b-01ef-4d3d-8fee-19d3a8481aed"],

Cell["\<\
For example, Example 9 in Section 7.2 asks us to calculate the probability \
that eight of the bits in a string of ten bits are 0s if the probability of a \
0 bit is 0.9, the probability of a 1 bit is 0.1, and the bits are generated \
independently. To perform this calculation, we can input the formula \
directly: \
\>", "Text",ExpressionUUID->"e562bf52-6112-4e88-97a1-e1d4eb6df5a3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Binomial", "[", 
   RowBox[{"10", ",", "8"}], "]"}], "*", 
  RowBox[{"0.9", "^", "8"}], "*", 
  RowBox[{"0.1", "^", "2"}]}]], "Input",
 CellLabel->"In[10]:=",ExpressionUUID->"236338b3-1248-48a2-a18c-3c6ac12cc8c0"],

Cell[BoxData["0.1937102445000001`"], "Output",
 CellLabel->"Out[10]=",ExpressionUUID->"149aa138-137a-47a7-bd90-ca6eb51a3978"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Probability Distributions", "Subsection",
 CellTags->"Section2a",ExpressionUUID->"4f8672d2-130f-49e5-b7c6-5467d0e150a7"],

Cell[TextData[{
 "We can think of this same question in terms of a random variable. \
Specifically, consider a random variable ",
 Cell[BoxData[
  FormBox["X", TraditionalForm]],ExpressionUUID->
  "0e3ff27e-ce8d-4693-9489-b2457b57164a"],
 " that assigns to each string of ten bits the number of the bits that are \
0s. Then, the probability that eight of the ten bits are 0 is denoted ",
 Cell[BoxData[
  FormBox[
   RowBox[{"p", "(", 
    RowBox[{"X", "=", "8"}], ")"}], TraditionalForm]],ExpressionUUID->
  "32ab5bb3-b4d8-44c9-b58f-004cb599858d"],
 ". "
}], "Text",ExpressionUUID->"eab3a67b-5441-4dac-ba9f-cfb8b85160f5"],

Cell["\<\
In order to compute probabilities of events in terms of random variables, we \
must specify the distribution of the random variable.\
\>", "Text",ExpressionUUID->"a8cc25dc-66c0-4e70-805e-0dc612bcde1a"],

Cell[CellGroupData[{

Cell["Computing Probabilities from Discrete Distributions", "Subsubsection",ExpressionUUID->"8d955e8c-6270-4301-b3ef-6d56981898f6"],

Cell[TextData[{
 "The Wolfram Language provides many different probability distributions, \
including several discrete distributions. To compute the probability of an \
event involving a random variable distributed according to a built-in \
distribution, you can use the ",
 StyleBox[ButtonBox["Probability",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Probability"], "FunctionLink"],
 " or ",
 StyleBox[ButtonBox["NProbability",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/NProbability"], "FunctionLink"],
 " functions. These functions are essentially identical, except ",
 StyleBox[ButtonBox["NProbability",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/NProbability"], "FunctionLink"],
 " applies numerical methods to approximate a numerical answer, while ",
 StyleBox[ButtonBox["Probability",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Probability"], "FunctionLink"],
 " uses symbolic methods. Using either function requires that we have a \
distribution, so we begin by introducing the Wolfram Language implementation \
of the binomial distribution."
}], "Text",ExpressionUUID->"deb46ab1-d6ee-44ea-9930-9db15476f5a7"],

Cell[TextData[{
 "Theorem 2 in the textbook defines the binomial distribution, which is \
implemented in the Wolfram Language as ",
 StyleBox[ButtonBox["BinomialDistribution",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/BinomialDistribution"], "FunctionLink"],
 ". The ",
 StyleBox[ButtonBox["BinomialDistribution",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/BinomialDistribution"], "FunctionLink"],
 " takes two parameters: the number of independent Bernoulli trials and the \
probability of a success. For the bit string example that began this section, \
there are 10 trials, and we interpret success to be a 0 bit; so, the \
probability of success is 0.9. The binomial distribution with these \
parameters is represented as shown below. Note that ",
 StyleBox[ButtonBox["BinomialDistribution",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/BinomialDistribution"], "FunctionLink"],
 " is not a function\[LongDash]that is, it does not produce an output and \
evaluating the line below will do nothing."
}], "Text",ExpressionUUID->"7015543b-85e3-4031-86ee-fce4ed72cd9c"],

Cell[BoxData[
 RowBox[{"BinomialDistribution", "[", 
  RowBox[{"10", ",", ".9"}], "]"}]], "myCode",
 Editable->False,ExpressionUUID->"eda2bd57-a005-46b1-a1ba-e84febf6b515"],

Cell[TextData[{
 "The ",
 StyleBox[ButtonBox["Probability",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Probability"], "FunctionLink"],
 " and ",
 StyleBox[ButtonBox["NProbability",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/NProbability"], "FunctionLink"],
 " functions expect two arguments. The first argument is an expression \
describing an event, written in terms of a symbol representing a random \
variable. For example, to compute the probability ",
 Cell[BoxData[
  FormBox[
   RowBox[{"p", "(", 
    RowBox[{"X", "=", "8"}], ")"}], TraditionalForm]],ExpressionUUID->
  "86c1ce60-8509-4d80-8e2d-fe456f2c86a6"],
 " in the bit-string example, the first argument would be ",
 StyleBox["X\[ThinSpace]==\[ThinSpace]8", "Code"],
 ". "
}], "Text",ExpressionUUID->"014a2666-cfc2-411d-9487-901657d9b514"],

Cell[TextData[{
 "The second argument to the ",
 StyleBox[ButtonBox["Probability",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Probability"], "FunctionLink"],
 " and ",
 StyleBox[ButtonBox["NProbability",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/NProbability"], "FunctionLink"],
 " functions is used to indicate the distribution. This is done using the ",
 StyleBox[ButtonBox["Distributed",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Distributed"], "FunctionLink"],
 " (\[Distributed]) operator. In functional form, ",
 StyleBox[ButtonBox["Distributed",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Distributed"], "FunctionLink"],
 " requires two arguments: the symbol representing the random variable and \
the representation of the distribution. To use the operator form, enter \
\[EscapeKey]dist\[EscapeKey] to produce the \[Distributed] symbol. In this \
case, the name of the random variable goes on the left and the distribution \
on the right."
}], "Text",ExpressionUUID->"7a55a9cd-ff51-4a6f-89e1-3393d2007d7a"],

Cell[TextData[{
 "Putting these two pieces together, the expression below computes the \
probability of 8 successes for a binomial distribution with 10 trials and \
probability of success ",
 Cell[BoxData[
  FormBox["0.9", TraditionalForm]],ExpressionUUID->
  "af37b26a-e74f-451e-ad95-f5e1d3f6628f"],
 "."
}], "Text",ExpressionUUID->"d3996daa-3182-432e-ae83-e9cc41e3413e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Probability", "[", 
  RowBox[{
   RowBox[{"X", "\[Equal]", "8"}], ",", 
   RowBox[{"X", "\[Distributed]", 
    RowBox[{"BinomialDistribution", "[", 
     RowBox[{"10", ",", ".9"}], "]"}]}]}], "]"}]], "Input",
 CellLabel->"In[11]:=",ExpressionUUID->"56182067-1565-4b84-b897-3a8caa6e1955"],

Cell[BoxData["0.19371024449999932`"], "Output",
 CellLabel->"Out[11]=",ExpressionUUID->"fb3660c7-6f5c-46bb-b29c-aacf26c13319"]
}, Open  ]],

Cell["\<\
Note that this is the same answer we found above using the formula. \
\>", "Text",ExpressionUUID->"9f246eaa-4142-4e5b-a23f-143aa173fc7a"],

Cell[TextData[{
 "Related to the binomial distribution is the probability distribution of a \
single Bernoulli trial. The ",
 StyleBox[ButtonBox["BernoulliDistribution",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/BernoulliDistribution"], "FunctionLink"],
 " takes only one parameter, the probability of success. The following \
creates the random variable associated to a single trial with probability of \
success 0.9. The possible values of a Bernoulli random variable are 0 or 1, \
representing failure and success, respectively."
}], "Text",ExpressionUUID->"e81e88bc-b2a1-41a6-a431-41eb55c14ad9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Probability", "[", 
  RowBox[{
   RowBox[{"X", "\[Equal]", "0"}], ",", 
   RowBox[{"X", "\[Distributed]", 
    RowBox[{"BernoulliDistribution", "[", ".9", "]"}]}]}], "]"}]], "Input",
 CellLabel->"In[12]:=",ExpressionUUID->"4c792575-f395-45d6-b46c-0a1b3b5fc133"],

Cell[BoxData["0.09999999999999998`"], "Output",
 CellLabel->"Out[12]=",ExpressionUUID->"f9b9b7ad-662e-44b0-ad7a-3f3a2f8b6e7b"]
}, Open  ]],

Cell[TextData[{
 "Definition 1 of Section 7.2 defines the uniform distribution. The Wolfram \
Language represents this distribution by the symbol ",
 StyleBox[ButtonBox["DiscreteUniformDistribution",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/DiscreteUniformDistribution"], "FunctionLink"],
 ". Note that this is different from ",
 StyleBox[ButtonBox["UniformDistribution",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/UniformDistribution"], "FunctionLink"],
 ", which is used for continuous random variables. The ",
 StyleBox[ButtonBox["DiscreteUniformDistribution",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/DiscreteUniformDistribution"], "FunctionLink"],
 " requires a single argument, a list containing the lower and upper bounds \
of the distribution. For example, the following computes the probability ",
 Cell[BoxData[
  FormBox[
   RowBox[{"p", "(", 
    RowBox[{
     SuperscriptBox["X", "2"], "\[LessEqual]", "4"}], ")"}], 
   TraditionalForm]],ExpressionUUID->"388c6e9e-3fb2-44fe-aa1d-5570a408958e"],
 " for a random variable distributed uniformly on ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "10"}], ",", 
     RowBox[{"-", "9"}], ",", "\[Ellipsis]", ",", "9", ",", "10"}], "}"}], 
   TraditionalForm]],ExpressionUUID->"94af4b85-6b83-4cf9-9823-889ddc778d2b"],
 "."
}], "Text",ExpressionUUID->"1b83a9cd-cf84-4834-b0dc-bb0cc22a78cf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Probability", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"X", "^", "2"}], "\[LessEqual]", "4"}], ",", 
   RowBox[{"X", "\[Distributed]", 
    RowBox[{"DiscreteUniformDistribution", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "10"}], ",", "10"}], "}"}], "]"}]}]}], "]"}]], "Input",
 CellLabel->"In[13]:=",ExpressionUUID->"dbb51e7e-36ed-454d-902d-862eba747cae"],

Cell[BoxData[
 FractionBox["5", "21"]], "Output",
 CellLabel->"Out[13]=",ExpressionUUID->"9b740107-8acf-44dc-98b8-d9a74a9fb6fc"]
}, Open  ]],

Cell[TextData[{
 "Definition 2 of Section 7.4 defines the geometric distribution. The Wolfram \
Language uses a slightly different definition of geometric distribution than \
the definition given in the textbook. In the Wolfram Language, the value of a \
random variable distributed geometrically is the number of failures that \
occur before the first success, rather than the total number of trials until \
the first success. The ",
 StyleBox[ButtonBox["GeometricDistribution",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/GeometricDistribution"], "FunctionLink"],
 " requires one argument, the probability of success. The following computes \
the probability that if a coin with probability of heads ",
 Cell[BoxData[
  FormBox["0.3", TraditionalForm]],ExpressionUUID->
  "553eb378-d6b6-4c92-85c8-898acec246da"],
 " is flipped until it comes up heads, there will be at most 5 tails that \
appear."
}], "Text",ExpressionUUID->"35245cd6-d425-419a-aee4-92cf861c673e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Probability", "[", 
  RowBox[{
   RowBox[{"X", "\[LessEqual]", "5"}], ",", 
   RowBox[{"X", "\[Distributed]", 
    RowBox[{"GeometricDistribution", "[", ".3", "]"}]}]}], "]"}]], "Input",
 CellLabel->"In[14]:=",ExpressionUUID->"c3ffa7f0-f0ba-44f4-aeb1-750d9f42cbfd"],

Cell[BoxData["0.8823510000000001`"], "Output",
 CellLabel->"Out[14]=",ExpressionUUID->"0922dabd-892e-4bc9-8f85-f6dc4db93147"]
}, Open  ]],

Cell[TextData[{
 "Note that you can form more complicated events by including Boolean \
operators when building the event. For example, the probability that it \
requires at most 2 or at least 7 flips of a coin with probability of heads ",
 Cell[BoxData[
  FormBox["0.3", TraditionalForm]],ExpressionUUID->
  "f96f4426-e96f-4880-952f-e33aa0e5b959"],
 " before a heads comes up is:"
}], "Text",ExpressionUUID->"1470abc1-0e71-47b0-bd29-d4b1db59e7b4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Probability", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"X", "\[LessEqual]", "2"}], "||", 
    RowBox[{"X", "\[GreaterEqual]", "7"}]}], ",", 
   RowBox[{"X", "\[Distributed]", 
    RowBox[{"GeometricDistribution", "[", ".3", "]"}]}]}], "]"}]], "Input",
 CellLabel->"In[15]:=",ExpressionUUID->"9dc137f9-8da9-4bed-938f-4e7f9570dd47"],

Cell[BoxData["0.7393543`"], "Output",
 CellLabel->"Out[15]=",ExpressionUUID->"6ba16f8d-18a5-4190-8b92-f5f1972ba227"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " also makes it easy to work with multiple distributions. For example, \
suppose you have two coins, one with probability of heads ",
 Cell[BoxData[
  FormBox["0.3", TraditionalForm]],ExpressionUUID->
  "22d4c06e-2dc6-4412-ad89-8ba5133a622d"],
 " and the other with probability of heads ",
 Cell[BoxData[
  FormBox["0.25", TraditionalForm]],ExpressionUUID->
  "194ed35c-7a7c-49bf-ad93-22cf7bcd8301"],
 ". The probability that flipping each coin once will result in at least one \
head can be computed as follows."
}], "Text",ExpressionUUID->"64d2cf23-3793-4d9a-b761-ab6714cc6604"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Probability", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"X", "\[Equal]", "1"}], "||", 
    RowBox[{"Y", "\[Equal]", "1"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"X", "\[Distributed]", 
      RowBox[{"BernoulliDistribution", "[", ".3", "]"}]}], ",", 
     RowBox[{"Y", "\[Distributed]", 
      RowBox[{"BernoulliDistribution", "[", ".25", "]"}]}]}], "}"}]}], 
  "]"}]], "Input",
 CellLabel->"In[16]:=",ExpressionUUID->"da7a0dd9-85f5-4a44-a607-26931459af27"],

Cell[BoxData["0.4750000000000001`"], "Output",
 CellLabel->"Out[16]=",ExpressionUUID->"6236808c-7a61-466a-ba4a-b0644ca77fa1"]
}, Open  ]],

Cell[TextData[{
 "Note that the second argument is a list whose elements define the \
distributions for ",
 StyleBox["X", "Code"],
 " and ",
 StyleBox["Y", "Code"],
 ". "
}], "Text",ExpressionUUID->"122b819c-eb81-4ead-9741-bf0d17d944f6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Graphing Probabilities", "Subsubsection",ExpressionUUID->"4f64ea62-af0e-4f66-ae46-8259449a144d"],

Cell[TextData[{
 "It is often useful to graph the probabilities associated to the values of a \
random variable. To do this, we can use the ",
 StyleBox[ButtonBox["DiscretePlot",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/DiscretePlot"], "FunctionLink"],
 " and ",
 StyleBox[ButtonBox["PDF",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/PDF"], "FunctionLink"],
 " functions."
}], "Text",ExpressionUUID->"cd979fcb-15a5-4145-84db-130076d01395"],

Cell[TextData[{
 "The ",
 StyleBox[ButtonBox["DiscretePlot",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/DiscretePlot"], "FunctionLink"],
 " function is the discrete analog of ",
 StyleBox[ButtonBox["Plot",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Plot"], "FunctionLink"],
 ". Its first argument is an expression, the values of which are to be \
plotted, in terms of a variable. The second is a domain specification, which \
is of the same form as in a ",
 StyleBox[ButtonBox["Table",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Table"], "FunctionLink"],
 ": ",
 Cell[BoxData[
  RowBox[{"{", 
   StyleBox["n", "CodeVar"], ",", 
   StyleBox["max", "CodeVar"], "}"}]], "myCode",ExpressionUUID->
  "7be40871-225e-4b00-8e18-959fe59898a8"],
 ", ",
 Cell[BoxData[
  RowBox[{"{", 
   StyleBox["n", "CodeVar"], ",", 
   StyleBox["min", "CodeVar"], ",", 
   StyleBox["max", "CodeVar"], "}"}]], "myCode",ExpressionUUID->
  "1fa441c0-f6a0-4f7b-8d63-3204dcc9ec25"],
 ", ",
 Cell[BoxData[
  RowBox[{"{", 
   StyleBox["n", "CodeVar"], ",", 
   StyleBox["min", "CodeVar"], ",", 
   StyleBox["max", "CodeVar"], ",", 
   StyleBox["step", "CodeVar"], "}"}]], "myCode",ExpressionUUID->
  "dfc90507-0932-4366-b4b9-a004785123a4"],
 ", or ",
 Cell[BoxData[
  RowBox[{"{", 
   StyleBox["n", "CodeVar"], ",", 
   StyleBox["list", "CodeVar"], "}"}]], "myCode",ExpressionUUID->
  "58950b6b-618c-49bb-956c-989dafa8e87b"],
 ", where ",
 StyleBox["n", "CodeVar"],
 " is the variable."
}], "Text",ExpressionUUID->"4b92486e-f870-4e84-947a-8cf27451a10d"],

Cell[TextData[{
 "For example, the following plots the values of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Pi]", "(", "x", ")"}], TraditionalForm]],ExpressionUUID->
  "5285b06c-fbe8-4ea4-bcdb-c75666c3ed35"],
 ", the function defined to be the number of primes less than or equal to the \
argument, for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "\[Element]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3", ",", "\[Ellipsis]", ",", "50"}], "}"}]}], 
   TraditionalForm]],ExpressionUUID->"492a4fdb-4049-49e6-85e8-e1491c7e7e4f"],
 "."
}], "Text",ExpressionUUID->"913b6c52-5b49-44bf-9002-d57f25bb4e20"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"PrimePi", "[", "n", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "2", ",", "50"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[17]:=",ExpressionUUID->"003e0685-a62e-4926-aba4-0242bfc7dcad"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
    AbsoluteThickness[1.6], 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], Opacity[0.2], LineBox[{},
      VertexColors->None]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], Opacity[0.2], 
     LineBox[{{{2., 1.}, {2., 0}}, {{3., 2.}, {3., 0}}, {{4., 2.}, {
        4., 0}}, {{5., 3.}, {5., 0}}, {{6., 3.}, {6., 0}}, {{7., 4.}, {
        7., 0}}, {{8., 4.}, {8., 0}}, {{9., 4.}, {9., 0}}, {{10., 4.}, {
        10., 0}}, {{11., 5.}, {11., 0}}, {{12., 5.}, {12., 0}}, {{13., 6.}, {
        13., 0}}, {{14., 6.}, {14., 0}}, {{15., 6.}, {15., 0}}, {{16., 6.}, {
        16., 0}}, {{17., 7.}, {17., 0}}, {{18., 7.}, {18., 0}}, {{19., 8.}, {
        19., 0}}, {{20., 8.}, {20., 0}}, {{21., 8.}, {21., 0}}, {{22., 8.}, {
        22., 0}}, {{23., 9.}, {23., 0}}, {{24., 9.}, {24., 0}}, {{25., 9.}, {
        25., 0}}, {{26., 9.}, {26., 0}}, {{27., 9.}, {27., 0}}, {{28., 9.}, {
        28., 0}}, {{29., 10.}, {29., 0}}, {{30., 10.}, {30., 0}}, {{31., 
        11.}, {31., 0}}, {{32., 11.}, {32., 0}}, {{33., 11.}, {33., 0}}, {{
        34., 11.}, {34., 0}}, {{35., 11.}, {35., 0}}, {{36., 11.}, {
        36., 0}}, {{37., 12.}, {37., 0}}, {{38., 12.}, {38., 0}}, {{39., 
        12.}, {39., 0}}, {{40., 12.}, {40., 0}}, {{41., 13.}, {41., 0}}, {{
        42., 13.}, {42., 0}}, {{43., 14.}, {43., 0}}, {{44., 14.}, {
        44., 0}}, {{45., 14.}, {45., 0}}, {{46., 14.}, {46., 0}}, {{47., 
        15.}, {47., 0}}, {{48., 15.}, {48., 0}}, {{49., 15.}, {49., 0}}, {{
        50., 15.}, {50., 0}}},
      VertexColors->None]}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
    AbsoluteThickness[1.6], {}, PointBox[CompressedData["
1:eJxd0jsKwkAQxvHByjKFhYWFCSIiIsb3O+tbW48gWHuFObJHUMmOMP+F8PHL
bJhlJ+njdX9WRCT/Pr+MK5TxLsqsBv8+gWvB76vDDXzXhDO4BbfRpwN30bcH
9+EBnOOcQ3iEc4/hCTyFZzGzmHN4AS/hFbyGNzHt3rZwEdPuMXgrLDvUYdmj
bra5HLwVliPqZpvjyVvNNtezt8JyQd1s/8HVW2G5/f0BRWUv0w==
     "]], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{2, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{2, 50}, {0, 15.}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[17]=",ExpressionUUID->"0492462c-70e5-4c6f-9b09-cb7c29b67026"]
}, Open  ]],

Cell[TextData[{
 "By applying ",
 StyleBox[ButtonBox["DiscretePlot",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/DiscretePlot"], "FunctionLink"],
 " with first argument an application of ",
 StyleBox[ButtonBox["Probability",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Probability"], "FunctionLink"],
 ", we can get a picture of a distribution."
}], "Text",ExpressionUUID->"2cd82d01-afac-4b81-b850-f90d17d13b62"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"Probability", "[", 
    RowBox[{
     RowBox[{"X", "\[Equal]", "n"}], ",", 
     RowBox[{"X", "\[Distributed]", 
      RowBox[{"BinomialDistribution", "[", 
       RowBox[{"20", ",", ".3"}], "]"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "20"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[18]:=",ExpressionUUID->"94222e9c-8ddb-4274-975b-4e79fd4b5458"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6], 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], Opacity[0.2], LineBox[{},
      VertexColors->None]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], Opacity[0.2], 
     LineBox[{{{1., 0.006839337111223886}, {1., 0}}, {{2., 
        0.02784587252426865}, {2., 0}}, {{3., 0.07160367220526234}, {
        3., 0}}, {{4., 0.1304209743738707}, {4., 0}}, {{5., 
        0.1788630505698799}, {5., 0}}, {{6., 0.19163898275344207`}, {
        6., 0}}, {{7., 0.16426198521723673`}, {7., 0}}, {{8., 
        0.11439673970486067`}, {8., 0}}, {{9., 0.06536956554563499}, {
        9., 0}}, {{10., 0.03081708090008507}, {10., 0}}, {{11., 
        0.012006654896137031`}, {11., 0}}, {{12., 0.003859281930901166}, {
        12., 0}}, {{13., 0.0010178325971607542`}, {13., 0}}, {{14., 
        0.00021810698510587497`}, {14., 0}}, {{15., 0.00003738976887529299}, {
        15., 0}}, {{16., 5.007558331512462*^-6}, {16., 0}}, {{17., 
        5.049638653625986*^-7}, {17., 0}}, {{18., 3.6068847525899964`*^-8}, {
        18., 0}}, {{19., 1.627166053800009*^-9}, {19., 0}}, {{20., 
        3.486784400999994*^-11}, {20., 0}}},
      VertexColors->None]}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6], {}, PointBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7CUVGydPYK6xhwo4rGD0uL+geQ6Uz+GwSjXV
bV7IJihfwEHz56XcRRsPQPkiDq86Qlj+PDkG5Us4lHqe8F3QfgLKl3F49dU2
vZPtKJSv4LBI4+x5Kc+9UL6Sg7+4ThD/ng1QvopDMnu9V3PffChfzaHgx/MP
H6d1QPkaDjEde0wb5uZD+VoO97ze5kquDYDydRwEzYv2lEzTgfL1HNrkpNfG
zWKG8g0cZoXrq19muGoH4Rs6/LCt8Zj9cQGUb+Sw/W/vAefYZCjf2GF7437p
qC/SUL6Jg0xCbqWZ9mFbAH5HU+s=
     "]], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{1, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{1, 20}, {0, 0.19163898275344207`}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[18]=",ExpressionUUID->"555a682f-6d7a-44c9-af94-fed67f6840a9"]
}, Open  ]],

Cell[TextData[{
 "The Wolfram Language includes the ",
 StyleBox[ButtonBox["PDF",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/PDF"], "FunctionLink"],
 " function, which makes for a more elegant way to produce graphs like the \
one shown above. ",
 StyleBox[ButtonBox["PDF",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/PDF"], "FunctionLink"],
 " stands for probability density function, although for discrete \
distributions, the term \[OpenCurlyDoubleQuote]probability mass function\
\[CloseCurlyDoubleQuote] is more common. In the discrete setting, the \
probability density function is the function whose domain is the set of \
possible values of the random variable and the output associated to each \
value is the probability that the random variable equals that value."
}], "Text",ExpressionUUID->"a2c3843f-68f2-45bb-a4d8-a2d1901146aa"],

Cell[TextData[{
 "In the Wolfram Language, the ",
 StyleBox[ButtonBox["PDF",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/PDF"], "FunctionLink"],
 " function can be applied to a distribution (with appropriate parameters) to \
produce a ",
 StyleBox[ButtonBox["Function",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Function"], "FunctionLink"],
 " representing the probability density function of the given distribution. \
Observe the output when ",
 StyleBox[ButtonBox["PDF",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/PDF"], "FunctionLink"],
 " is applied to the ",
 StyleBox[ButtonBox["BinomialDistribution",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/BinomialDistribution"], "FunctionLink"],
 "."
}], "Text",ExpressionUUID->"31b2c18b-ee0d-49d3-81ed-5e6b9be056fd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PDF", "[", 
  RowBox[{"BinomialDistribution", "[", 
   RowBox[{"20", ",", ".3"}], "]"}], "]"}]], "Input",
 CellLabel->"In[19]:=",ExpressionUUID->"b513817c-f12e-4874-86f1-01360e47632a"],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{"\[FormalX]", ",", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          RowBox[{
           SuperscriptBox["0.3`", "\[FormalX]"], " ", 
           SuperscriptBox["0.7`", 
            RowBox[{"20", "-", "\[FormalX]"}]], " ", 
           RowBox[{"Binomial", "[", 
            RowBox[{"20", ",", "\[FormalX]"}], "]"}]}], 
          RowBox[{"0", "\[LessEqual]", "\[FormalX]", "\[LessEqual]", "20"}]},
         {"0", 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", "Listable"}], "]"}]], "Output",
 CellLabel->"Out[19]=",ExpressionUUID->"ac34b5ab-92c6-49b4-9fe2-f8e319759bf3"]
}, Open  ]],

Cell[TextData[{
 "The decorations on the ",
 StyleBox["x", "Code"],
 " in the output is simply indicating that that symbol is being used as a \
formal variable\[LongDash]essentially a way to name a ",
 StyleBox[ButtonBox["Slot",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Slot"], "FunctionLink"],
 " (",
 StyleBox["#", "Code"],
 "). The key is that the result of applying ",
 StyleBox[ButtonBox["PDF",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/PDF"], "FunctionLink"],
 " to the distribution is a pure function encoding the probabilities of the \
distribution. Symbolically, if we named that function ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "39692f22-a541-4f67-b957-93cab3bf4f42"],
 ", we would have ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{"p", "(", 
     RowBox[{"X", "=", "x"}], ")"}]}], TraditionalForm]],ExpressionUUID->
  "1dbd794a-c7a2-4890-ac76-a89be56ae8bd"],
 "."
}], "Text",ExpressionUUID->"d0368ac3-65ab-4ee7-acb2-bbfde8795baa"],

Cell[TextData[{
 "We can compute the probability density function at specific values either \
by using the typical function notation or by giving the input as a second \
argument to ",
 StyleBox[ButtonBox["PDF",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/PDF"], "FunctionLink"],
 ". Of course, both options give the same result as the ",
 StyleBox[ButtonBox["Probability",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Probability"], "FunctionLink"],
 " function does."
}], "Text",ExpressionUUID->"864cbf7c-63bb-4621-a28b-e29954870605"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"PDF", "[", 
   RowBox[{"BinomialDistribution", "[", 
    RowBox[{"20", ",", ".3"}], "]"}], "]"}], "[", "5", "]"}]], "Input",
 CellLabel->"In[20]:=",ExpressionUUID->"9746f6bf-dbcd-47b2-83c9-8ce7e5aa2ed4"],

Cell[BoxData["0.17886305056987958`"], "Output",
 CellLabel->"Out[20]=",ExpressionUUID->"01de951d-e357-4eb5-9d85-f257fedf6fbd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PDF", "[", 
  RowBox[{
   RowBox[{"BinomialDistribution", "[", 
    RowBox[{"20", ",", ".3"}], "]"}], ",", "5"}], "]"}]], "Input",
 CellLabel->"In[21]:=",ExpressionUUID->"be122d4f-8e91-4fc7-be1e-c9433b284b45"],

Cell[BoxData["0.1788630505698799`"], "Output",
 CellLabel->"Out[21]=",ExpressionUUID->"30fdf665-c460-4b4a-9945-11b7c53155b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Probability", "[", 
  RowBox[{
   RowBox[{"X", "\[Equal]", "5"}], ",", 
   RowBox[{"X", "\[Distributed]", 
    RowBox[{"BinomialDistribution", "[", 
     RowBox[{"20", ",", ".3"}], "]"}]}]}], "]"}]], "Input",
 CellLabel->"In[22]:=",ExpressionUUID->"be8f5808-5e80-4088-804e-0f69d19ac471"],

Cell[BoxData["0.1788630505698799`"], "Output",
 CellLabel->"Out[22]=",ExpressionUUID->"6d52389e-bfff-4bc2-bf82-f30124f7866e"]
}, Open  ]],

Cell[TextData[{
 "We can thus use ",
 StyleBox[ButtonBox["PDF",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/PDF"], "FunctionLink"],
 " in place of ",
 StyleBox[ButtonBox["Probability",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Probability"], "FunctionLink"],
 " in graphing the distribution."
}], "Text",ExpressionUUID->"d1242f85-1286-48c5-a21a-953e5400547c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"PDF", "[", 
    RowBox[{
     RowBox[{"BinomialDistribution", "[", 
      RowBox[{"20", ",", ".3"}], "]"}], ",", "n"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "20"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[23]:=",ExpressionUUID->"fe328393-035b-4590-b23e-2bd14321d6dc"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6], 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], Opacity[0.2], LineBox[{},
      VertexColors->None]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], Opacity[0.2], 
     LineBox[{{{1., 0.006839337111223886}, {1., 0}}, {{2., 
        0.02784587252426865}, {2., 0}}, {{3., 0.07160367220526234}, {
        3., 0}}, {{4., 0.1304209743738707}, {4., 0}}, {{5., 
        0.1788630505698799}, {5., 0}}, {{6., 0.19163898275344207`}, {
        6., 0}}, {{7., 0.16426198521723673`}, {7., 0}}, {{8., 
        0.11439673970486067`}, {8., 0}}, {{9., 0.06536956554563499}, {
        9., 0}}, {{10., 0.03081708090008507}, {10., 0}}, {{11., 
        0.012006654896137031`}, {11., 0}}, {{12., 0.003859281930901166}, {
        12., 0}}, {{13., 0.0010178325971607542`}, {13., 0}}, {{14., 
        0.00021810698510587497`}, {14., 0}}, {{15., 0.00003738976887529299}, {
        15., 0}}, {{16., 5.007558331512462*^-6}, {16., 0}}, {{17., 
        5.049638653625986*^-7}, {17., 0}}, {{18., 3.6068847525899964`*^-8}, {
        18., 0}}, {{19., 1.627166053800009*^-9}, {19., 0}}, {{20., 
        3.486784400999994*^-11}, {20., 0}}},
      VertexColors->None]}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6], {}, PointBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7CUVGydPYK6xhwo4rGD0uL+geQ6Uz+GwSjXV
bV7IJihfwEHz56XcRRsPQPkiDq86Qlj+PDkG5Us4lHqe8F3QfgLKl3F49dU2
vZPtKJSv4LBI4+x5Kc+9UL6Sg7+4ThD/ng1QvopDMnu9V3PffChfzaHgx/MP
H6d1QPkaDjEde0wb5uZD+VoO97ze5kquDYDydRwEzYv2lEzTgfL1HNrkpNfG
zWKG8g0cZoXrq19muGoH4Rs6/LCt8Zj9cQGUb+Sw/W/vAefYZCjf2GF7437p
qC/SUL6Jg0xCbqWZ9mFbAH5HU+s=
     "]], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{1, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{1, 20}, {0, 0.19163898275344207`}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[23]=",ExpressionUUID->"3eb116e2-347b-44fd-b018-076cff26b506"]
}, Open  ]],

Cell[TextData[{
 "This may seem to be at most a minor improvement. It is, however, useful to \
understand the use of the ",
 StyleBox[ButtonBox["PDF",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/PDF"], "FunctionLink"],
 " function in the discrete situation, because when using continuous \
distributions, it is necessary."
}], "Text",ExpressionUUID->"49b04b84-aa76-44f3-b0db-a435026fc14e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Conditional Probabilities", "Subsubsection",ExpressionUUID->"656e2e49-82c1-4660-8ce0-fba2174e150b"],

Cell[TextData[{
 "The ",
 StyleBox[ButtonBox["Conditioned",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Conditioned"], "FunctionLink"],
 " (",
 StyleBox["\[Conditioned]", "Code"],
 ") operator is used to calculate conditional probabilities. The operator \
symbol is entered by \[EscapeKey]",
 StyleBox["cond",
  IgnoreSpellCheck->True],
 "\[EscapeKey]. For example, consider the binomial random variable ",
 Cell[BoxData[
  FormBox["X", TraditionalForm]],ExpressionUUID->
  "63f0ebe9-bcd4-4b83-a333-ed6740c18af2"],
 " with parameters 20 and ",
 Cell[BoxData[
  FormBox["0.3", TraditionalForm]],ExpressionUUID->
  "a6cfd6e8-a098-4467-965e-28b411d26446"],
 ". The probability that ",
 Cell[BoxData[
  FormBox["X", TraditionalForm]],ExpressionUUID->
  "0357b84f-775b-4b3b-9c25-95c2ffaa73d6"],
 " is greater than 5 given that it is less than 10, that is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"p", "(", 
    RowBox[{
     RowBox[{"X", ">", "5"}], "|", 
     RowBox[{"X", "<", "10"}]}], ")"}], TraditionalForm]],ExpressionUUID->
  "6642b300-b4bc-476e-b9a1-560b09c7ba6b"],
 " can be computed as shown below."
}], "Text",ExpressionUUID->"e014f86e-35a2-4eb9-bce1-34158e23d810"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Probability", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"X", ">", "5"}], "\[Conditioned]", 
    RowBox[{"X", "<", "10"}]}], ",", 
   RowBox[{"X", "\[Distributed]", 
    RowBox[{"BinomialDistribution", "[", 
     RowBox[{"20", ",", ".3"}], "]"}]}]}], "]"}]], "Input",
 CellLabel->"In[24]:=",ExpressionUUID->"98b8e606-8173-4d72-986e-87f0381d4da9"],

Cell[BoxData["0.5626531876399129`"], "Output",
 CellLabel->"Out[24]=",ExpressionUUID->"a4478fa7-4713-490d-820e-5b129b0d4c73"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Defining Distributions from Data", "Subsubsection",ExpressionUUID->"05ea6763-11e3-45d3-9871-cd87e4ec8db9"],

Cell[TextData[{
 "The Wolfram Language provides the ",
 StyleBox[ButtonBox["EmpiricalDistribution",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/EmpiricalDistribution"], "FunctionLink"],
 " function to allow you to define, and thus compute with, discrete \
probability distributions from your own data. There are two main ways to use \
the ",
 StyleBox[ButtonBox["EmpiricalDistribution",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/EmpiricalDistribution"], "FunctionLink"],
 " function."
}], "Text",ExpressionUUID->"2decf24b-a8f2-4d39-81ea-1f76437c6bb5"],

Cell[TextData[{
 "If you have a list of values representing the results of experiments, you \
can pass this list of data to ",
 StyleBox[ButtonBox["EmpiricalDistribution",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/EmpiricalDistribution"], "FunctionLink"],
 ". For example, suppose you manually roll a die 20 times and obtain the \
following results."
}], "Text",ExpressionUUID->"005db2a4-3bc9-4ba3-b182-643229fb89ff"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dieRolls", "=", 
  RowBox[{"{", 
   RowBox[{
   "3", ",", "2", ",", "1", ",", "1", ",", "5", ",", "2", ",", "3", ",", "6", 
    ",", "5", ",", "1", ",", "2", ",", "5", ",", "6", ",", "4", ",", "4", ",",
     "3", ",", "1", ",", "3", ",", "1", ",", "1"}], "}"}]}]], "Input",
 InitializationCell->True,
 CellLabel->"In[25]:=",ExpressionUUID->"a97626cd-8315-4076-a5fc-53f1944cb0c3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3", ",", "2", ",", "1", ",", "1", ",", "5", ",", "2", ",", "3", ",", "6", 
   ",", "5", ",", "1", ",", "2", ",", "5", ",", "6", ",", "4", ",", "4", ",", 
   "3", ",", "1", ",", "3", ",", "1", ",", "1"}], "}"}]], "Output",
 CellLabel->"Out[25]=",ExpressionUUID->"2f582966-b763-42f9-a888-ba71efb6ab7f"]
}, Open  ]],

Cell[TextData[{
 "To use this as the data defining a distribution, simply give the list as \
the argument to ",
 StyleBox[ButtonBox["EmpiricalDistribution",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/EmpiricalDistribution"], "FunctionLink"],
 ". We assign the distribution to a symbol."
}], "Text",ExpressionUUID->"ab6f40bf-0893-4375-ab6b-3891569c9a76"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dieDistribution", "=", 
  RowBox[{"EmpiricalDistribution", "[", "dieRolls", "]"}]}]], "Input",
 InitializationCell->True,
 CellLabel->"In[26]:=",ExpressionUUID->"6f034b58-aa08-4659-b470-0143921b0fdc"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["DataDistribution",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAwBmIQ/Xmu+cn//+/vZ4CCC1M/TWa6cwfO38s482xKyU04
/7jcgZ2dbtfg/Je6ZtOXalyG802T9I879p2H8y+e+nxkr91JOL9Xun/Bj/RD
+2fNBIGT9p8WTNjrlLQdyr9pXzaPm8Nu+1I4/+nEnefMz7Taw/ht95KiXc6v
g/NfPvaf8/Dqbjhfw2XB8sCVR+B8JRNxGd0vp+D8f3Ojb6o8vgDnX14fY2xj
cwXO7xG4e2tC9HU43/RvoXDbvltw/kGLtpk7nt+F8+Ubwm+4rnpgb2IMAo/t
L2W5vN4c8QjO//7nwxKHV4/hfJGr6svnzn0K5y8KkQuQNHkO56tE5zbMPPQC
zp+33O3ny6JXcH7X7PsSkWxv4Py8q0yNM3a/hfPdptUV3Ml4D+d7/I9pnl/z
Ac7PvLb/047Qj3C+c2PT1kSFT3D+9PyPu3meI/jPG5Y+m7/vM5z/IXVnyqH2
L3D+11wh9rOJX+H8zZ6n/6TpfoOGz0v71xkGZsxfEXz51bcmt5/9DufzHHzi
Mnv6Dzj/609jqelFP+0hqeWDfUSZvvFUz19wfsmxrvlKQr/h/B5LbYMZrxH8
2AZtkbnb/sD5K7huWC+p/Qvnv99+sn1y6D84/52FtLqQ/H84v/a576f//3Hx
GRgA8dtlww==
              "], {{{}, {
                 EdgeForm[], 
                 Directive[
                  GrayLevel[0.85]], 
                 GraphicsGroupBox[{
                   
                   PolygonBox[{{7, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41,
                     40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 
                    26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 
                    12, 11, 10, 9, 8}}]}]}, {}, {}}, {{}, {}, {
                 Directive[
                  Opacity[1.], 
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5]], 
                 
                 LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
                  16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 
                  31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 
                  46, 47, 48, 49, 50}]}}}], {
             DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, Background -> GrayLevel[0.93], 
              BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction :> 
              Identity, Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                Dynamic[
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None, "AxesInFront" -> True}, 
              PlotRange -> {All, All}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{0, 0}, {0, 0.1}}, 
              Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Empirical\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["20", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAwBmIQ/Xmu+cn//+/vZ4CCC1M/TWa6cwfO38s482xKyU04
/7jcgZ2dbtfg/Je6ZtOXalyG802T9I879p2H8y+e+nxkr91JOL9Xun/Bj/RD
+2fNBIGT9p8WTNjrlLQdyr9pXzaPm8Nu+1I4/+nEnefMz7Taw/ht95KiXc6v
g/NfPvaf8/Dqbjhfw2XB8sCVR+B8JRNxGd0vp+D8f3Ojb6o8vgDnX14fY2xj
cwXO7xG4e2tC9HU43/RvoXDbvltw/kGLtpk7nt+F8+Ubwm+4rnpgb2IMAo/t
L2W5vN4c8QjO//7nwxKHV4/hfJGr6svnzn0K5y8KkQuQNHkO56tE5zbMPPQC
zp+33O3ny6JXcH7X7PsSkWxv4Py8q0yNM3a/hfPdptUV3Ml4D+d7/I9pnl/z
Ac7PvLb/047Qj3C+c2PT1kSFT3D+9PyPu3meI/jPG5Y+m7/vM5z/IXVnyqH2
L3D+11wh9rOJX+H8zZ6n/6TpfoOGz0v71xkGZsxfEXz51bcmt5/9DufzHHzi
Mnv6Dzj/609jqelFP+0hqeWDfUSZvvFUz19wfsmxrvlKQr/h/B5LbYMZrxH8
2AZtkbnb/sD5K7huWC+p/Qvnv99+sn1y6D84/52FtLqQ/H84v/a576f//3Hx
GRgA8dtlww==
              "], {{{}, {
                 EdgeForm[], 
                 Directive[
                  GrayLevel[0.85]], 
                 GraphicsGroupBox[{
                   
                   PolygonBox[{{7, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41,
                     40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 
                    26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 
                    12, 11, 10, 9, 8}}]}]}, {}, {}}, {{}, {}, {
                 Directive[
                  Opacity[1.], 
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5]], 
                 
                 LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
                  16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 
                  31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 
                  46, 47, 48, 49, 50}]}}}], {
             DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, Background -> GrayLevel[0.93], 
              BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction :> 
              Identity, Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                Dynamic[
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None, "AxesInFront" -> True}, 
              PlotRange -> {All, All}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{0, 0}, {0, 0.1}}, 
              Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Empirical\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["20", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Input dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"1", ",", "6"}], "}"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  DataDistribution["Empirical", {{
     Rational[3, 10], 
     Rational[3, 20], 
     Rational[1, 5], 
     Rational[1, 10], 
     Rational[3, 20], 
     Rational[1, 10]}, {1, 2, 3, 4, 5, 6}, False}, 1, 20],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[26]=",ExpressionUUID->"1142718d-c1ba-46f9-b4a4-80443facd356"]
}, Open  ]],

Cell[TextData[{
 "We can now use ",
 StyleBox["dieDistribution", "Code"],
 " as a probability distribution in functions like ",
 StyleBox[ButtonBox["Probability",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Probability"], "FunctionLink"],
 ". For example, we can calculate the probability that the die shows a value \
of 4 or less."
}], "Text",ExpressionUUID->"a6756649-5982-463a-ba46-80713d7c0cea"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Probability", "[", 
  RowBox[{
   RowBox[{"X", "\[LessEqual]", "4"}], ",", 
   RowBox[{"X", "\[Distributed]", "dieDistribution"}]}], "]"}]], "Input",
 CellLabel->"In[27]:=",ExpressionUUID->"5cc6bfc8-92b8-4b08-be7d-7e5bd1b86d1a"],

Cell[BoxData[
 FractionBox["3", "4"]], "Output",
 CellLabel->"Out[27]=",ExpressionUUID->"85f04f4e-9673-45a7-9803-d95a42ade778"]
}, Open  ]],

Cell[TextData[{
 "We can also graph the distribution by using ",
 StyleBox[ButtonBox["PDF",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/PDF"], "FunctionLink"],
 " and ",
 StyleBox[ButtonBox["DiscretePlot",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/DiscretePlot"], "FunctionLink"],
 "."
}], "Text",ExpressionUUID->"d5f30eb4-6b10-49a0-9acd-89c731328cdb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"PDF", "[", 
    RowBox[{"dieDistribution", ",", "n"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", "6"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[28]:=",ExpressionUUID->"ca106ab1-372f-4ae7-b2ff-f20286a3ea45"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], Opacity[0.2], LineBox[{{{0., 0.}, {0., 0}}},
      VertexColors->None]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], Opacity[0.2], 
     LineBox[{{{1., 0.3}, {1., 0}}, {{2., 0.15}, {2., 0}}, {{3., 0.2}, {
        3., 0}}, {{4., 0.1}, {4., 0}}, {{5., 0.15}, {5., 0}}, {{6., 0.1}, {
        6., 0}}},
      VertexColors->None]}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], {}, 
    PointBox[{{0., 0.}, {1., 0.3}, {2., 0.15}, {3., 0.2}, {4., 0.1}, {5., 
     0.15}, {6., 0.1}}], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{0, 6}, {0, 0.3}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[28]=",ExpressionUUID->"98a7d9ca-f695-4b46-86d9-fd751ca4cfc0"]
}, Open  ]],

Cell[TextData[{
 "The second way you can use ",
 StyleBox[ButtonBox["EmpiricalDistribution",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/EmpiricalDistribution"], "FunctionLink"],
 " is to explicitly specify each data value and corresponding weight. As an \
example, consider the following problem. A die is weighted so that the \
probability of a 1 is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", "/", "9"}], TraditionalForm]],ExpressionUUID->
  "3099c510-240b-432c-ad1c-d8980c8aaf10"],
 ", the probability of a 2 is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "/", "3"}], TraditionalForm]],ExpressionUUID->
  "969fc1d0-85ab-4d2e-850a-830ffad56fe1"],
 ", and the probability of the other values is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "/", "9"}], TraditionalForm]],ExpressionUUID->
  "38b74aa8-911a-44f6-a47c-3168520b6340"],
 " each. What is the probability that the value is less than 3 when the die \
is rolled?"
}], "Text",ExpressionUUID->"73f6e0ce-3d9a-4a25-b7f7-0504956d1855"],

Cell[TextData[{
 "To specify probabilities associated to specific values, you need to list \
the probabilities (or weights) and the values and join the two lists with a \
",
 StyleBox[ButtonBox["Rule",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Rule"], "FunctionLink"],
 " (",
 StyleBox["->", "Code"],
 "). The following is the distribution of the die described above."
}], "Text",ExpressionUUID->"96068efc-0a4e-46c6-ab53-2bc6c77f2102"],

Cell[BoxData[
 RowBox[{"EmpiricalDistribution", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", "/", "9"}], ",", 
     RowBox[{"1", "/", "3"}], ",", 
     RowBox[{"1", "/", "9"}], ",", 
     RowBox[{"1", "/", "9"}], ",", 
     RowBox[{"1", "/", "9"}], ",", 
     RowBox[{"1", "/", "9"}]}], "}"}], "\[Rule]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], "}"}]}], 
  "]"}]], "myCode",
 Editable->False,ExpressionUUID->"b37b9452-f2a6-474a-8542-778b5852b67d"],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " interprets this as meaning that the data values in the list on the \
right-hand side are weighted as per the corresponding entry in the list on \
the left-hand side. That is, 1 has probability ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", "/", "9"}], TraditionalForm]],ExpressionUUID->
  "127687db-adcf-4d99-924e-cbf0c7f57242"],
 ", 2 has probability ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "/", "3"}], TraditionalForm]],ExpressionUUID->
  "45113c42-b228-4693-8940-2937c54539f4"],
 ", etc. Note that it is not necessary for the weights in the list on the \
left-hand side to be probabilities. ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " computes the probabilities of the data values by dividing the \
corresponding weight value by the sum of the weights. Thus, the following \
will also produce the correct distribution for the die."
}], "Text",ExpressionUUID->"d61906aa-cba9-4319-9d26-09510765af9f"],

Cell[BoxData[
 RowBox[{"EmpiricalDistribution", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], 
   "\[Rule]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], "}"}]}], 
  "]"}]], "myCode",
 Editable->False,ExpressionUUID->"d349addf-f18a-469e-9471-32f9d9a6b391"],

Cell[TextData[{
 "The following, therefore, computes the probability that the value is less \
than 3. Note that we use ",
 StyleBox[ButtonBox["Range",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Range"], "FunctionLink"],
 " rather than type the integers 1 through 6."
}], "Text",ExpressionUUID->"07672e43-94fb-4fc7-9f1c-2fea9a33ec36"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Probability", "[", 
  RowBox[{
   RowBox[{"X", "<", "3"}], ",", 
   RowBox[{"X", "\[Distributed]", 
    RowBox[{"EmpiricalDistribution", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}],
       "\[Rule]", 
      RowBox[{"Range", "[", "6", "]"}]}], "]"}]}]}], "]"}]], "Input",
 CellLabel->"In[29]:=",ExpressionUUID->"cad9c3e2-4fef-4f00-a42b-d3ce574d03b9"],

Cell[BoxData[
 FractionBox["5", "9"]], "Output",
 CellLabel->"Out[29]=",ExpressionUUID->"77c0339c-e556-4677-97d5-cc3988e923d0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Combining Empirical Distributions", "Subsubsection",ExpressionUUID->"a3099060-a9ad-4c0b-ad19-0ee06887d4d3"],

Cell[TextData[{
 "A more interesting question is to compute probabilities for the sum of the \
values on a weighted die. For example, consider two loaded dice. One is \
weighted so that the probability that a 1 appears is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", "/", "7"}], TraditionalForm]],ExpressionUUID->
  "adb3f2cc-17ff-47c2-8948-57f4834a2d45"],
 ", and the probabilities of all other values are ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "/", "7"}], TraditionalForm]],ExpressionUUID->
  "0fa58e9c-6460-4cbb-ab7d-1885c48e0058"],
 ". The other is weighted to that the probability of a 4 appearing is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"3", "/", "8"}], TraditionalForm]],ExpressionUUID->
  "faa220ff-b4c9-4b5c-810e-f15d02d4f8a0"],
 ", and the probabilities of all other values are ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "/", "8"}], TraditionalForm]],ExpressionUUID->
  "42a75b6e-9f6d-4e8a-8a0c-f738ee8023c1"],
 ". What is the probability that the sum is 7 when the two dice are rolled?"
}], "Text",ExpressionUUID->"16d98008-c519-41a3-b07d-949f6a7ac2db"],

Cell["\<\
To answer this question, we first define two empirical distributions, which \
we assign to symbols.\
\>", "Text",ExpressionUUID->"7fc0f4de-876a-46c9-a95f-8aa2b3db99b5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"weighted1", "=", 
   RowBox[{"EmpiricalDistribution", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], 
     "\[Rule]", 
     RowBox[{"Range", "[", "6", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"weighted2", "=", 
   RowBox[{"EmpiricalDistribution", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1", ",", "3", ",", "1", ",", "1"}], "}"}], 
     "\[Rule]", 
     RowBox[{"Range", "[", "6", "]"}]}], "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellLabel->"In[30]:=",ExpressionUUID->"c34095b9-6f11-4039-bf80-68a9987529e2"],

Cell["\<\
The example earlier of two Bernoulli distributions suggests that the \
probability of the sum being 7 can be computed as below.\
\>", "Text",ExpressionUUID->"6fc1674d-66d6-4e9e-aca5-694ea1d19cbe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Probability", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"X", "+", "Y"}], "\[Equal]", "7"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"X", "\[Distributed]", "weighted1"}], ",", 
     RowBox[{"Y", "\[Distributed]", "weighted2"}]}], "}"}]}], "]"}]], "Input",\

 InitializationCell->True,
 CellLabel->"In[32]:=",ExpressionUUID->"161aef13-936c-4c95-94bb-ce40356723f4"],

Cell[BoxData[
 FractionBox["9", "56"]], "Output",
 CellLabel->"Out[32]=",ExpressionUUID->"b6e6a4cc-081e-4085-a72a-271af33adfbc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sampling", "Subsubsection",ExpressionUUID->"9f2e3a43-e207-42f9-a99e-bd575061f6d5"],

Cell[TextData[{
 "Given a particular distribution, you may wish to use it to conduct \
experiments or simulations. The process of generating pseudorandom numbers \
according to a given probability distribution is referred to as sampling. In \
the Wolfram Language, the ",
 StyleBox[ButtonBox["RandomVariate",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/RandomVariate"], "FunctionLink"],
 " function is used to sample."
}], "Text",ExpressionUUID->"3631619f-6090-401d-ad38-a68edb917476"],

Cell[TextData[{
 "Recall that a random variable is a function that assigns a real number to \
each possible outcome in a sample space (Definition 6 in Section 7.2 of the \
textbook). A ",
 StyleBox["random variate",
  FontSlant->"Italic"],
 " is a real number obtained by applying the random variable to an outcome \
selected pseudorandomly according to a specified probability distribution. In \
other words, where a random variable describes the relationship between an \
experiment\[CloseCurlyQuote]s sample space and real numbers, a random variate \
is a particular value obtained by performing the experiment."
}], "Text",ExpressionUUID->"ed39d210-a0d3-437f-8d97-62624e514619"],

Cell[TextData[{
 "Applying ",
 StyleBox[ButtonBox["RandomVariate",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/RandomVariate"], "FunctionLink"],
 " to a probability distribution produces a single random sample from that \
distribution. For example, the following expression simulates a binomial \
experiment with 10 trials and probability of success ",
 Cell[BoxData[
  FormBox["0.4", TraditionalForm]],ExpressionUUID->
  "1265313b-f4a7-4c81-8446-b277a6b50231"],
 "."
}], "Text",ExpressionUUID->"db01fc1c-9431-45be-8607-56307ca70fe9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomVariate", "[", 
  RowBox[{"BinomialDistribution", "[", 
   RowBox[{"10", ",", ".4"}], "]"}], "]"}]], "Input",
 CellLabel->"In[33]:=",ExpressionUUID->"903e3422-9199-42ba-b21f-9b021102052a"],

Cell[BoxData["3"], "Output",
 CellLabel->"Out[33]=",ExpressionUUID->"b15750eb-3ee8-4ad7-9f8a-d1f58b8d25ae"]
}, Open  ]],

Cell["\<\
Providing a positive integer as a second argument produces a list of that \
many values. For example, the following simulates a binomial process 1000 \
times.\
\>", "Text",ExpressionUUID->"e42341d2-d66c-4344-849c-ffc467499fe9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"binomialData", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"BinomialDistribution", "[", 
      RowBox[{"20", ",", ".3"}], "]"}], ",", "1000"}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellLabel->"In[34]:=",ExpressionUUID->"f0e0a8c6-05c5-48cb-8533-f556310f6ef0"],

Cell[TextData[{
 "We can use the ",
 StyleBox[ButtonBox["Histogram",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Histogram"], "FunctionLink"],
 " function to draw a histogram of the data. Observe that the data produced \
has approximately the same shape as was produced with ",
 StyleBox[ButtonBox["DiscretePlot",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/DiscretePlot"], "FunctionLink"],
 " above. We use the ",
 StyleBox[ButtonBox["PlotRange",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/PlotRange"], "FunctionLink"],
 " option, first described in Section 2.3 of this manual, to ensure the graph \
shows all of the possible values, not just those actually obtained."
}], "Text",ExpressionUUID->"7da7e31d-6d8e-487b-b6d8-435d903a05d4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{"binomialData", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "20"}], "}"}], ",", "Full"}], "}"}]}]}], 
  "]"}]], "Input",
 InitializationCell->True,
 CellLabel->"In[35]:=",ExpressionUUID->"5de606da-3156-4459-ad24-989ed346da1b"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.581], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.581], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-0.5, 0}, {0.5, 1.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{16.112369895916732`, 32.9886709367494}, {
          92.50885990901303, 93.98934250354516}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.5, 0}, {1.5, 7.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{32.4886709367494, 49.36497197758206}, {
          86.62596434182026, 93.98934250354516}}],
        StatusArea[#, 7]& ,
        TagBoxNote->"7"],
       StyleBox["7", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[7, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1.5, 0}, {2.5, 29.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{48.86497197758206, 65.74127301841472}, {
          65.05534726211346, 93.98934250354516}}],
        StatusArea[#, 29]& ,
        TagBoxNote->"29"],
       StyleBox["29", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[29, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{2.5, 0}, {3.5, 83.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{65.24127301841472, 82.1175740592474}, {
          12.109287157378574`, 93.98934250354516}}],
        StatusArea[#, 83]& ,
        TagBoxNote->"83"],
       StyleBox["83", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[83, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{3.5, 0}, {4.5, 125.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{81.6175740592474, 
          98.49387510008006}, {-29.070981812970786`, 93.98934250354516}}],
        StatusArea[#, 125]& ,
        TagBoxNote->"125"],
       StyleBox["125", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[125, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{4.5, 0}, {5.5, 173.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{97.99387510008006, 
          114.87017614091272`}, {-76.13414635051292, 93.98934250354516}}],
        StatusArea[#, 173]& ,
        TagBoxNote->"173"],
       StyleBox["173", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[173, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{5.5, 0}, {6.5, 200.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{114.37017614091272`, 
          131.24647718174538`}, {-102.60717640288037`, 93.98934250354516}}],
        StatusArea[#, 200]& ,
        TagBoxNote->"200"],
       StyleBox["200", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[200, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{6.5, 0}, {7.5, 155.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{130.74647718174538`, 
          147.62277822257806`}, {-58.48545964893462, 93.98934250354516}}],
        StatusArea[#, 155]& ,
        TagBoxNote->"155"],
       StyleBox["155", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[155, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{7.5, 0}, {8.5, 109.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{147.12277822257806`, 
          163.99907926341072`}, {-13.383260300456755`, 93.98934250354516}}],
        StatusArea[#, 109]& ,
        TagBoxNote->"109"],
       StyleBox["109", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[109, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{8.5, 0}, {9.5, 65.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{163.49907926341072`, 180.37538030424338`}, {
          29.757973858956873`, 93.98934250354516}}],
        StatusArea[#, 65]& ,
        TagBoxNote->"65"],
       StyleBox["65", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[65, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{9.5, 0}, {10.5, 35.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{179.87538030424338`, 196.75168134507604`}, {
          59.172451694920696`, 93.98934250354516}}],
        StatusArea[#, 35]& ,
        TagBoxNote->"35"],
       StyleBox["35", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[35, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{10.5, 0}, {11.5, 10.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{196.25168134507604`, 213.1279823859087}, {
          83.68451655822389, 93.98934250354516}}],
        StatusArea[#, 10]& ,
        TagBoxNote->"10"],
       StyleBox["10", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[10, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{11.5, 0}, {12.5, 6.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{212.6279823859087, 229.50428342674138`}, {
          87.6064469363524, 93.98934250354516}}],
        StatusArea[#, 6]& ,
        TagBoxNote->"6"],
       StyleBox["6", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{13.5, 0}, {14.5, 2.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{245.38058446757404`, 262.2568855084067}, {
          91.5283773144809, 93.98934250354516}}],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.4, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{0, 20}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[35]=",ExpressionUUID->"4d06258c-9fb5-4ad4-9eed-8020e0ae6dbe"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Monte Carlo Methods", "Subsection",
 PageBreakWithin->False,
 CellTags->"Section2b",ExpressionUUID->"d09817ca-8d2a-4cb4-ad01-f42b4e8b262c"],

Cell[TextData[{
 "We can also implement Monte Carlo algorithms in the Wolfram Language. \
Miller\[CloseCurlyQuote]s test for base ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]],ExpressionUUID->
  "94e65544-491b-4950-b48f-147a042b1a6d"],
 " is described in the prelude to Exercise 44 of Section 4.4 of the textbook. \
In that description, it is mentioned that a composite integer ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "a45d768d-8218-49b2-8069-29afe77b5b1c"],
 " passes Miller\[CloseCurlyQuote]s test for base ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]],ExpressionUUID->
  "5492c079-39f6-42be-85fc-050576804ec5"],
 " for fewer than ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "/", "4"}], TraditionalForm]],ExpressionUUID->
  "9101009f-6ecf-4c5e-be61-76628c679c4c"],
 " bases less than ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "3ef080fc-d371-467c-94b6-d30ff7d9dfff"],
 ", and Exercise 44 asked you to show that primes pass Miller\
\[CloseCurlyQuote]s test for all bases that they do not divide. In other \
words, Miller\[CloseCurlyQuote]s test is a probabilistic primality test that \
fails less than one-fourth of the time. In this subsection, we will use \
Miller\[CloseCurlyQuote]s test to create a Monte Carlo primality testing \
function."
}], "Text",
 PageBreakAbove->False,
 PageBreakWithin->
  False,ExpressionUUID->"1d6d1f6a-8ff5-4bbe-af34-939f4cca3457"],

Cell[CellGroupData[{

Cell["Miller\[CloseCurlyQuote]s Test", "Subsubsection",ExpressionUUID->"1bc62d8d-7769-4ac9-899f-c952c49e5e80"],

Cell[TextData[{
 "First, we must implement Miller\[CloseCurlyQuote]s test for base ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]],ExpressionUUID->
  "18fb0017-2027-438e-b5a2-bc10caa605e1"],
 ". Recall the description preceding Exercise 44 in Section 4.4. Let ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "f1fb3def-8dd1-4adb-8f6e-f5fcb0026e3f"],
 " and ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]],ExpressionUUID->
  "c7092032-913b-4833-acf5-34748e9ac11a"],
 " be positive integers. Assume ",
 Cell[BoxData[
  FormBox["s", TraditionalForm]],ExpressionUUID->
  "63609155-0115-4eb7-af21-da8bb1374b7a"],
 " is a nonnegative integer and ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]],ExpressionUUID->
  "f2c18dbc-690e-433c-8685-4af5ab629f9f"],
 " is an odd positive integer such that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"n", "-", "1"}], "=", 
    RowBox[{
     SuperscriptBox["2", "s"], "t"}]}], TraditionalForm]],ExpressionUUID->
  "2b32cabf-f17f-41aa-9957-7bbf1f649f09"],
 ". If ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["b", "t"], "\[Congruent]", 
    RowBox[{"1", " ", 
     RowBox[{"(", 
      RowBox[{"mod", " ", "n"}], ")"}]}]}], TraditionalForm]],ExpressionUUID->
  "685e539e-2b77-4539-9386-b7e8e0829075"],
 " or if there is a ",
 Cell[BoxData[
  FormBox["j", TraditionalForm]],ExpressionUUID->
  "386ec9e6-6bc7-417b-8e36-dcbe75048fc2"],
 " with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", "\[LessEqual]", "j", "\[LessEqual]", 
    RowBox[{"s", "-", "1"}]}], TraditionalForm]],ExpressionUUID->
  "989f6f1a-1a5b-4ffb-ad6b-eee078ac839b"],
 " such that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["b", 
     RowBox[{
      SuperscriptBox["2", "j"], "t"}]], "\[Congruent]", 
    RowBox[{
     RowBox[{"-", "1"}], " ", 
     RowBox[{"(", 
      RowBox[{"mod", " ", "n"}], ")"}]}]}], TraditionalForm]],ExpressionUUID->
  "feedde85-77ce-4948-bb88-d039afe5848f"],
 ", then ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "e33589e1-08cf-4901-8f31-580f23b4a8e1"],
 " is said to pass Miller\[CloseCurlyQuote]s test for base ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]],ExpressionUUID->
  "0fc60404-3538-4ca2-b326-4174ac4892d4"],
 "."
}], "Text",ExpressionUUID->"e452a1bf-9999-46bb-9b58-9a7f06291587"],

Cell[TextData[{
 "To implement Miller\[CloseCurlyQuote]s test, we first must calculate ",
 Cell[BoxData[
  FormBox["s", TraditionalForm]],ExpressionUUID->
  "3e2dc7aa-8734-430f-9e73-8cd9ffa8fdfa"],
 " and ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]],ExpressionUUID->
  "764b1d94-06ff-48c8-a016-11ff6a7453fe"],
 ". Initialize ",
 Cell[BoxData[
  FormBox["s", TraditionalForm]],ExpressionUUID->
  "7c87eea8-19da-4741-a341-c4b0e4d16e6e"],
 " to 0 and set ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]],ExpressionUUID->
  "bb16ca81-7e2b-499c-bfc4-a08716b88d64"],
 " equal to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "-", "1"}], TraditionalForm]],ExpressionUUID->
  "928ef854-8057-4053-b6fc-546715032d0b"],
 ". If ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]],ExpressionUUID->
  "0e2992f7-5bec-4e16-a4f2-b7a1618822de"],
 " is even, we add 1 to ",
 Cell[BoxData[
  FormBox["s", TraditionalForm]],ExpressionUUID->
  "1cbe0cd3-d5f9-4772-a864-8697e3e2164c"],
 " and divide ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]],ExpressionUUID->
  "2fd150b0-802a-45d9-b70a-65c7e59c1ceb"],
 " by 2. When ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]],ExpressionUUID->
  "37f65dd6-510e-493e-80e0-a8959071d438"],
 " is no longer even, then ",
 Cell[BoxData[
  FormBox["s", TraditionalForm]],ExpressionUUID->
  "915b5a64-4d4a-4221-838a-c9b9d9d30aac"],
 " and ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]],ExpressionUUID->
  "ce8814a0-c2a5-4927-8765-3ee99a401e4a"],
 " are the correct values."
}], "Text",ExpressionUUID->"1e4ba5fa-cfff-4e45-8cf6-93e4e46386f6"],

Cell[TextData[{
 "Once ",
 Cell[BoxData[
  FormBox["s", TraditionalForm]],ExpressionUUID->
  "1911f3ee-16c3-40da-9031-74c282d651d2"],
 " and ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]],ExpressionUUID->
  "a8ed4d9b-a11d-462f-9f00-e263bcb6aed6"],
 " have been calculated, we check the congruence ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["b", "t"], "\[Congruent]", 
    RowBox[{"1", " ", 
     RowBox[{"(", 
      RowBox[{"mod", " ", "n"}], ")"}]}]}], TraditionalForm]],ExpressionUUID->
  "8b8c11ea-e792-434c-b6f9-9afe8cd43c72"],
 ". If that congruence is satisfied, then ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "f51e00f9-a33a-4c4f-9a4c-049c3da7eb22"],
 " passes Miller\[CloseCurlyQuote]s test and we return ",
 StyleBox[ButtonBox["True",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/True"], "FunctionLink"],
 ". Otherwise, we begin testing the congruences ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["b", 
     RowBox[{
      SuperscriptBox["2", "j"], "t"}]], "\[Congruent]", 
    RowBox[{
     RowBox[{"-", "1"}], " ", 
     RowBox[{"(", 
      RowBox[{"mod", " ", "n"}], ")"}]}]}], TraditionalForm]],ExpressionUUID->
  "f3bc6e15-456f-4464-8c06-2653b929748e"],
 ". A ",
 StyleBox[ButtonBox["For",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/For"], "FunctionLink"],
 " loop assigns ",
 Cell[BoxData[
  FormBox["j", TraditionalForm]],ExpressionUUID->
  "b07a08e9-0386-4a17-96ee-965f59b50ac3"],
 " to each integer from 0 to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"s", "-", "1"}], TraditionalForm]],ExpressionUUID->
  "52b5d6ae-6a98-4579-8adb-284f65e36ac0"],
 " and inside the ",
 StyleBox[ButtonBox["For",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/For"], "FunctionLink"],
 " loop, the congruence is tested. If any congruence holds, the function \
returns ",
 StyleBox[ButtonBox["True",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/True"], "FunctionLink"],
 ". (Recall from Section 4.1 of this manual that for exponentiation, ",
 StyleBox[ButtonBox["PowerMod",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/PowerMod"], "FunctionLink"],
 " applied to an integer, an exponent, and a base is much more efficient than \
",
 StyleBox[ButtonBox["Mod",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Mod"], "FunctionLink"],
 ". However, it returns the smallest positive integer congruent to its first \
argument modulo its second argument. That is, it will not return ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", "1"}], TraditionalForm]],ExpressionUUID->
  "991e677a-4b4a-48d2-82a1-a40e9bd564d0"],
 ". Thus, we test for congruence to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", "1"}], TraditionalForm]],ExpressionUUID->
  "746e6002-f4fb-4752-95b7-bc08415b46a9"],
 " modulo ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "4b21d0e4-121d-4ca7-8873-4e26bf915651"],
 " by comparing the result to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "-", "1"}], TraditionalForm]],ExpressionUUID->
  "8b624334-b135-49e6-b40c-9dd7dbe61bf8"],
 ".) If the function completes without having returned ",
 StyleBox[ButtonBox["True",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/True"], "FunctionLink"],
 ", then it returns ",
 StyleBox[ButtonBox["False",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/False"], "FunctionLink"],
 "."
}], "Text",ExpressionUUID->"42e39b49-a2bb-4fd3-8bd4-55884d8dc5e5"],

Cell[TextData[{
 "Note that we use ",
 StyleBox[ButtonBox["Catch",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Catch"], "FunctionLink"],
 " and ",
 StyleBox[ButtonBox["Throw",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Throw"], "FunctionLink"],
 " in order to ensure that the result becomes the output of the function."
}], "Text",ExpressionUUID->"1ae6e74d-5279-4ad8-97e6-dd08298b88ef"],

Cell[BoxData[
 RowBox[{
  RowBox[{"miller", "[", 
   RowBox[{"n_Integer", ",", "b_Integer"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"s", "=", "0"}], ",", 
      RowBox[{"t", "=", 
       RowBox[{"n", "-", "1"}]}], ",", "j"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Mod", "[", 
         RowBox[{"t", ",", "2"}], "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"t", "=", 
         RowBox[{"t", "/", "2"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"s", "++"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Catch", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"PowerMod", "[", 
           RowBox[{"b", ",", "t", ",", "n"}], "]"}], "\[Equal]", "1"}], ",", 
         RowBox[{"Throw", "[", "True", "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", "0"}], ",", 
         RowBox[{"j", "\[LessEqual]", 
          RowBox[{"s", "-", "1"}]}], ",", 
         RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"PowerMod", "[", 
             RowBox[{"b", ",", 
              RowBox[{
               RowBox[{"2", "^", "j"}], "*", "t"}], ",", "n"}], "]"}], 
            "\[Equal]", 
            RowBox[{"n", "-", "1"}]}], ",", 
           RowBox[{"Throw", "[", "True", "]"}]}], "]"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Throw", "[", "False", "]"}]}], "\[IndentingNewLine]", 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellLabel->"In[36]:=",ExpressionUUID->"f6638d7f-3ec1-4822-bae6-938e29c3e1d8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Monte Carlo Primality Test", "Subsubsection",ExpressionUUID->"bec5620d-e199-4330-8d20-063170bcd7f4"],

Cell[TextData[{
 "Now, we use Miller\[CloseCurlyQuote]s test to implement a Monte Carlo \
primality testing algorithm, as described in Example 16 in Section 7.2 of the \
text. The question the Monte Carlo algorithm is going to answer is \
\[OpenCurlyDoubleQuote]Is ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "934b8b5d-822f-4a38-b025-b7219bd4d82f"],
 " composite?\[CloseCurlyDoubleQuote] for an integer ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "21b16184-9174-4044-aff9-603119ab8691"],
 ". For each iteration, the algorithm will select a random base ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]],ExpressionUUID->
  "11dd8ad1-609a-41f7-8e3c-354499e7afe6"],
 " with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "<", "b", "<", "n"}], TraditionalForm]],ExpressionUUID->
  "d1571b92-8fa5-4c3d-ae7a-6cd5eeb08ce3"],
 " and check to see if ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "0f706a03-5671-4847-b83e-c0e03c709159"],
 " passes Miller\[CloseCurlyQuote]s test for base ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]],ExpressionUUID->
  "ee7fa4ba-76f9-4fda-a65b-a60c99b797a2"],
 ". If Miller\[CloseCurlyQuote]s test returns false, then we know that ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "5a4722cc-c2f0-4af2-8cad-741d25211492"],
 " is composite and the Monte Carlo algorithm will return \
\[OpenCurlyDoubleQuote]Composite.\[CloseCurlyDoubleQuote] If Miller\
\[CloseCurlyQuote]s test returns true, then the iteration results in \
\[OpenCurlyDoubleQuote]unknown\[CloseCurlyDoubleQuote] and the next iteration \
is started. After 30 iterations, if Miller\[CloseCurlyQuote]s test has only \
resulted in true, then the algorithm will return \
\[OpenCurlyDoubleQuote]Prime,\[CloseCurlyDoubleQuote] indicating that it is \
very likely that the number is prime. Since Miller\[CloseCurlyQuote]s test \
falsely identifies a composite as prime less than one-fourth of the time, the \
probability that the Monte Carlo algorithm with 30 trials will incorrectly \
identify a composite number as prime is"
}], "Text",ExpressionUUID->"876bda10-5b6b-4b73-acbd-cb82a52672a4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "/", "4"}], ")"}], "^", "30"}], "//", "N"}]], "Input",
 CellLabel->"In[37]:=",ExpressionUUID->"255ce53e-801a-4740-8b38-180693b7f9b5"],

Cell[BoxData["8.673617379884035`*^-19"], "Output",
 CellLabel->"Out[37]=",ExpressionUUID->"6df0f563-1718-426e-886b-f350775b082e"]
}, Open  ]],

Cell["Here is the Miller Monte Carlo test:", "Text",ExpressionUUID->"30a53f07-50b3-44c6-9175-59186aba5b48"],

Cell[BoxData[
 RowBox[{
  RowBox[{"millerMC", "[", "n_Integer", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "b", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Catch", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"b", "=", 
          RowBox[{"RandomInteger", "[", 
           RowBox[{"{", 
            RowBox[{"2", ",", 
             RowBox[{"n", "-", "1"}]}], "}"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"miller", "[", 
             RowBox[{"n", ",", "b"}], "]"}]}], ",", 
           RowBox[{"Throw", "[", "\"\<Composite\>\"", "]"}]}], "]"}]}], 
        "\[IndentingNewLine]", ",", "30"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Throw", "[", "\"\<Prime\>\"", "]"}]}], "\[IndentingNewLine]", 
     "]"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellLabel->"In[38]:=",ExpressionUUID->"29b9eda3-d3ff-4a06-a53d-caeca0301de6"],

Cell[TextData[{
 "Note the use of ",
 StyleBox[ButtonBox["Do",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Do"], "FunctionLink"],
 ", with second argument ",
 StyleBox["30", "Code"],
 ". This causes the body of the loop to be executed 30 times without \
assigning a loop variable, which in this case is not needed. The ",
 StyleBox[ButtonBox["RandomInteger",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/RandomInteger"], "FunctionLink"],
 " function applied to a list of two integers, with the first smaller than \
the second, produces a randomly selected integer in the range specified by \
the values."
}], "Text",ExpressionUUID->"9b4caf8a-dd11-42ae-bc97-780d0b41d65f"],

Cell[TextData[{
 "We can now use ",
 StyleBox["millerMC", "Code"],
 " to test an integer to see if it is prime. We can use the Wolfram Language\
\[CloseCurlyQuote]s ",
 StyleBox[ButtonBox["Prime",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Prime"], "FunctionLink"],
 " function to find the ",
 Cell[BoxData[
  FormBox["40000", TraditionalForm]],ExpressionUUID->
  "a3574413-e5d6-416c-ae96-cdf9b3067a47"],
 StyleBox["th",
  IgnoreSpellCheck->True],
 " prime and then check that our algorithm confirms that it is prime."
}], "Text",ExpressionUUID->"2f9bd718-38a0-4979-b814-b38d84d979e6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Prime", "[", "40000", "]"}]], "Input",
 CellLabel->"In[39]:=",ExpressionUUID->"03fb2b72-7cb3-4fc5-9c77-f03a63a2f546"],

Cell[BoxData["479909"], "Output",
 CellLabel->"Out[39]=",ExpressionUUID->"0f8a954f-b285-4ffd-a127-bce57b769a42"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"millerMC", "[", "479909", "]"}]], "Input",
 CellLabel->"In[40]:=",ExpressionUUID->"467890ff-dc69-42c8-8120-21c350e2e4f8"],

Cell[BoxData["\<\"Prime\"\>"], "Output",
 CellLabel->"Out[40]=",ExpressionUUID->"78222199-ad22-4b09-8501-63423c7b2c63"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["7.3 Bayes\[CloseCurlyQuote] Theorem", "Section",
 CellTags->"Section3",ExpressionUUID->"d5a73d40-2fe4-4715-9aa5-eaf593825c33"],

Cell[TextData[{
 "Section 7.3 focuses on applications of Bayes\[CloseCurlyQuote] Theorem, \
which asserts that for events ",
 Cell[BoxData[
  FormBox["E", TraditionalForm]],ExpressionUUID->
  "6c66efd1-c8d3-4cf6-86ec-1efc922582e7"],
 " and ",
 Cell[BoxData[
  FormBox["F", TraditionalForm]],ExpressionUUID->
  "a10758c2-d5da-43ec-9bb7-e2d2a29aed48"],
 " from a sample space ",
 Cell[BoxData[
  FormBox["S", TraditionalForm]],ExpressionUUID->
  "1c0d208e-0f8c-48fe-b13e-e02fe0f5501e"],
 " with ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"p", "(", "E", ")"}], "\[NotEqual]", "0"}], TraditionalForm]],
  ExpressionUUID->"31281cad-74e7-4b6b-9469-0618b4668a37"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"p", "(", "F", ")"}], "\[NotEqual]", "0"}], TraditionalForm]],
  ExpressionUUID->"d6a7ca95-cac9-4b31-90a7-6b0d8425b17d"],
 ", one has"
}], "Text",ExpressionUUID->"d9fd75d1-5c55-4cb7-9c45-68d6f224f784"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"p", "(", 
    RowBox[{"F", "|", "E"}], ")"}], "=", 
   FractionBox[
    RowBox[{
     RowBox[{"p", "(", 
      RowBox[{"E", "|", "F"}], ")"}], 
     RowBox[{"p", "(", "F", ")"}]}], 
    RowBox[{
     RowBox[{
      RowBox[{"p", "(", 
       RowBox[{"E", "|", "F"}], ")"}], 
      RowBox[{"p", "(", "F", ")"}]}], "+", 
     RowBox[{
      RowBox[{"p", "(", 
       RowBox[{"E", "|", 
        OverscriptBox["F", "_"]}], ")"}], 
      RowBox[{"p", "(", 
       OverscriptBox["F", "_"], ")"}]}]}]]}], TraditionalForm]], "Equation",Ex\
pressionUUID->"edefb456-72bd-4eb4-948d-48bf4eaea0f2"],

Cell[TextData[{
 "The text describes how to use this theorem to create a Bayesian spam \
filter. We will use ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to implement such a filter."
}], "Text",ExpressionUUID->"db12b135-dc51-492f-a9ef-161862b307e0"],

Cell[TextData[{
 "Recall the notation from the text. A message is received containing the \
word ",
 Cell[BoxData[
  FormBox["w", TraditionalForm]],ExpressionUUID->
  "fdca1ca9-0770-45a8-91f6-855da4c4627a"],
 ". The event ",
 Cell[BoxData[
  FormBox["S", TraditionalForm]],ExpressionUUID->
  "632f8054-6bcb-4340-886e-85af26650e72"],
 " will be the event that the message is spam and the event ",
 Cell[BoxData[
  FormBox["E", TraditionalForm]],ExpressionUUID->
  "2acf25bf-aa38-40f5-ab9c-419bd0d8f256"],
 " is the event that the message contains the word ",
 Cell[BoxData[
  FormBox["w", TraditionalForm]],ExpressionUUID->
  "c4e85438-de9f-48fa-9920-298ffbc22ca8"],
 ". If we assume that a message is as likely to be spam as not, so that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"p", "(", "S", ")"}], "=", 
    RowBox[{
     RowBox[{"p", "(", 
      OverscriptBox["S", "_"], ")"}], "=", 
     FractionBox["1", "2"]}]}], TraditionalForm]],ExpressionUUID->
  "94ed9f29-0864-485a-b0ee-68d72c2aba29"],
 ", then Bayes\[CloseCurlyQuote] Theorem tells us that the probability that \
the incoming message is spam given that it contains the word ",
 Cell[BoxData[
  FormBox["w", TraditionalForm]],ExpressionUUID->
  "879ba2c9-b9d0-4d0a-aa51-7dbe09268cbc"],
 " is:"
}], "Text",ExpressionUUID->"c6a99d6e-cc4e-4b54-a7f2-0db00a403ded"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"p", "(", 
    RowBox[{"S", "|", "E"}], ")"}], "=", 
   FractionBox[
    RowBox[{"p", "(", 
     RowBox[{"E", "|", "S"}], ")"}], 
    RowBox[{
     RowBox[{"p", "(", 
      RowBox[{"E", "|", "S"}], ")"}], "+", 
     RowBox[{"p", "(", 
      RowBox[{"E", "|", 
       OverscriptBox["S", "_"]}], ")"}]}]]}], TraditionalForm]], "Equation",Ex\
pressionUUID->"0feb98ab-0094-441a-b3d1-268bf641f501"],

Cell["\<\
By estimating the conditional probabilities with empirical data, we can \
compute an estimate that the given message is spam. \
\>", "Text",ExpressionUUID->"411a4c09-42b0-42a2-a56a-ece182f85169"],

Cell[TextData[{
 "Before building the spam filter, we will first need messages to serve as \
spam and ",
 StyleBox["nonspam",
  IgnoreSpellCheck->True],
 ". For the spam messages, we will use the sonnets of William Shakespeare, \
and for the ",
 StyleBox["nonspam",
  IgnoreSpellCheck->True],
 " messages, we will use sonnets written by Shakespeare\[CloseCurlyQuote]s \
contemporaries, Michael ",
 StyleBox["Drayton",
  IgnoreSpellCheck->True],
 ", Bartholomew Griffin, and William Smith, published in the book ",
 StyleBox["Elizabethan Sonnet Cycles",
  FontSlant->"Italic"],
 "."
}], "Text",ExpressionUUID->"67a960b9-d7d7-4ae2-a4f3-de87eb7b6537"],

Cell[TextData[{
 "It may seem strange to consider Shakespeare\[CloseCurlyQuote]s sonnets to \
be spam, but consider the goals and methods of a Bayesian spam filter. The \
goal of a spam filter is to filter out the \[OpenCurlyDoubleQuote]junk mail.\
\[CloseCurlyDoubleQuote] In the case of the Bayesian filter described by the \
text, these filters work by comparing the specific words used by authors of \
spam in contrast to authors of ",
 StyleBox["nonspam",
  IgnoreSpellCheck->True],
 " messages. Think about email messages you receive from your classmates \
versus messages your professors may send you. Chances are good that you and \
your peers use more slang and generally less formal English when writing to \
each other than you and your professor use when communicating. This can apply \
to individual writers, like a mathematics professor versus a literature \
professor. A literature professor, for example, is not likely to use words \
like \[OpenCurlyDoubleQuote]Bayes\[CloseCurlyQuote] Theorem\
\[CloseCurlyDoubleQuote] in an email to you. A Bayesian spam filter can pick \
up on these differences in word choice and filter messages based on the \
assumption that different authors generally use different words. We will see, \
by comparing Shakespeare with other Elizabethan sonnet writers, that a \
Bayesian filter can even distinguish one author from others writing at the \
same time, for the same audience, and in a similar form."
}], "Text",ExpressionUUID->"d468efaa-9d87-461b-bc8d-948ae365fde7"],

Cell[CellGroupData[{

Cell["Obtaining Data", "Subsubsection",ExpressionUUID->"c5472550-08d1-4f48-8c59-96b775626171"],

Cell[TextData[{
 "On the website for this manual, you will find these three files: \
\[OpenCurlyDoubleQuote]ShakespeareData.",
 StyleBox["txt",
  IgnoreSpellCheck->True],
 "\[CloseCurlyDoubleQuote], \[OpenCurlyDoubleQuote]ElizabethanData.",
 StyleBox["txt",
  IgnoreSpellCheck->True],
 "\[CloseCurlyDoubleQuote], and \[OpenCurlyDoubleQuote]testMessages.",
 StyleBox["txt",
  IgnoreSpellCheck->True],
 "\[CloseCurlyDoubleQuote]. The first two contain the sonnets of Shakespeare \
and the other authors, respectively. Five of Shakespeare\[CloseCurlyQuote]s \
poems and five of the other authors\[CloseCurlyQuote] poems were randomly \
selected and moved to the \[OpenCurlyDoubleQuote]testMessages.",
 StyleBox["txt",
  IgnoreSpellCheck->True],
 "\[CloseCurlyDoubleQuote] file. We will use our filter on the poems in this \
file to determine which of them were written by Shakespeare and which were \
not."
}], "Text",ExpressionUUID->"1d6e6f74-5c8d-4a30-aeb0-86f65ab2fdb3"],

Cell[TextData[{
 "Begin by downloading the three files and storing them in the same directory \
as your ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " Notebook. Then, load the three files and store the text in variables using \
the ",
 StyleBox[ButtonBox["Import",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Import"], "FunctionLink"],
 " function, as shown below."
}], "Text",ExpressionUUID->"0e573dcb-e445-48a4-a360-b90a79f09fc6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"shakespeare", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<ShakespeareData.txt\>\"", ",", 
     RowBox[{"Path", "\[Rule]", 
      RowBox[{"NotebookDirectory", "[", "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[41]:=",ExpressionUUID->"65f32c93-8293-48a9-b9a8-a1ccea8ab905"],

Cell[BoxData[
 RowBox[{
  RowBox[{"elizabethan", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<ElizabethanData.txt\>\"", ",", 
     RowBox[{"Path", "\[Rule]", 
      RowBox[{"NotebookDirectory", "[", "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[42]:=",ExpressionUUID->"0e4f53ed-e42f-4b79-bb75-58c211d2ba8f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"test", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<testMessages.txt\>\"", ",", 
     RowBox[{"Path", "\[Rule]", 
      RowBox[{"NotebookDirectory", "[", "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[43]:=",ExpressionUUID->"93d5c465-3d19-4f30-8215-ff12637f7da9"],

Cell[TextData[{
 "The ",
 StyleBox[ButtonBox["Import",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Import"], "FunctionLink"],
 " function is able to load a variety of file types for processing with ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ", including images, sounds, video, spreadsheets, and many others. In this \
case, ",
 StyleBox[ButtonBox["Import",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Import"], "FunctionLink"],
 " loads the files, which consist exclusively of text, and stores them as a \
string. The ",
 StyleBox[ButtonBox["Path",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Path"], "FunctionLink"],
 " option is used to tell ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " what directory on your computer contains the file. The ",
 StyleBox[ButtonBox["NotebookDirectory",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/NotebookDirectory"], "FunctionLink"],
 " function, which takes no arguments, returns the directory in which the \
current notebook is stored. Provided that you downloaded the three data files \
to the same directory as the one containing the notebook from which you \
execute the import command, the above should load the three files. If not, \
you may need to move the files to the correct location or specify the path \
manually."
}], "Text",ExpressionUUID->"585fa119-9fb7-473b-b238-734129158916"],

Cell[TextData[{
 "If you inspect these files in a text editor, you will see that the sonnets \
are separated by three ampersands (\[OpenCurlyDoubleQuote]&&&\
\[CloseCurlyDoubleQuote]). The three expressions above store each of the \
files as a single string. It would be more useful to store them as lists of \
strings, with each sonnet being one element of a list. To separate the files \
into lists, we use ",
 StyleBox[ButtonBox["StringSplit",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/StringSplit"], "FunctionLink"],
 "."
}], "Text",ExpressionUUID->"1c6741d1-5384-4e4a-acd0-d601429a2297"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sPoems", "=", 
   RowBox[{"StringSplit", "[", 
    RowBox[{"shakespeare", ",", "\"\<&&&\>\""}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[44]:=",ExpressionUUID->"5235e132-bb6e-4e47-9ab7-268eef47542d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ePoems", "=", 
   RowBox[{"StringSplit", "[", 
    RowBox[{"elizabethan", ",", "\"\<&&&\>\""}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[45]:=",ExpressionUUID->"0e03f4aa-b40c-4d05-a6c1-25f3c18704e4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"testPoems", "=", 
   RowBox[{"StringSplit", "[", 
    RowBox[{"test", ",", "\"\<&&&\>\""}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[46]:=",ExpressionUUID->"8bb66243-ffcc-4661-8891-41f435759367"],

Cell[TextData[{
 "The ",
 StyleBox[ButtonBox["StringSplit",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/StringSplit"], "FunctionLink"],
 " function splits the string in the first argument based on the pattern \
given in the second argument. In this case, the pattern is the string \
\[OpenCurlyDoubleQuote]&&&\[CloseCurlyDoubleQuote]; so, the ",
 StyleBox[ButtonBox["StringSplit",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/StringSplit"], "FunctionLink"],
 " command uses that pattern as a delimiter in the ",
 StyleBox["shakespeare", "Code",
  IgnoreSpellCheck->True],
 ", ",
 StyleBox["elizabethan", "Code",
  IgnoreSpellCheck->True],
 ", and ",
 StyleBox["test", "Code"],
 " strings to separate them into lists. Now that the \
\[OpenCurlyDoubleQuote]messages\[CloseCurlyDoubleQuote] are prepared, we \
begin building the filter."
}], "Text",ExpressionUUID->"185dba58-ce1c-4499-ad63-20e5456487cc"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Estimating the Probabilities", "Subsubsection",ExpressionUUID->"a04ac4c5-7e4c-4c6e-ab2f-b682f02d2371"],

Cell[TextData[{
 "The spam filter relies on two computations: first, the probability that a \
message contains a specified word given that it is spam, and second, the \
probability that a message contains the word given that it is not spam. That \
is, we will need empirical estimates for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"p", "(", 
    RowBox[{"E", "|", "S"}], ")"}], TraditionalForm]],ExpressionUUID->
  "d1a8ad2a-94cb-4b80-9284-59f14793ebe5"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"p", "(", 
    RowBox[{"E", "|", 
     OverscriptBox["S", "_"]}], ")"}], TraditionalForm]],ExpressionUUID->
  "dba133fa-9056-4510-80d3-0f0f81d281c7"],
 "."
}], "Text",ExpressionUUID->"f4371352-51c3-4d72-b36d-719e57453fe2"],

Cell[TextData[{
 "Following the notation of the textbook, for a word ",
 Cell[BoxData[
  FormBox["w", TraditionalForm]],ExpressionUUID->
  "a80bc93d-2a78-4d20-8b28-58745d91f1a3"],
 ", let ",
 Cell[BoxData[
  FormBox[
   RowBox[{"p", "(", "w", ")"}], TraditionalForm]],ExpressionUUID->
  "c2be66cf-21ce-4c59-9c26-c7ab6df012e8"],
 " be the estimate of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"p", "(", 
    RowBox[{"E", "|", "S"}], ")"}], TraditionalForm]],ExpressionUUID->
  "f2ead01f-4ad0-426c-983e-7fe31c5c8de2"],
 ", the probability that a message contains ",
 Cell[BoxData[
  FormBox["w", TraditionalForm]],ExpressionUUID->
  "700edfbc-00c6-4859-a6c7-2b075bebaffc"],
 " given that it is spam. That is, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"p", "(", "w", ")"}], TraditionalForm]],ExpressionUUID->
  "26ce49dc-7cf0-4db7-9499-bed8a8170e1c"],
 " is the number of spam messages containing the word ",
 Cell[BoxData[
  FormBox["w", TraditionalForm]],ExpressionUUID->
  "49712bd5-97e5-42c0-8ca2-e26a356ea8b5"],
 " divided by the number of spam messages. Likewise, let ",
 Cell[BoxData[
  FormBox[
   RowBox[{"q", "(", "w", ")"}], TraditionalForm]],ExpressionUUID->
  "485e44c2-0ed5-46d8-8d4b-0e8d5b4e1e3a"],
 " be the estimate for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"p", "(", 
    RowBox[{"E", "|", 
     OverscriptBox["S", "_"]}], ")"}], TraditionalForm]],ExpressionUUID->
  "21dc324e-0db2-4e3b-b22b-72f82344cb00"],
 ", the probability that a message contains ",
 Cell[BoxData[
  FormBox["w", TraditionalForm]],ExpressionUUID->
  "9b081595-e9dd-4f83-aef1-fb6150ce94ab"],
 " given that it is not spam. This is computed as the number of ",
 StyleBox["nonspam",
  IgnoreSpellCheck->True],
 " messages containing ",
 Cell[BoxData[
  FormBox["w", TraditionalForm]],ExpressionUUID->
  "daecf841-23bb-464a-9ceb-470997f5df20"],
 " divided by the number of ",
 StyleBox["nonspam",
  IgnoreSpellCheck->True],
 " messages."
}], "Text",ExpressionUUID->"4717dd37-49b7-4663-85b3-2effd1455029"],

Cell[TextData[{
 "Counting the number of messages (i.e., poems) in each list can be done with \
",
 StyleBox[ButtonBox["Length",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Length"], "FunctionLink"],
 "."
}], "Text",ExpressionUUID->"18f00b3e-c250-4a1c-b060-07752c0d8521"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "sPoems", "]"}]], "Input",
 CellLabel->"In[47]:=",ExpressionUUID->"f6ca3b33-92d5-4c1d-9108-7a1b18ae61cb"],

Cell[BoxData["149"], "Output",
 CellLabel->"Out[47]=",ExpressionUUID->"5e816e8f-5712-4c60-9fab-5bfad85f166d"]
}, Open  ]],

Cell[TextData[{
 "(This is five less than the 154 sonnets that Shakespeare published, because \
five of them were moved to the \[OpenCurlyDoubleQuote]testMessages.",
 StyleBox["txt",
  IgnoreSpellCheck->True],
 "\[CloseCurlyDoubleQuote] file as \[OpenCurlyDoubleQuote]unknown\
\[CloseCurlyDoubleQuote] messages.)"
}], "Text",ExpressionUUID->"bd83e729-0687-4c74-a765-2d114eede75b"],

Cell[TextData[{
 "To count the number of messages that contain a particular word, we make use \
of ",
 StyleBox[ButtonBox["StringFreeQ",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/StringFreeQ"], "FunctionLink"],
 ". This function accepts as arguments a string and a string pattern and \
returns true if the pattern does not appear in the string and false if it \
does. As a first example, the following determines that the substring \
\[OpenCurlyDoubleQuote]",
 StyleBox["bc",
  IgnoreSpellCheck->True],
 "\[CloseCurlyDoubleQuote] does appear in the string \
\[OpenCurlyDoubleQuote]",
 StyleBox["abcdefg",
  IgnoreSpellCheck->True],
 "\[CloseCurlyDoubleQuote]."
}], "Text",ExpressionUUID->"de77b75c-f424-41d2-aecb-34a900e74b3b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringFreeQ", "[", 
  RowBox[{"\"\<abcdefg\>\"", ",", "\"\<bc\>\""}], "]"}]], "Input",
 CellLabel->"In[48]:=",ExpressionUUID->"1cf396a8-5a4e-4305-99b5-8dcd0bc72273"],

Cell[BoxData["False"], "Output",
 CellLabel->"Out[48]=",ExpressionUUID->"17652cd0-43c2-4728-ad02-40f82c46be00"]
}, Open  ]],

Cell["\<\
However, this is not quite sufficient to check for the presence of words. To \
see why, consider the fifth sonnet.\
\>", "Text",ExpressionUUID->"2781a887-5d62-48b8-99fc-bc035590ffd8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sPoems", "[", 
  RowBox[{"[", "5", "]"}], "]"}]], "Input",
 CellLabel->"In[49]:=",ExpressionUUID->"cb0e9c21-6399-47e0-898a-434d38a36497"],

Cell[BoxData["\<\"\\nThose hours, that with gentle work did frame\\nThe \
lovely gaze where every eye doth dwell,\\nWill play the tyrants to the very \
same\\nAnd that unfair which fairly doth excel;\\nFor never-resting time \
leads summer on\\nTo hideous winter, and confounds him there;\\nSap checked \
with frost, and lusty leaves quite gone,\\nBeauty o'er-snowed and bareness \
every where:\\nThen were not summer's distillation left,\\nA liquid prisoner \
pent in walls of glass,\\nBeauty's effect with beauty were bereft,\\nNor it, \
nor no remembrance what it was:\\n  But flowers distill'd, though they with \
winter meet,\\n  Leese but their show; their substance still lives \
sweet.\\n\"\>"], "Output",
 CellLabel->"Out[49]=",ExpressionUUID->"6a17128e-c149-44a4-b374-f8f05d31b96e"]
}, Open  ]],

Cell[TextData[{
 "If you look carefully, you will see that this poem does not contain the \
English word \[OpenCurlyDoubleQuote]so\[CloseCurlyDoubleQuote]. However, ",
 StyleBox[ButtonBox["StringFreeQ",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/StringFreeQ"], "FunctionLink"],
 " returns false, indicating the presence of \[OpenCurlyDoubleQuote]so\
\[CloseCurlyDoubleQuote]:"
}], "Text",ExpressionUUID->"ef04db33-340c-4d1f-a7fb-27f6fe61b52c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringFreeQ", "[", 
  RowBox[{
   RowBox[{"sPoems", "[", 
    RowBox[{"[", "5", "]"}], "]"}], ",", "\"\<so\>\""}], "]"}]], "Input",
 CellLabel->"In[50]:=",ExpressionUUID->"566b00a8-459c-4d5f-ac64-0cf4ff85019f"],

Cell[BoxData["False"], "Output",
 CellLabel->"Out[50]=",ExpressionUUID->"6988ae90-5346-4030-b84c-20080b35b874"]
}, Open  ]],

Cell["\<\
The reason for this is the presence of the letters \[OpenCurlyDoubleQuote]so\
\[CloseCurlyDoubleQuote] within the word \[OpenCurlyDoubleQuote]prisoner\
\[CloseCurlyDoubleQuote] in line 10. To avoid this, we need to indicate that \
the word being sought must be surrounded by characters that do not appear in \
words. To do this, we use the pattern\
\>", "Text",ExpressionUUID->"b4b38070-5ccf-419a-afcb-00b1b59d4c45"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Except", "[", 
   RowBox[{"WordCharacter", "|", "\"\<'\>\""}], "]"}], "~~", "\"\<so\>\"", "~~", 
  RowBox[{"Except", "[", 
   RowBox[{"WordCharacter", "|", "\"\<'\>\""}], "]"}]}]], "myCode",
 Editable->False,ExpressionUUID->"8f80436c-7aa4-462c-9bc3-61a9b8b86d93"],

Cell[TextData[{
 "At the center of the pattern above is the word being sought, \
\[OpenCurlyDoubleQuote]so\[CloseCurlyDoubleQuote]. On either side of \
\[OpenCurlyDoubleQuote]so\[CloseCurlyDoubleQuote], we use two tildes, which \
is the ",
 StyleBox[ButtonBox["StringExpression",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/StringExpression"], "FunctionLink"],
 " (",
 StyleBox["~~", "Code"],
 ") operator. You can think of ",
 StyleBox["~~", "Code"],
 " as a concatenation operator for string patterns. On the far sides of the \
pattern is an application of ",
 StyleBox[ButtonBox["Except",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Except"], "FunctionLink"],
 ". Within a string pattern, ",
 StyleBox[ButtonBox["Except",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Except"], "FunctionLink"],
 " indicates that the pattern will match anything other than what is \
described by its argument. Recall that our goal is to insist that the word \
\[OpenCurlyDoubleQuote]so\[CloseCurlyDoubleQuote] be surrounded by nonword \
characters. Putting all the characters allowed to be in words inside of ",
 StyleBox[ButtonBox["Except",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Except"], "FunctionLink"],
 " will accomplish this. The Wolfram Language has a built-in symbol, ",
 StyleBox[ButtonBox["WordCharacter",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/WordCharacter"], "FunctionLink"],
 ", which stands for all letter and digit characters. We also recognize the \
frequent use of apostrophes in Elizabethan writing, and so we want to allow \
apostrophes within words. To do this, we use the ",
 StyleBox[ButtonBox["Alternatives",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Alternatives"], "FunctionLink"],
 " (",
 StyleBox["|", "Code"],
 ") operator and the string containing an apostrophe within the ",
 StyleBox[ButtonBox["Except",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Except"], "FunctionLink"],
 ". For string patterns, ",
 StyleBox[ButtonBox["Alternatives",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Alternatives"], "FunctionLink"],
 " (",
 StyleBox["|", "Code"],
 ") is the equivalent of a logical \[OpenCurlyDoubleQuote]or.\
\[CloseCurlyDoubleQuote] Including the apostrophe will allow this pattern to \
recognize the string \[OpenCurlyDoubleQuote]",
 StyleBox["distill\[CloseCurlyQuote]d",
  IgnoreSpellCheck->True],
 "\[CloseCurlyDoubleQuote] as a complete word instead of interpreting that \
string as two words, \[OpenCurlyDoubleQuote]distill\[CloseCurlyDoubleQuote] \
and \[OpenCurlyDoubleQuote]d\[CloseCurlyDoubleQuote]."
}], "Text",ExpressionUUID->"6ec4ab23-40b2-4b83-a630-f9d177f27466"],

Cell[TextData[{
 "Using the pattern above in ",
 StyleBox[ButtonBox["StringFreeQ",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/StringFreeQ"], "FunctionLink"],
 " correctly determines that the word \[OpenCurlyDoubleQuote]so\
\[CloseCurlyDoubleQuote] does not appear in poem 5."
}], "Text",ExpressionUUID->"3abc78e8-05b4-41e4-aa82-7ba1a5714f95"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringFreeQ", "[", 
  RowBox[{
   RowBox[{"sPoems", "[", 
    RowBox[{"[", "5", "]"}], "]"}], ",", 
   RowBox[{
    RowBox[{"Except", "[", 
     RowBox[{"WordCharacter", "|", "\"\<'\>\""}], "]"}], "~~", "\"\<so\>\"", "~~", 
    RowBox[{"Except", "[", 
     RowBox[{"WordCharacter", "|", "\"\<'\>\""}], "]"}]}]}], "]"}]], "Input",
 CellLabel->"In[51]:=",ExpressionUUID->"3a8986a5-162d-4343-80f4-f39cf8116c5d"],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[51]=",ExpressionUUID->"a65b9b70-6dd4-4b1d-81b3-74043d1b1b88"]
}, Open  ]],

Cell[TextData[{
 "Finally, the Wolfram Language is, by default, case sensitive. This is a \
problem because ",
 StyleBox[ButtonBox["StringFreeQ",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/StringFreeQ"], "FunctionLink"],
 " will not recognize the presence of a word if asked about the same word \
with a different capitalization. For example, the following indicates that \
\[OpenCurlyDoubleQuote]those\[CloseCurlyDoubleQuote], the first word of poem \
five, is absent from it."
}], "Text",ExpressionUUID->"b590f70b-110c-40b4-a1ed-8a69189d1ac7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringFreeQ", "[", 
  RowBox[{
   RowBox[{"sPoems", "[", 
    RowBox[{"[", "5", "]"}], "]"}], ",", 
   RowBox[{
    RowBox[{"Except", "[", 
     RowBox[{"WordCharacter", "|", "\"\<'\>\""}], "]"}], "~~", 
    "\"\<those\>\"", "~~", 
    RowBox[{"Except", "[", 
     RowBox[{"WordCharacter", "|", "\"\<'\>\""}], "]"}]}]}], "]"}]], "Input",
 CellLabel->"In[52]:=",ExpressionUUID->"2cf597f9-50ee-4f42-9a7a-4bf908698c76"],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[52]=",ExpressionUUID->"a16cec33-a28a-4681-b270-c16192df1450"]
}, Open  ]],

Cell[TextData[{
 "To correct this, we use set the option ",
 StyleBox[ButtonBox["IgnoreCase",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/IgnoreCase"], "FunctionLink"],
 " to ",
 StyleBox[ButtonBox["True",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/True"], "FunctionLink"],
 "."
}], "Text",ExpressionUUID->"cf5b2262-05e8-4adf-b705-bdc6a3710ef2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringFreeQ", "[", 
  RowBox[{
   RowBox[{"sPoems", "[", 
    RowBox[{"[", "5", "]"}], "]"}], ",", 
   RowBox[{
    RowBox[{"Except", "[", 
     RowBox[{"WordCharacter", "|", "\"\<'\>\""}], "]"}], "~~", 
    "\"\<those\>\"", "~~", 
    RowBox[{"Except", "[", 
     RowBox[{"WordCharacter", "|", "\"\<'\>\""}], "]"}]}], ",", 
   RowBox[{"IgnoreCase", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellLabel->"In[53]:=",ExpressionUUID->"f62aed7d-7b5d-48ea-ab81-640007f90cf0"],

Cell[BoxData["False"], "Output",
 CellLabel->"Out[53]=",ExpressionUUID->"6874b7f5-ab49-437e-9170-d9fb87297ff9"]
}, Open  ]],

Cell[TextData[{
 "We use the above as a model to create a function that takes a poem and a \
word as arguments and returns ",
 StyleBox[ButtonBox["True",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/True"], "FunctionLink"],
 " if the word appears in the poem and ",
 StyleBox[ButtonBox["False",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/False"], "FunctionLink"],
 " if not."
}], "Text",ExpressionUUID->"af2a2b8c-f84d-4f5a-a9c7-7f438ee66288"],

Cell[BoxData[
 RowBox[{
  RowBox[{"wordQ", "[", 
   RowBox[{"poem_String", ",", "word_String"}], "]"}], ":=", 
  RowBox[{"!", 
   RowBox[{"StringFreeQ", "[", 
    RowBox[{"poem", ",", 
     RowBox[{
      RowBox[{"Except", "[", 
       RowBox[{"WordCharacter", "|", "\"\<'\>\""}], "]"}], "~~", "word", "~~", 
      RowBox[{"Except", "[", 
       RowBox[{"WordCharacter", "|", "\"\<'\>\""}], "]"}]}], ",", 
     RowBox[{"IgnoreCase", "\[Rule]", "True"}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellLabel->"In[54]:=",ExpressionUUID->"effc39b2-b4ab-4ee6-9840-4e33f3cbb833"],

Cell["\<\
This function tells us that poem 5 does not include the word \
\[OpenCurlyDoubleQuote]so\[CloseCurlyDoubleQuote] but does contain the word \
\[OpenCurlyDoubleQuote]those\[CloseCurlyDoubleQuote].\
\>", "Text",ExpressionUUID->"a4ce174d-0183-496f-825c-2807c0ec0053"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"wordQ", "[", 
  RowBox[{
   RowBox[{"sPoems", "[", 
    RowBox[{"[", "5", "]"}], "]"}], ",", "\"\<so\>\""}], "]"}]], "Input",
 CellLabel->"In[55]:=",ExpressionUUID->"c6612d4a-d85b-4305-ba7f-a395bc72752d"],

Cell[BoxData["False"], "Output",
 CellLabel->"Out[55]=",ExpressionUUID->"cfcd9426-6941-4eeb-90e9-ed5d53c2712c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"wordQ", "[", 
  RowBox[{
   RowBox[{"sPoems", "[", 
    RowBox[{"[", "5", "]"}], "]"}], ",", "\"\<those\>\""}], "]"}]], "Input",
 CellLabel->"In[56]:=",ExpressionUUID->"a47f1903-7dc8-4d87-9d5c-c64ca3d5b85e"],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[56]=",ExpressionUUID->"f4803c54-c76c-423e-bc17-4927f1f31a1d"]
}, Open  ]],

Cell[TextData[{
 "Now that we have a function that determines whether or not a particular \
word appears in a poem, we can determine the number of poems in a list that \
contain the word. We can do this simply by looping over all the poems in a \
list and incrementing a counter for those containing the word. Below, the ",
 StyleBox[ButtonBox["Do",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Do"], "FunctionLink"],
 " loop with second argument ",
 StyleBox["{p,L}", "Code"],
 " iterates over each poem ",
 StyleBox["p", "Code"],
 " in the list of poems ",
 StyleBox["L", "Code"],
 "."
}], "Text",ExpressionUUID->"dbd37e94-1258-4d6c-bf4c-dda5b2f9a016"],

Cell[BoxData[
 RowBox[{
  RowBox[{"countMessages", "[", 
   RowBox[{"word_String", ",", 
    RowBox[{"L", ":", 
     RowBox[{"{", "__String", "}"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"count", "=", "0"}], ",", "p"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"wordQ", "[", 
          RowBox[{"p", ",", "word"}], "]"}], ",", 
         RowBox[{"count", "++"}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"p", ",", "L"}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
     "count"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellLabel->"In[57]:=",ExpressionUUID->"13b7d321-c964-41ae-817b-21b5c7d4bea3"],

Cell["\<\
For instance, we can see how many times Shakespeare uses the word \
\[OpenCurlyDoubleQuote]fairest\[CloseCurlyDoubleQuote] in a sonnet.\
\>", "Text",ExpressionUUID->"7d390645-01b6-4562-b358-c719d92ac426"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"countMessages", "[", 
  RowBox[{"\"\<fairest\>\"", ",", "sPoems"}], "]"}]], "Input",
 CellLabel->"In[58]:=",ExpressionUUID->"4a455069-5e8a-46c8-87e2-16e3e5a29786"],

Cell[BoxData["4"], "Output",
 CellLabel->"Out[58]=",ExpressionUUID->"139dcee3-2704-4739-99da-6513a217810b"]
}, Open  ]],

Cell["\<\
Therefore, the empirical probability that a sonnet contains the word \
\[OpenCurlyDoubleQuote]fairest\[CloseCurlyDoubleQuote] given that it was \
written by Shakespeare is:\
\>", "Text",ExpressionUUID->"2480de3c-77f2-42e5-ae35-81f74a8a1d48"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"countMessages", "[", 
   RowBox[{"\"\<fairest\>\"", ",", "sPoems"}], "]"}], "/", 
  RowBox[{"Length", "[", "sPoems", "]"}]}]], "Input",
 CellLabel->"In[59]:=",ExpressionUUID->"a4e8df69-0202-4662-be99-4f8d43abc1f5"],

Cell[BoxData[
 FractionBox["4", "149"]], "Output",
 CellLabel->"Out[59]=",ExpressionUUID->"178882e2-f4fe-4148-974b-a9a5524b26ae"]
}, Open  ]],

Cell["\<\
Moreover, the probability that a sonnet contains the word \
\[OpenCurlyDoubleQuote]fairest\[CloseCurlyDoubleQuote] given that it was \
written by one of our other authors is:\
\>", "Text",ExpressionUUID->"a3ef0c8e-90de-4bc0-a839-24a29039d32c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"countMessages", "[", 
   RowBox[{"\"\<fairest\>\"", ",", "ePoems"}], "]"}], "/", 
  RowBox[{"Length", "[", "ePoems", "]"}]}]], "Input",
 CellLabel->"In[60]:=",ExpressionUUID->"7512bdea-ba90-4dc8-97e1-b34415bcf542"],

Cell[BoxData[
 FractionBox["10", "173"]], "Output",
 CellLabel->"Out[60]=",ExpressionUUID->"0502e753-623a-49fe-9824-7861c3a9234a"]
}, Open  ]],

Cell["\<\
Applying Bayes\[CloseCurlyQuote] Theorem, we can compute the probability that \
a sonnet was written by Shakespeare given that it contains the word \
\[OpenCurlyDoubleQuote]fairest\[CloseCurlyDoubleQuote]:\
\>", "Text",ExpressionUUID->"b93180a0-b3fc-4330-84f1-5d14e764b511"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"4", "/", "149"}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"4", "/", "149"}], "+", 
     RowBox[{"10", "/", "173"}]}], ")"}]}], "//", "N"}]], "Input",
 CellLabel->"In[61]:=",ExpressionUUID->"c48b7b11-cd6c-48ed-9963-4c5023a78daf"],

Cell[BoxData["0.3171402383134739`"], "Output",
 CellLabel->"Out[61]=",ExpressionUUID->"4a88cc22-7e8f-4798-b72e-2f9d2e40a0e8"]
}, Open  ]],

Cell["\<\
The above computation illustrates how to write a function to compute the \
probability that a sonnet is spam (i.e., was written by Shakespeare) given \
that it contains a specific word:\
\>", "Text",ExpressionUUID->"d9fa02fa-fa01-4099-b0fd-5f4c9d8a1f64"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pShakespeareGivenWord", "[", "word_String", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "sCount", ",", "eCount", ",", "pWordGivenS", ",", "pWordGivenNotS"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"sCount", "=", 
      RowBox[{"Length", "[", "sPoems", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"eCount", "=", 
      RowBox[{"Length", "[", "ePoems", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"pWordGivenS", "=", 
      RowBox[{
       RowBox[{"countMessages", "[", 
        RowBox[{"word", ",", "sPoems"}], "]"}], "/", "sCount"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"pWordGivenNotS", "=", 
      RowBox[{
       RowBox[{"countMessages", "[", 
        RowBox[{"word", ",", "ePoems"}], "]"}], "/", "eCount"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"N", "[", 
      RowBox[{"pWordGivenS", "/", 
       RowBox[{"(", 
        RowBox[{"pWordGivenS", "+", "pWordGivenNotS"}], ")"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellLabel->"In[62]:=",ExpressionUUID->"306f443c-8902-4cdd-a3b2-3e6c6eebd389"],

Cell["\<\
For example, the probability that a sonnet is Shakespearean given that it \
contains the word \[OpenCurlyDoubleQuote]beauty\[CloseCurlyDoubleQuote] is:\
\>", "Text",ExpressionUUID->"608a4c51-9c07-425a-aacd-5ddd3e048aa1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pShakespeareGivenWord", "[", "\"\<beauty\>\"", "]"}]], "Input",
 CellLabel->"In[63]:=",ExpressionUUID->"7c1feb18-1ce4-4cc0-bbf3-08b4e5ee5d56"],

Cell[BoxData["0.5446800629687935`"], "Output",
 CellLabel->"Out[63]=",ExpressionUUID->"b728883f-8f84-4d21-aa3c-78aa507de2d7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Using Multiple Words", "Subsubsection",ExpressionUUID->"aa5913bb-bde1-463e-b21f-74e27ed8b04c"],

Cell[TextData[{
 "We can improve the filter by using multiple words, rather than just one. \
Using the notation of the text, let ",
 Cell[BoxData[
  FormBox[
   RowBox[{"p", "(", 
    SubscriptBox["w", "i"], ")"}], TraditionalForm]],ExpressionUUID->
  "626236a5-2f68-4301-b2a8-ec54c32a67cf"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"q", "(", 
    SubscriptBox["w", "i"], ")"}], TraditionalForm]],ExpressionUUID->
  "d8198cd9-2227-4e1c-8655-8b2177bfbda6"],
 " be the probabilities that a message contains word ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["w", "i"], TraditionalForm]],ExpressionUUID->
  "25b95216-43d3-4800-b998-e2758d5218c3"],
 " given that it is spam and that it is not spam, respectively. The \
probability that a message is spam given that it contains all of the words ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["w", "1"], ",", 
    SubscriptBox["w", "2"], ",", "\[Ellipsis]", ",", 
    SubscriptBox["w", "k"]}], TraditionalForm]],ExpressionUUID->
  "d5cacfd6-0a3d-4910-a8ce-355b7528e2c7"],
 " is:"
}], "Text",ExpressionUUID->"ae79e938-2333-41e0-ae80-d84ed99cced9"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"r", "(", 
    RowBox[{
     SubscriptBox["w", "1"], ",", 
     SubscriptBox["w", "2"], ",", "\[Ellipsis]", ",", 
     SubscriptBox["w", "k"]}], ")"}], "=", 
   FractionBox[
    RowBox[{
     UnderoverscriptBox["\[Product]", 
      RowBox[{"i", "=", "1"}], "k",
      LimitsPositioning->False], 
     RowBox[{"p", "(", 
      SubscriptBox["w", "i"], ")"}]}], 
    RowBox[{
     RowBox[{
      UnderoverscriptBox["\[Product]", 
       RowBox[{"i", "=", "1"}], "k",
       LimitsPositioning->False], 
      RowBox[{"p", "(", 
       SubscriptBox["w", "i"], ")"}]}], "+", 
     RowBox[{
      UnderoverscriptBox["\[Product]", 
       RowBox[{"i", "=", "1"}], "k",
       LimitsPositioning->False], 
      RowBox[{"q", "(", 
       SubscriptBox["w", "i"], ")"}]}]}]]}], TraditionalForm]], "Equation",Exp\
ressionUUID->"3bbd82d6-5603-4614-8618-5b53ead3ebe7"],

Cell[TextData[{
 "The ",
 StyleBox[ButtonBox["Product",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Product"], "FunctionLink"],
 " function is useful here. Recall that we compute ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderscriptBox["\[Product]", 
     RowBox[{"i", "\[Element]", "S"}],
     LimitsPositioning->False], 
    SuperscriptBox["i", "2"]}], TraditionalForm]],ExpressionUUID->
  "f704427d-7559-4fe6-8e33-4e3fd4afae1e"],
 " for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"S", "=", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3", ",", "5", ",", "7", ",", "9"}], "}"}]}], 
   TraditionalForm]],ExpressionUUID->"1b7cbc47-fc03-4d07-b919-7847af078b8f"],
 " with "
}], "Text",ExpressionUUID->"749673b5-b9f6-4970-897f-7681ea1bf793"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Product", "[", 
  RowBox[{
   RowBox[{"i", "^", "2"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "5", ",", "7", ",", "9"}], "}"}]}], "}"}]}],
   "]"}]], "Input",
 CellLabel->"In[64]:=",ExpressionUUID->"f4666f6d-992d-44ed-90db-2328e23f8558"],

Cell[BoxData["893025"], "Output",
 CellLabel->"Out[64]=",ExpressionUUID->"585c554a-1c7e-45e0-a820-42d2a54f319e"]
}, Open  ]],

Cell["\<\
For instance, to compute the probability that a message contains the words \
\[OpenCurlyDoubleQuote]from\[CloseCurlyDoubleQuote], \
\[OpenCurlyDoubleQuote]fairest\[CloseCurlyDoubleQuote], and \
\[OpenCurlyDoubleQuote]creatures\[CloseCurlyDoubleQuote]:\
\>", "Text",ExpressionUUID->"21d4b3bd-be05-43c4-870d-e89b62957ac5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"S", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<from\>\"", ",", "\"\<fairest\>\"", ",", "\"\<creatures\>\""}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Product", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"countMessages", "[", 
     RowBox[{"w", ",", "sPoems"}], "]"}], "/", 
    RowBox[{"Length", "[", "sPoems", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", "S"}], "}"}]}], "]"}]}], "Input",
 CellLabel->"In[65]:=",ExpressionUUID->"3e67a7c3-59a2-4da1-99e7-54d02a0050e7"],

Cell[BoxData[
 FractionBox["456", "3307949"]], "Output",
 CellLabel->"Out[66]=",ExpressionUUID->"0103806b-f208-4946-ad71-6a03787cdf1e"]
}, Open  ]],

Cell[TextData[{
 "We can modify our ",
 StyleBox["pShakespeareGivenWord", "Code"],
 " function to work on lists of words instead of single words by putting the \
probability computations inside of ",
 StyleBox[ButtonBox["Product",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Product"], "FunctionLink"],
 " commands. It is also a good idea to protect against division by zero \
errors, so we will put the division inside of an ",
 StyleBox[ButtonBox["If",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/If"], "FunctionLink"],
 " statement. This is needed in case one or more of the selected words \
appears in none of the sonnets by either author. In this case, we default to \
a probability of 0.5."
}], "Text",ExpressionUUID->"5c6d5b0e-08d8-4f89-882b-b4df9c91ee30"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pShakespeareGivenList", "[", "L_List", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"sCount", ",", "eCount", ",", "pGivenS", ",", "pGivenNotS"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"sCount", "=", 
      RowBox[{"Length", "[", "sPoems", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"eCount", "=", 
      RowBox[{"Length", "[", "ePoems", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"pGivenS", "=", 
      RowBox[{"Product", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"countMessages", "[", 
          RowBox[{"w", ",", "sPoems"}], "]"}], "/", "sCount"}], ",", 
        RowBox[{"{", 
         RowBox[{"w", ",", "L"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"pGivenNotS", "=", 
      RowBox[{"Product", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"countMessages", "[", 
          RowBox[{"w", ",", "ePoems"}], "]"}], "/", "eCount"}], ",", 
        RowBox[{"{", 
         RowBox[{"w", ",", "L"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"pGivenS", "+", "pGivenNotS"}], "\[NotEqual]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"N", "[", 
        RowBox[{"pGivenS", "/", 
         RowBox[{"(", 
          RowBox[{"pGivenS", "+", "pGivenNotS"}], ")"}]}], "]"}], ",", 
       "\[IndentingNewLine]", "0.5"}], "\[IndentingNewLine]", "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellLabel->"In[67]:=",ExpressionUUID->"c2dfe04d-0d48-4411-8095-bbf126853c2f"],

Cell["\<\
Therefore, the probability that a sonnet is by Shakespeare given that it \
contains the words \[OpenCurlyDoubleQuote]from\[CloseCurlyDoubleQuote], \
\[OpenCurlyDoubleQuote]fairest\[CloseCurlyDoubleQuote], and \
\[OpenCurlyDoubleQuote]creatures\[CloseCurlyDoubleQuote] is:\
\>", "Text",ExpressionUUID->"dfd2391f-0c2d-4f5a-b57f-0abfeec4af94"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pShakespeareGivenList", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<from\>\"", ",", "\"\<fairest\>\"", ",", "\"\<creatures\>\""}],
    "}"}], "]"}]], "Input",
 CellLabel->"In[68]:=",ExpressionUUID->"035490c7-583a-4a5d-bee0-1fa0dc8224b8"],

Cell[BoxData["0.5516898107231202`"], "Output",
 CellLabel->"Out[68]=",ExpressionUUID->"de01f669-23fe-4f94-b1a9-1a3dd51d8d4e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Selecting Test Words Randomly", "Subsubsection",ExpressionUUID->"80cad68a-8151-4dc1-8c46-392ba212b76c"],

Cell[TextData[{
 "Finally, we can use the ",
 StyleBox[ButtonBox["RandomSample",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/RandomSample"], "FunctionLink"],
 " function to randomly select words from a test message, and then use those \
randomly selected words to compute the probability that the message was \
written by Shakespeare. Here is the first test message in \
\[OpenCurlyDoubleQuote]testMessages.",
 StyleBox["txt",
  IgnoreSpellCheck->True],
 "\[CloseCurlyDoubleQuote]:"
}], "Text",ExpressionUUID->"aa35ca56-d9bc-4e95-862f-1a073437cefa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testPoems", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellLabel->"In[69]:=",ExpressionUUID->"d94ec935-9b43-463f-a52b-76db51e89dd5"],

Cell[BoxData["\<\"When to the sessions of sweet silent thought\\nI summon up \
remembrance of things past,\\nI sigh the lack of many a thing I sought,\\nAnd \
with old woes new wail my dear time's waste:\\nThen can I drown an eye, \
unused to flow,\\nFor precious friends hid in death's dateless night,\\nAnd \
weep afresh love's long since cancell'd woe,\\nAnd moan the expense of many a \
vanish'd sight:\\nThen can I grieve at grievances foregone,\\nAnd heavily \
from woe to woe tell o'er\\nThe sad account of fore-bemoaned moan,\\nWhich I \
new pay as if not paid before.\\n  But if the while I think on thee, dear \
friend,\\n  All losses are restor'd and sorrows end.\\n\"\>"], "Output",
 CellLabel->"Out[69]=",ExpressionUUID->"35b6dd8e-d674-4246-9d24-467c536c34bf"]
}, Open  ]],

Cell[TextData[{
 "First, we must separate the poem into individual words. We do this using ",
 StyleBox[ButtonBox["StringSplit",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/StringSplit"], "FunctionLink"],
 ", which we used to split the data files into individual poems. Instead of \
splitting on a special delimiter, such as \[OpenCurlyDoubleQuote]&&&\
\[CloseCurlyDoubleQuote], we will use the pattern ",
 StyleBox["Except[WordCharacter|\"'\"]]", "Code"],
 " that we determined earlier expressed nonword characters. In order to avoid \
having individual spaces in the list, which can happen when spaces and \
punctuation appear together with ends of lines, we will follow the pattern \
with the ",
 StyleBox[ButtonBox["Repeated",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Repeated"], "FunctionLink"],
 " (",
 StyleBox["..", "Code"],
 ") operator. This way, two spaces, or a period followed by a space, will \
count as a single word delimiter."
}], "Text",ExpressionUUID->"1f44dfc8-a363-4d7c-afa8-b1f09d141b62"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exampleTestWords", "=", 
  RowBox[{"StringSplit", "[", 
   RowBox[{
    RowBox[{"testPoems", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", 
    RowBox[{
     RowBox[{"Except", "[", 
      RowBox[{"WordCharacter", "|", "\"\<'\>\""}], "]"}], ".."}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[70]:=",ExpressionUUID->"6242a440-5229-4b84-beda-4c34e28248a0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"When\"\>", ",", "\<\"to\"\>", ",", "\<\"the\"\>", 
   ",", "\<\"sessions\"\>", ",", "\<\"of\"\>", ",", "\<\"sweet\"\>", 
   ",", "\<\"silent\"\>", ",", "\<\"thought\"\>", ",", "\<\"I\"\>", 
   ",", "\<\"summon\"\>", ",", "\<\"up\"\>", ",", "\<\"remembrance\"\>", 
   ",", "\<\"of\"\>", ",", "\<\"things\"\>", ",", "\<\"past\"\>", 
   ",", "\<\"I\"\>", ",", "\<\"sigh\"\>", ",", "\<\"the\"\>", 
   ",", "\<\"lack\"\>", ",", "\<\"of\"\>", ",", "\<\"many\"\>", 
   ",", "\<\"a\"\>", ",", "\<\"thing\"\>", ",", "\<\"I\"\>", 
   ",", "\<\"sought\"\>", ",", "\<\"And\"\>", ",", "\<\"with\"\>", 
   ",", "\<\"old\"\>", ",", "\<\"woes\"\>", ",", "\<\"new\"\>", 
   ",", "\<\"wail\"\>", ",", "\<\"my\"\>", ",", "\<\"dear\"\>", 
   ",", "\<\"time's\"\>", ",", "\<\"waste\"\>", ",", "\<\"Then\"\>", 
   ",", "\<\"can\"\>", ",", "\<\"I\"\>", ",", "\<\"drown\"\>", 
   ",", "\<\"an\"\>", ",", "\<\"eye\"\>", ",", "\<\"unused\"\>", 
   ",", "\<\"to\"\>", ",", "\<\"flow\"\>", ",", "\<\"For\"\>", 
   ",", "\<\"precious\"\>", ",", "\<\"friends\"\>", ",", "\<\"hid\"\>", 
   ",", "\<\"in\"\>", ",", "\<\"death's\"\>", ",", "\<\"dateless\"\>", 
   ",", "\<\"night\"\>", ",", "\<\"And\"\>", ",", "\<\"weep\"\>", 
   ",", "\<\"afresh\"\>", ",", "\<\"love's\"\>", ",", "\<\"long\"\>", 
   ",", "\<\"since\"\>", ",", "\<\"cancell'd\"\>", ",", "\<\"woe\"\>", 
   ",", "\<\"And\"\>", ",", "\<\"moan\"\>", ",", "\<\"the\"\>", 
   ",", "\<\"expense\"\>", ",", "\<\"of\"\>", ",", "\<\"many\"\>", 
   ",", "\<\"a\"\>", ",", "\<\"vanish'd\"\>", ",", "\<\"sight\"\>", 
   ",", "\<\"Then\"\>", ",", "\<\"can\"\>", ",", "\<\"I\"\>", 
   ",", "\<\"grieve\"\>", ",", "\<\"at\"\>", ",", "\<\"grievances\"\>", 
   ",", "\<\"foregone\"\>", ",", "\<\"And\"\>", ",", "\<\"heavily\"\>", 
   ",", "\<\"from\"\>", ",", "\<\"woe\"\>", ",", "\<\"to\"\>", 
   ",", "\<\"woe\"\>", ",", "\<\"tell\"\>", ",", "\<\"o'er\"\>", 
   ",", "\<\"The\"\>", ",", "\<\"sad\"\>", ",", "\<\"account\"\>", 
   ",", "\<\"of\"\>", ",", "\<\"fore\"\>", ",", "\<\"bemoaned\"\>", 
   ",", "\<\"moan\"\>", ",", "\<\"Which\"\>", ",", "\<\"I\"\>", 
   ",", "\<\"new\"\>", ",", "\<\"pay\"\>", ",", "\<\"as\"\>", 
   ",", "\<\"if\"\>", ",", "\<\"not\"\>", ",", "\<\"paid\"\>", 
   ",", "\<\"before\"\>", ",", "\<\"But\"\>", ",", "\<\"if\"\>", 
   ",", "\<\"the\"\>", ",", "\<\"while\"\>", ",", "\<\"I\"\>", 
   ",", "\<\"think\"\>", ",", "\<\"on\"\>", ",", "\<\"thee\"\>", 
   ",", "\<\"dear\"\>", ",", "\<\"friend\"\>", ",", "\<\"All\"\>", 
   ",", "\<\"losses\"\>", ",", "\<\"are\"\>", ",", "\<\"restor'd\"\>", 
   ",", "\<\"and\"\>", ",", "\<\"sorrows\"\>", ",", "\<\"end\"\>"}], 
  "}"}]], "Output",
 CellLabel->"Out[70]=",ExpressionUUID->"0211091f-06d2-4e62-a412-59db26bcf7dc"]
}, Open  ]],

Cell[TextData[{
 "We apply ",
 StyleBox[ButtonBox["DeleteDuplicates",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/DeleteDuplicates"], "FunctionLink"],
 " to remove repeated words."
}], "Text",ExpressionUUID->"a5387dfe-846f-4fdc-94df-1e406786b845"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exampleTestWords", "=", 
  RowBox[{"DeleteDuplicates", "[", "exampleTestWords", "]"}]}]], "Input",
 CellLabel->"In[71]:=",ExpressionUUID->"da761409-dd43-4307-a19b-9f99f0e10b64"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"When\"\>", ",", "\<\"to\"\>", ",", "\<\"the\"\>", 
   ",", "\<\"sessions\"\>", ",", "\<\"of\"\>", ",", "\<\"sweet\"\>", 
   ",", "\<\"silent\"\>", ",", "\<\"thought\"\>", ",", "\<\"I\"\>", 
   ",", "\<\"summon\"\>", ",", "\<\"up\"\>", ",", "\<\"remembrance\"\>", 
   ",", "\<\"things\"\>", ",", "\<\"past\"\>", ",", "\<\"sigh\"\>", 
   ",", "\<\"lack\"\>", ",", "\<\"many\"\>", ",", "\<\"a\"\>", 
   ",", "\<\"thing\"\>", ",", "\<\"sought\"\>", ",", "\<\"And\"\>", 
   ",", "\<\"with\"\>", ",", "\<\"old\"\>", ",", "\<\"woes\"\>", 
   ",", "\<\"new\"\>", ",", "\<\"wail\"\>", ",", "\<\"my\"\>", 
   ",", "\<\"dear\"\>", ",", "\<\"time's\"\>", ",", "\<\"waste\"\>", 
   ",", "\<\"Then\"\>", ",", "\<\"can\"\>", ",", "\<\"drown\"\>", 
   ",", "\<\"an\"\>", ",", "\<\"eye\"\>", ",", "\<\"unused\"\>", 
   ",", "\<\"flow\"\>", ",", "\<\"For\"\>", ",", "\<\"precious\"\>", 
   ",", "\<\"friends\"\>", ",", "\<\"hid\"\>", ",", "\<\"in\"\>", 
   ",", "\<\"death's\"\>", ",", "\<\"dateless\"\>", ",", "\<\"night\"\>", 
   ",", "\<\"weep\"\>", ",", "\<\"afresh\"\>", ",", "\<\"love's\"\>", 
   ",", "\<\"long\"\>", ",", "\<\"since\"\>", ",", "\<\"cancell'd\"\>", 
   ",", "\<\"woe\"\>", ",", "\<\"moan\"\>", ",", "\<\"expense\"\>", 
   ",", "\<\"vanish'd\"\>", ",", "\<\"sight\"\>", ",", "\<\"grieve\"\>", 
   ",", "\<\"at\"\>", ",", "\<\"grievances\"\>", ",", "\<\"foregone\"\>", 
   ",", "\<\"heavily\"\>", ",", "\<\"from\"\>", ",", "\<\"tell\"\>", 
   ",", "\<\"o'er\"\>", ",", "\<\"The\"\>", ",", "\<\"sad\"\>", 
   ",", "\<\"account\"\>", ",", "\<\"fore\"\>", ",", "\<\"bemoaned\"\>", 
   ",", "\<\"Which\"\>", ",", "\<\"pay\"\>", ",", "\<\"as\"\>", 
   ",", "\<\"if\"\>", ",", "\<\"not\"\>", ",", "\<\"paid\"\>", 
   ",", "\<\"before\"\>", ",", "\<\"But\"\>", ",", "\<\"while\"\>", 
   ",", "\<\"think\"\>", ",", "\<\"on\"\>", ",", "\<\"thee\"\>", 
   ",", "\<\"friend\"\>", ",", "\<\"All\"\>", ",", "\<\"losses\"\>", 
   ",", "\<\"are\"\>", ",", "\<\"restor'd\"\>", ",", "\<\"and\"\>", 
   ",", "\<\"sorrows\"\>", ",", "\<\"end\"\>"}], "}"}]], "Output",
 CellLabel->"Out[71]=",ExpressionUUID->"59a30514-8cbc-4f82-bdda-65a76886fc3d"]
}, Open  ]],

Cell["Then, randomly select four of those words.", "Text",ExpressionUUID->"68a9dfbd-7407-4f7e-98a4-c0eb55d9c3be"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exampleTestList", "=", 
  RowBox[{"RandomSample", "[", 
   RowBox[{"exampleTestWords", ",", "4"}], "]"}]}]], "Input",
 CellLabel->"In[72]:=",ExpressionUUID->"f9c52364-0b92-4d50-8a30-8ba9b93a54d4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"grievances\"\>", ",", "\<\"long\"\>", ",", "\<\"love's\"\>", 
   ",", "\<\"remembrance\"\>"}], "}"}]], "Output",
 CellLabel->"Out[72]=",ExpressionUUID->"69af6ead-5eb7-4a78-9eea-81f4b02f0ef3"]
}, Open  ]],

Cell["\<\
And then, use our function to find the probability that a message with these \
four words was written by Shakespeare: \
\>", "Text",ExpressionUUID->"28d53366-b04e-41be-a340-ccc0b4d30c0d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pShakespeareGivenList", "[", "exampleTestList", "]"}]], "Input",
 CellLabel->"In[73]:=",ExpressionUUID->"fb4906f8-52fc-4b63-9ea9-326814fdb184"],

Cell[BoxData["0.5`"], "Output",
 CellLabel->"Out[73]=",ExpressionUUID->"dcebe7bd-1c2f-423b-bb60-df48a02975c8"]
}, Open  ]],

Cell["Putting this all together: ", "Text",ExpressionUUID->"28ca644b-9329-406b-8784-3c7e80b629e1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pShakespeare", "[", 
   RowBox[{"testMessage_String", ",", "testSize_Integer"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "testWordList", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"testWordList", "=", 
      RowBox[{"RandomSample", "[", 
       RowBox[{
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"StringSplit", "[", 
          RowBox[{"testMessage", ",", 
           RowBox[{
            RowBox[{"Except", "[", 
             RowBox[{"WordCharacter", "|", "\"\<'\>\""}], "]"}], ".."}]}], 
          "]"}], "]"}], ",", "testSize"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"pShakespeareGivenList", "[", "testWordList", "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellLabel->"In[74]:=",ExpressionUUID->"770ee3b4-864f-499d-88eb-304aee5e5818"],

Cell["\<\
As an example, we run the filter on the second test message with a test size \
of 3.\
\>", "Text",ExpressionUUID->"535ec4ea-14ae-4726-b765-a1caf8ab1ed3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pShakespeare", "[", 
  RowBox[{
   RowBox[{"testPoems", "[", 
    RowBox[{"[", "2", "]"}], "]"}], ",", "3"}], "]"}]], "Input",
 ShowCellLabel->True,
 CellLabel->"In[75]:=",ExpressionUUID->"f9d82ce2-a77f-4d7a-9c48-43f2b50a9aec"],

Cell[BoxData["0.0707078028986887`"], "Output",
 CellLabel->"Out[75]=",ExpressionUUID->"26b24a6d-4147-4159-a4e1-3178e7c37185"]
}, Open  ]],

Cell["\<\
Bayesian spam filters are simple to create, but they do have deficiencies. \
One of the shortcomings of this particular filter, which you will likely \
experience if you run the filter a few times, is that the random selection of \
words can result in quite poor choices. For example, if one of the words is \
rare enough to have not been used in the Shakespeare dataset, then the \
computed probability will be 0. That the author had not used the word in the \
dataset is not particularly convincing evidence that he did not use it in \
just this one sonnet; it is definitely not appropriate to conclude that it \
was impossible for Shakespeare to have written the sonnet with this rare \
word. There are a variety of approaches to correcting problems like this, and \
you are encouraged to think about and research how you can improve on the \
basic function provided here.\
\>", "Text",ExpressionUUID->"3ae9abc7-293f-4f48-90be-d573c463101c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["7.4 Expected Value and Variance", "Section",
 CellTags->"Section4",ExpressionUUID->"f52d170b-ba36-40b3-bb81-dd6bb16ed2ad"],

Cell["\<\
In Section 7.2 of this manual, we introduced the Wolfram Language functions \
for using random variables, random variates, and probability distributions. \
In this section, we will look at these functions more closely and use \
probability distributions to explore the concepts of expected value and \
variance.\
\>", "Text",ExpressionUUID->"205074a1-91bf-465c-a7c9-1d26b093eb0d"],

Cell[TextData[{
 "As mentioned earlier, the Wolfram Language provides the distribution ",
 StyleBox[ButtonBox["GeometricDistribution",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/GeometricDistribution"], "FunctionLink"],
 ", which takes one parameter, the probability of a \
\[OpenCurlyDoubleQuote]success.\[CloseCurlyDoubleQuote]"
}], "Text",ExpressionUUID->"08d236b8-0825-4b39-935e-ab5dd1bb9daa"],

Cell[TextData[{
 "We can use the ",
 StyleBox[ButtonBox["Probability",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Probability"], "FunctionLink"],
 " function to compute the probabilities of events. For example, the \
probability ",
 Cell[BoxData[
  FormBox[
   RowBox[{"p", "(", 
    RowBox[{"X", "=", "5"}], ")"}], TraditionalForm]],ExpressionUUID->
  "d501e729-e80e-4954-b4cb-2c83ec3b5ae2"],
 " is computed by the following."
}], "Text",ExpressionUUID->"d1897e9c-9740-4c09-adff-5a64686f8414"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Probability", "[", 
  RowBox[{
   RowBox[{"X", "\[Equal]", "5"}], ",", 
   RowBox[{"X", "\[Distributed]", 
    RowBox[{"GeometricDistribution", "[", 
     RowBox[{"1", "/", "4"}], "]"}]}]}], "]"}]], "Input",
 CellLabel->"In[76]:=",ExpressionUUID->"29ae704d-945c-44ba-903d-2de7387a18fb"],

Cell[BoxData[
 FractionBox["243", "4096"]], "Output",
 CellLabel->"Out[76]=",ExpressionUUID->"e85a99f7-00aa-4608-870c-e318ff51d001"]
}, Open  ]],

Cell[TextData[{
 "Note that the Wolfram Language definition of a geometric random variable \
differs slightly from the textbook\[CloseCurlyQuote]s. The textbook defines \
the value of the geometric random variable, in terms of coin flips, to be the \
number of flips it takes to get a tails, where the parameter is the \
probability of tails. ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "\[CloseCurlyQuote]s definition is that the value of the random variable is \
the number of heads that appear before tails comes up. Thus, the probability ",
 Cell[BoxData[
  FormBox[
   RowBox[{"p", "(", 
    RowBox[{"X", "=", "k"}], ")"}], TraditionalForm]],ExpressionUUID->
  "6760b5f4-9657-457b-8f1a-aee1d50ffac6"],
 " is"
}], "Text",ExpressionUUID->"cb1b6059-2c80-4030-872f-92910b9e48fb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Probability", "[", 
  RowBox[{
   RowBox[{"X", "\[Equal]", "k"}], ",", 
   RowBox[{"X", "\[Distributed]", 
    RowBox[{"GeometricDistribution", "[", 
     RowBox[{"1", "/", "4"}], "]"}]}]}], "]"}]], "Input",
 CellLabel->"In[77]:=",ExpressionUUID->"57849c4e-afe5-479b-bcee-b6a4d27376b3"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        RowBox[{
         SuperscriptBox["3", "k"], " ", 
         SuperscriptBox["4", 
          RowBox[{
           RowBox[{"-", "1"}], "-", "k"}]]}], 
        RowBox[{
         RowBox[{"k", "\[Equal]", 
          RowBox[{"Floor", "[", "k", "]"}]}], "&&", 
         RowBox[{"k", "\[GreaterEqual]", "0"}]}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[77]=",ExpressionUUID->"e6367018-5b7f-4f83-98a8-053a0b42124a"]
}, Open  ]],

Cell["Contrast this with the formula given in the text.", "Text",ExpressionUUID->"a31beb78-1761-4087-9d68-230740e44d4b"],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " can also calculate the expected value, variance, and standard deviation of \
distributions. The ",
 StyleBox[ButtonBox["Mean",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Mean"], "FunctionLink"],
 ", ",
 StyleBox[ButtonBox["Variance",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Variance"], "FunctionLink"],
 ", and ",
 StyleBox[ButtonBox["StandardDeviation",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/StandardDeviation"], "FunctionLink"],
 " functions all accept a distribution as the argument and return the \
statistic."
}], "Text",ExpressionUUID->"158f84d7-a8be-42a6-9096-0f01c436d163"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mean", "[", 
  RowBox[{"GeometricDistribution", "[", 
   RowBox[{"1", "/", "4"}], "]"}], "]"}]], "Input",
 CellLabel->"In[78]:=",ExpressionUUID->"64a674ce-f4da-4672-b001-9235c286ffa5"],

Cell[BoxData["3"], "Output",
 CellLabel->"Out[78]=",ExpressionUUID->"6332f33d-fa19-45c3-9459-f4e6f894e61e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Variance", "[", 
  RowBox[{"GeometricDistribution", "[", 
   RowBox[{"1", "/", "4"}], "]"}], "]"}]], "Input",
 CellLabel->"In[79]:=",ExpressionUUID->"6220af21-3acd-4e48-ab7d-d42ab96cb7f6"],

Cell[BoxData["12"], "Output",
 CellLabel->"Out[79]=",ExpressionUUID->"745c3367-23d9-44b7-89e6-e99b0fff0896"]
}, Open  ]],

Cell["These functions can also compute symbolically:", "Text",ExpressionUUID->"1b65c51e-ef05-4e47-8912-aba998266591"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StandardDeviation", "[", 
  RowBox[{"GeometricDistribution", "[", "k", "]"}], "]"}]], "Input",
 CellLabel->"In[80]:=",ExpressionUUID->"2763e265-f80b-4853-aa75-532dd61b4ae3"],

Cell[BoxData[
 FractionBox[
  SqrtBox[
   RowBox[{"1", "-", "k"}]], "k"]], "Output",
 CellLabel->"Out[80]=",ExpressionUUID->"14643430-9e41-4024-8a50-e7bd6c85106c"]
}, Open  ]],

Cell[TextData[{
 "All three functions can also accept a list holding data. For example, to \
compute the mean of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "4", ",", "7", ",", "11"}], "}"}], 
   TraditionalForm]],ExpressionUUID->"dc548fc3-2af8-4cc8-92b6-083b31278f5c"],
 ":"
}], "Text",ExpressionUUID->"1ddd2364-db0c-4333-9116-463f1323aacf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mean", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "3", ",", "4", ",", "7", ",", "11"}], "}"}], 
  "]"}]], "Input",
 CellLabel->"In[81]:=",ExpressionUUID->"6b2ee033-03ea-45cb-93e1-b32dcb2e08f5"],

Cell[BoxData[
 FractionBox["26", "5"]], "Output",
 CellLabel->"Out[81]=",ExpressionUUID->"18b5f90f-53ae-45df-8591-ad2334e9a1b6"]
}, Open  ]],

Cell[TextData[{
 "Alternatively, you can use the ",
 StyleBox[ButtonBox["Expectation",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Expectation"], "FunctionLink"],
 " function. ",
 StyleBox[ButtonBox["Expectation",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Expectation"], "FunctionLink"],
 " is more flexible in that it allows you to form an expression using random \
variables as a first argument and specify the distributions of the random \
variables as the second argument. The syntax is similar to that of ",
 StyleBox[ButtonBox["Probability",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Probability"], "FunctionLink"],
 ", except the first argument is an expression, not an event."
}], "Text",ExpressionUUID->"dbae4ab0-a6de-4e99-9636-c1ad2f6978da"],

Cell[TextData[{
 "For example, the following will find the expected value of the geometric \
distribution with parameter ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "/", "4"}], TraditionalForm]],ExpressionUUID->
  "666a374c-22df-4404-8100-b02781cb10c8"],
 "."
}], "Text",ExpressionUUID->"bc638171-1c4d-40a2-8218-ecd00f074b2c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expectation", "[", 
  RowBox[{"X", ",", 
   RowBox[{"X", "\[Distributed]", 
    RowBox[{"GeometricDistribution", "[", 
     RowBox[{"1", "/", "4"}], "]"}]}]}], "]"}]], "Input",
 CellLabel->"In[82]:=",ExpressionUUID->"2041d601-4bf3-47aa-adc5-7f5919962133"],

Cell[BoxData["3"], "Output",
 CellLabel->"Out[82]=",ExpressionUUID->"b8115538-9052-4346-a5ce-5804d28d3f12"]
}, Open  ]],

Cell[TextData[{
 StyleBox[ButtonBox["Expectation",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Expectation"], "FunctionLink"],
 " allows us to find the expected value of more complicated expressions, such \
as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"E", "(", 
    RowBox[{"X", "^", "2"}], ")"}], TraditionalForm]],ExpressionUUID->
  "77c51138-16b9-4412-901a-a39fa0de091e"],
 "."
}], "Text",ExpressionUUID->"f119218d-bca8-45ef-a885-195e83679e7b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expectation", "[", 
  RowBox[{
   RowBox[{"X", "^", "2"}], ",", 
   RowBox[{"X", "\[Distributed]", 
    RowBox[{"GeometricDistribution", "[", 
     RowBox[{"1", "/", "4"}], "]"}]}]}], "]"}]], "Input",
 CellLabel->"In[83]:=",ExpressionUUID->"bd1ee4c0-f24c-4117-a534-b63c8769a5d8"],

Cell[BoxData["21"], "Output",
 CellLabel->"Out[83]=",ExpressionUUID->"a5e1b1be-d189-468f-beb4-798adde05c2e"]
}, Open  ]],

Cell[TextData[{
 "Recalling that the variance of a random variable is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"E", "(", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"X", "-", 
       RowBox[{"E", "(", "X", ")"}]}], ")"}], "2"], ")"}], TraditionalForm]],
  ExpressionUUID->"11054838-a7eb-4b76-8af1-e75a95b9fac5"],
 ", we can use ",
 StyleBox[ButtonBox["Expectation",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Expectation"], "FunctionLink"],
 " to compute variance as well."
}], "Text",ExpressionUUID->"7e5cf6af-87e2-4e3c-b057-f366485a4a27"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mean", "=", 
  RowBox[{"Expectation", "[", 
   RowBox[{"X", ",", 
    RowBox[{"X", "\[Distributed]", 
     RowBox[{"GeometricDistribution", "[", 
      RowBox[{"1", "/", "4"}], "]"}]}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellLabel->"In[84]:=",ExpressionUUID->"1769089f-cae6-494e-b104-be60c82d351e"],

Cell[BoxData["3"], "Output",
 CellLabel->"Out[84]=",ExpressionUUID->"2e0542f4-9efa-422f-906d-9100a27741e3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expectation", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"X", "-", "mean"}], ")"}], "^", "2"}], ",", 
   RowBox[{"X", "\[Distributed]", 
    RowBox[{"GeometricDistribution", "[", 
     RowBox[{"1", "/", "4"}], "]"}]}]}], "]"}]], "Input",
 CellLabel->"In[85]:=",ExpressionUUID->"5366fbf9-c2e4-47d0-a2d8-c64d984852cf"],

Cell[BoxData["12"], "Output",
 CellLabel->"Out[85]=",ExpressionUUID->"1b8fed65-f69a-4992-a5ac-abba2e728633"]
}, Open  ]],

Cell["You can also mix distributions, as illustrated below.", "Text",ExpressionUUID->"798b5848-d2c1-48c5-ab60-1c455d21b51d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"distribution1", "=", 
   RowBox[{"GeometricDistribution", "[", 
    RowBox[{"1", "/", "4"}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellLabel->"In[86]:=",ExpressionUUID->"003e248f-7f5f-479b-a08a-bd81e6eaef2b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"distribution2", "=", 
   RowBox[{"BinomialDistribution", "[", 
    RowBox[{"20", ",", ".3"}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellLabel->"In[87]:=",ExpressionUUID->"6cac2c4f-fd9b-4a48-b5ba-b6c071bc0163"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mean2", "=", 
  RowBox[{"Expectation", "[", 
   RowBox[{
    RowBox[{"X", "+", 
     RowBox[{"2", "*", "Y"}]}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"X", "\[Distributed]", "distribution1"}], ",", 
      RowBox[{"Y", "\[Distributed]", "distribution2"}]}], "}"}]}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellLabel->"In[88]:=",ExpressionUUID->"fab1ed2d-7b78-49d0-ae56-95e1da77029c"],

Cell[BoxData["15.`"], "Output",
 CellLabel->"Out[88]=",ExpressionUUID->"cac7ed08-bb5f-4db6-9ffc-34e8faeadd4e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expectation", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"X", "+", 
        RowBox[{"2", "*", "Y"}]}], ")"}], "-", "mean2"}], ")"}], "^", "2"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"X", "\[Distributed]", "distribution1"}], ",", 
     RowBox[{"Y", "\[Distributed]", "distribution2"}]}], "}"}]}], 
  "]"}]], "Input",
 CellLabel->"In[89]:=",ExpressionUUID->"1610773c-8eb2-411c-97a9-d29cc31ba5c0"],

Cell[BoxData["28.80000000000001`"], "Output",
 CellLabel->"Out[89]=",ExpressionUUID->"0a329fec-ed5c-45b4-893a-0fc1b3cd08c0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Solutions to Computer Projects and Computations and Explorations\
\>", "Section",
 CellTags->"Solutions",ExpressionUUID->"86ecee26-5bc4-4e5b-9971-46ae327f5ba7"],

Cell[CellGroupData[{

Cell["Computer Projects 7", "Subsection",
 CellTags->
  "SolutionsCP7",ExpressionUUID->"a8567d5c-6b46-4055-9007-c0593f68e221"],

Cell[TextData[{
 "Given a positive integer ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]],ExpressionUUID->
  "fd88f7ee-fe06-4f84-9432-d232b7809758"],
 ", simulate the collection of cards that come with the purchase of products \
to find the number of products that must be purchased to obtain a full set of \
",
 Cell[BoxData[
  FormBox["m", TraditionalForm]],ExpressionUUID->
  "66e7ccff-8b3f-45fe-9fa7-904093ee06f7"],
 " different collector cards. (See Supplementary Exercise 33.)"
}], "Problem",ExpressionUUID->"28f8616f-22e6-4225-a060-859ed3f66bc7"],

Cell[TextData[{
 StyleBox["Solution:",
  FontSlant->"Italic"],
 " We will define a function called ",
 StyleBox["cardSimulate", "Code"],
 " that will simulate the process of choosing random collectible cards until \
all the possible cards have been obtained. This function needs to do three \
things: (1) keep track of which cards have been obtained; (2) keep selecting \
random cards until the complete set is obtained; and (3) keep track of how \
many cards have been purchased."
}], "Text",ExpressionUUID->"a24f7337-634f-476b-b2b7-3ae9e07bc9ec"],

Cell[TextData[{
 "Think of the cards as numbered 1 through ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]],ExpressionUUID->
  "8d0e57cd-d75c-4073-9081-4ddc21d37906"],
 ". To keep track of which cards have been obtained and which have not, we \
use a list that we call ",
 StyleBox["currCollection", "Code"],
 ", for current collection. The entries in this list will be 0s and 1s, with \
a 0 representing the fact that the card corresponding to that position is not \
owned and 1 that it is. To initialize ",
 StyleBox["currCollection", "Code"],
 ", we use the ",
 StyleBox[ButtonBox["ConstantArray",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/ConstantArray"], "FunctionLink"],
 " function. For example, to produce a list of ten 0s, you would enter the \
following."
}], "Text",ExpressionUUID->"624abd92-62fd-4563-99a4-4b82d142ef23"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ConstantArray", "[", 
  RowBox[{"0", ",", "10"}], "]"}]], "Input",
 CellLabel->"In[90]:=",ExpressionUUID->"af1d5bc8-0e2e-483d-b2a7-8e97a218ee07"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0"}], "}"}]], "Output",
 CellLabel->"Out[90]=",ExpressionUUID->"c6ef7531-3eac-46c2-ba04-dfc86329dfdc"]
}, Open  ]],

Cell[TextData[{
 "Second, random selection of integers can be accomplished with the ",
 StyleBox[ButtonBox["RandomInteger",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/RandomInteger"], "FunctionLink"],
 " function. When given an argument of the form ",
 Cell[BoxData[
  RowBox[{"{", 
   StyleBox["min", "CodeVar"], ",", 
   StyleBox["max", "CodeVar"], "}"}]], "myCode",ExpressionUUID->
  "a4439c5e-f694-450a-a854-405bc73649e9"],
 ", ",
 StyleBox[ButtonBox["RandomInteger",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/RandomInteger"], "FunctionLink"],
 " returns an integer selected from that range. Our cards are numbered 1 \
through ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]],ExpressionUUID->
  "ccc48a83-049a-4660-b0da-ba2a3dcdabe3"],
 "; so, we will use the range specification ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"1", ",", "m"}], "}"}], TraditionalForm]],ExpressionUUID->
  "d41f9e39-f097-44b1-b35c-1fe6df8e7828"],
 "."
}], "Text",ExpressionUUID->"961a60c7-8d4b-4707-876f-6c73366d63d2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomInteger", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "10"}], "}"}], "]"}]], "Input",
 CellLabel->"In[91]:=",ExpressionUUID->"6e07bcaa-c3bb-4cd9-9316-4b12121578a2"],

Cell[BoxData["10"], "Output",
 CellLabel->"Out[91]=",ExpressionUUID->"11c01fdc-0987-4363-8a2e-77c8a9259524"]
}, Open  ]],

Cell[TextData[{
 "Our function will generate a random card and set the entry in ",
 StyleBox["currCollection", "Code"],
 " at that card\[CloseCurlyQuote]s position equal to 1. This needs to keep \
happening until all the cards are owned. Therefore, we need to know when all \
of the entries of the list are 1s. We can do this by adding up the entries in \
the list. Since the entries are always 0 or 1, when the list is all 1s, the \
sum will be equal to ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]],ExpressionUUID->
  "a6db8cef-8b85-40b5-9587-31df8cffbd43"],
 " and that is the only way the sum can be ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]],ExpressionUUID->
  "281d7ec4-24eb-40a9-b01c-e81d01ae49fd"],
 ". To add the entries in the list, we can use the ",
 StyleBox[ButtonBox["Total",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Total"], "FunctionLink"],
 " function as follows."
}], "Text",ExpressionUUID->"977f7002-7516-4c14-b4ad-8bcf084e441e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1"}], "}"}], 
  "]"}]], "Input",
 CellLabel->"In[92]:=",ExpressionUUID->"4a07862b-0d37-4125-8ae1-e87fea56f8ff"],

Cell[BoxData["4"], "Output",
 CellLabel->"Out[92]=",ExpressionUUID->"c36e1e4b-47e9-4e4c-bae5-94382cfc4794"]
}, Open  ]],

Cell["\<\
Third, we keep track of how many cards have been purchased with a counter \
that we increment each time a random card is generated. \
\>", "Text",ExpressionUUID->"7eeaef66-dfbe-4fc1-9232-88e34429b140"],

Cell["Putting all of these pieces together, here is the function:", "Text",ExpressionUUID->"c265bba0-12d5-41fc-ab4c-c467b6c56e1a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cardSimulate", "[", "m_Integer", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"currCollection", ",", "count", ",", "tempCard"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"currCollection", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", "m"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"count", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Total", "[", "currCollection", "]"}], "\[NotEqual]", "m"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"tempCard", "=", 
         RowBox[{"RandomInteger", "[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "m"}], "}"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"count", "++"}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"currCollection", "[", 
          RowBox[{"[", "tempCard", "]"}], "]"}], "=", "1"}]}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", "count"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellLabel->"In[93]:=",ExpressionUUID->"545755c0-557e-41b7-aaba-6a5894489b9c"],

Cell[TextData[{
 "We run the simulation ",
 Cell[BoxData[
  FormBox["10000", TraditionalForm]],ExpressionUUID->
  "e24e6bec-7e91-4a2b-aeb5-9507349b4755"],
 " times for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"m", "=", "5"}], TraditionalForm]],ExpressionUUID->
  "9011d65c-d6ba-43a0-b75f-bc18aea0ed4c"],
 " and draw a graph of the resulting data:"
}], "Text",ExpressionUUID->"bd596c89-8b83-4c8e-9236-8d36df89733d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"simulations", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"cardSimulate", "[", "5", "]"}], ",", 
     RowBox[{"{", "10000", "}"}]}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellLabel->"In[94]:=",ExpressionUUID->"30b92402-be25-438d-93c3-4a1223501816"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", "simulations", "]"}]], "Input",
 InitializationCell->True,
 CellLabel->"In[95]:=",ExpressionUUID->"2504fc12-8d8f-4d97-a777-3ee1e1c7fcd5"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.511], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.511], Thickness[Small]}], RectangleBox[{5., 0}, {6., 421.},
      RoundingRadius->0], RectangleBox[{6., 0}, {7., 761.},
      RoundingRadius->0], RectangleBox[{7., 0}, {8., 983.},
      RoundingRadius->0], RectangleBox[{8., 0}, {9., 1128.},
      RoundingRadius->0], RectangleBox[{9., 0}, {10., 1004.},
      RoundingRadius->0], RectangleBox[{10., 0}, {11., 850.},
      RoundingRadius->0], RectangleBox[{11., 0}, {12., 853.},
      RoundingRadius->0], RectangleBox[{12., 0}, {13., 689.},
      RoundingRadius->0], RectangleBox[{13., 0}, {14., 650.},
      RoundingRadius->0], RectangleBox[{14., 0}, {15., 476.},
      RoundingRadius->0], RectangleBox[{15., 0}, {16., 393.},
      RoundingRadius->0], RectangleBox[{16., 0}, {17., 346.},
      RoundingRadius->0], RectangleBox[{17., 0}, {18., 291.},
      RoundingRadius->0], RectangleBox[{18., 0}, {19., 226.},
      RoundingRadius->0], RectangleBox[{19., 0}, {20., 184.},
      RoundingRadius->0], RectangleBox[{20., 0}, {21., 138.},
      RoundingRadius->0], RectangleBox[{21., 0}, {22., 109.},
      RoundingRadius->0], RectangleBox[{22., 0}, {23., 95.},
      RoundingRadius->0], RectangleBox[{23., 0}, {24., 81.},
      RoundingRadius->0], RectangleBox[{24., 0}, {25., 65.},
      RoundingRadius->0], RectangleBox[{25., 0}, {26., 65.},
      RoundingRadius->0], RectangleBox[{26., 0}, {27., 41.},
      RoundingRadius->0], RectangleBox[{27., 0}, {28., 29.},
      RoundingRadius->0], RectangleBox[{28., 0}, {29., 26.},
      RoundingRadius->0], RectangleBox[{29., 0}, {30., 14.},
      RoundingRadius->0], RectangleBox[{30., 0}, {31., 19.},
      RoundingRadius->0], RectangleBox[{31., 0}, {32., 7.},
      RoundingRadius->0], RectangleBox[{32., 0}, {33., 12.},
      RoundingRadius->0], RectangleBox[{33., 0}, {34., 7.},
      RoundingRadius->0], RectangleBox[{34., 0}, {35., 5.},
      RoundingRadius->0], RectangleBox[{35., 0}, {36., 5.},
      RoundingRadius->0], RectangleBox[{36., 0}, {37., 5.},
      RoundingRadius->0], RectangleBox[{37., 0}, {38., 4.},
      RoundingRadius->0], RectangleBox[{38., 0}, {39., 3.},
      RoundingRadius->0], RectangleBox[{39., 0}, {40., 2.},
      RoundingRadius->0], RectangleBox[{40., 0}, {41., 2.},
      RoundingRadius->0], RectangleBox[{41., 0},
      RoundingRadius->0], RectangleBox[{42., 0},
      RoundingRadius->0], RectangleBox[{45., 0},
      RoundingRadius->0], RectangleBox[{47., 0}, {48., 2.},
      RoundingRadius->0], RectangleBox[{48., 0}, {49., 2.},
      RoundingRadius->0], RectangleBox[{49., 0},
      RoundingRadius->0], RectangleBox[{51., 0},
      RoundingRadius->0], RectangleBox[{52., 0}, {53., 2.},
      RoundingRadius->
       0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{4.5, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{5., 30.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[95]=",ExpressionUUID->"0a617a5b-ab21-4964-b62d-bf8a6514f9d7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Computer Projects 9", "Subsection",
 CellTags->
  "SolutionsCP9",ExpressionUUID->"2195b5da-d72d-4a15-b0da-543bb2e909ba"],

Cell[TextData[{
 "Given a positive integer ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "8a0b2c7f-eb56-4b84-8bc8-78e6a16aba97"],
 ", find the probability of selecting the six integers from the set ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "\[Ellipsis]", ",", "n"}], "}"}], 
   TraditionalForm]],ExpressionUUID->"49a27c83-bb0f-431e-b10a-0dfbf7681d08"],
 " that were mechanically selected in a lottery."
}], "Problem",ExpressionUUID->"988e47a6-688c-4b0c-b892-ce66e6ad8960"],

Cell[TextData[{
 StyleBox["Solution:",
  FontSlant->"Italic"],
 " We will follow Example 4 from Section 7.1 of the text. The total number of \
ways of choosing 6 numbers from ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "b0822662-b1c3-470d-b434-4a9aabe05c85"],
 " numbers is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"C", "(", 
    RowBox[{"n", ",", "6"}], ")"}], TraditionalForm]],ExpressionUUID->
  "7fa8978f-cb64-4ac9-83c0-1fea5ef4b22c"],
 ", which is found with the function ",
 StyleBox[ButtonBox["Binomial",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Binomial"], "FunctionLink"],
 ". This gives us the total number of possibilities, only one of which will \
win. The following defines this function and applies it to the situation in \
which ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "49"}], TraditionalForm]],ExpressionUUID->
  "f3d7126c-0cb8-4dc4-9edf-827bcb4b81f6"],
 ". We include the ",
 StyleBox[ButtonBox["Condition",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Condition"], "FunctionLink"],
 " (",
 StyleBox["/;", "Code"],
 ") that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "\[GreaterEqual]", "6"}], TraditionalForm]],ExpressionUUID->
  "2b180f5e-975d-43cb-a675-dd25253f2b2e"],
 " so as to avoid division by 0."
}], "Text",ExpressionUUID->"d86ce82a-1eb2-494c-bdbb-d29eba810f83"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"lottery", "[", "n_Integer", "]"}], "/;", 
   RowBox[{"n", "\[GreaterEqual]", "6"}]}], ":=", 
  RowBox[{"1.", "/", 
   RowBox[{"Binomial", "[", 
    RowBox[{"n", ",", "6"}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellLabel->"In[96]:=",ExpressionUUID->"79f0a1cd-0865-43b4-b44a-f7cac7fe68e9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lottery", "[", "49", "]"}]], "Input",
 CellLabel->"In[97]:=",ExpressionUUID->"7be43ec8-d6fc-4d8f-864d-7fe20a764cbb"],

Cell[BoxData["7.151123842018516`*^-8"], "Output",
 CellLabel->"Out[97]=",ExpressionUUID->"bf118441-8010-4bdc-8e21-530c2a85cef5"]
}, Open  ]],

Cell["\<\
If the rules of the lottery change, so that the number of numbers chosen is \
something other than 6, then we must modify the function above. We can easily \
modify our program to allow us to specify how many numbers we want to choose, \
by adding another parameter.\
\>", "Text",ExpressionUUID->"5eb9c74a-8e4e-4b99-86a0-387fcfc2f968"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"lottery2", "[", 
    RowBox[{"n_Integer", ",", "k_Integer"}], "]"}], "/;", 
   RowBox[{"n", "\[GreaterEqual]", "k"}]}], ":=", 
  RowBox[{"1.", "/", 
   RowBox[{"Binomial", "[", 
    RowBox[{"n", ",", "k"}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellLabel->"In[98]:=",ExpressionUUID->"18f13aaf-2a78-41df-bd73-266e81776a33"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lottery2", "[", 
  RowBox[{"49", ",", "6"}], "]"}]], "Input",
 CellLabel->"In[99]:=",ExpressionUUID->"cd6f86d6-1ede-4372-ba6e-a2b19353dd82"],

Cell[BoxData["7.151123842018516`*^-8"], "Output",
 CellLabel->"Out[99]=",ExpressionUUID->"f5917dbb-9c72-44b2-a3db-74539b357395"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lottery2", "[", 
  RowBox[{"30", ",", "3"}], "]"}]], "Input",
 CellLabel->
  "In[100]:=",ExpressionUUID->"e65ac1f7-22ba-4f74-8942-096ef02b5840"],

Cell[BoxData["0.0002463054187192118`"], "Output",
 CellLabel->
  "Out[100]=",ExpressionUUID->"f62304df-e9c3-46e6-adc0-68f0105c2cbf"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Computations and Explorations 3", "Subsection",
 CellTags->
  "SolutionsCE3",ExpressionUUID->"f3da02f8-54c4-4d9c-b37a-a5d75c1eff79"],

Cell["\<\
Estimate the probability that two integers selected at random are relatively \
prime by testing a large number of randomly selected pairs of integers. Look \
up the theorem that gives this probability and compare your results with the \
correct probability. \
\>", "Problem",ExpressionUUID->"54c9152b-3c43-4bd3-9a1b-de91a8e96956"],

Cell[TextData[{
 StyleBox["Solution:",
  FontSlant->"Italic"],
 " To solve this problem, three things must be done:"
}], "Text",ExpressionUUID->"f6a2a411-f1dd-4ab7-88d0-eadbc2555d4b"],

Cell[CellGroupData[{

Cell["Devise a method for generating pairs of random integers. ", \
"Item1Numbered",ExpressionUUID->"8eff5646-70c9-470d-813e-0f81d0fe586f"],

Cell["\<\
Produce a large number of these pairs, test whether they are relatively \
prime, and note the probability estimate based on this sample. \
\>", "Item1Numbered",ExpressionUUID->"28e14352-a366-45ff-8aac-c2509ef3fc3b"],

Cell["Look up the theorem mentioned in the question.", "Item1Numbered",ExpressionUUID->"505ac0a8-af54-4f84-8ae6-021771622396"]
}, Open  ]],

Cell["Naturally, we leave part 3 entirely to the reader.", "Text",ExpressionUUID->"ecba048d-4167-462a-9302-ccb5ee33fdc0"],

Cell[TextData[{
 "The Wolfram Language function ",
 StyleBox[ButtonBox["RandomInteger",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/RandomInteger"], "FunctionLink"],
 " can be used to generate the random integers. The optional second argument \
can be used to specify a number of integers to generate. For example, the \
following generates 10 random integers between 0 and 100."
}], "Text",ExpressionUUID->"fbb92dba-afa3-4954-b860-73725cc913ab"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomInteger", "[", 
  RowBox[{"100", ",", "10"}], "]"}]], "Input",
 CellLabel->
  "In[101]:=",ExpressionUUID->"0ab4202f-d346-483d-a9b5-00b52c99bb0a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "71", ",", "90", ",", "57", ",", "56", ",", "19", ",", "70", ",", "43", ",",
    "51", ",", "0", ",", "10"}], "}"}]], "Output",
 CellLabel->
  "Out[101]=",ExpressionUUID->"d5b9648e-daa1-4036-b23b-f2611f88ad25"]
}, Open  ]],

Cell[TextData[{
 "The second argument can also specify that a nested list should be \
generated. For example, to generate ten pairs of integers, you use ",
 StyleBox["{10,2}", "Code"],
 " as the second argument."
}], "Text",ExpressionUUID->"8cc7a6eb-3af7-4203-881f-16e1f0a51b9f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomInteger", "[", 
  RowBox[{"100", ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellLabel->
  "In[102]:=",ExpressionUUID->"a3cf36c3-d0a2-4dfb-bdd1-b2082a8f38c8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"64", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"70", ",", "68"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"38", ",", "78"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"98", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"92", ",", "63"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"65", ",", "80"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", "96"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "50"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"36", ",", "61"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "77"}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[102]=",ExpressionUUID->"35524540-2205-47e6-9fa1-f26cf2df42c9"]
}, Open  ]],

Cell[TextData[{
 "Having generated such a list, we can test whether the pairs of its members \
are relatively prime using the Wolfram Language function ",
 StyleBox[ButtonBox["CoprimeQ",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/CoprimeQ"], "FunctionLink"],
 ". We can evaluate ",
 StyleBox[ButtonBox["CoprimeQ",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/CoprimeQ"], "FunctionLink"],
 " on each pair by using ",
 StyleBox[ButtonBox["Apply",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Apply"], "FunctionLink"],
 " (",
 StyleBox["@@", "Code"],
 ") at level 1. Ordinarily, ",
 StyleBox[ButtonBox["Apply",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Apply"], "FunctionLink"],
 " replaces the head of an expression with the function being applied. In \
this case, we want to apply the function ",
 StyleBox[ButtonBox["CoprimeQ",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/CoprimeQ"], "FunctionLink"],
 " not to the entire expression, but \[OpenCurlyDoubleQuote]one level down\
\[CloseCurlyDoubleQuote] at each subexpression. For this, we can give the \
level specification {1} as a third argument in the ",
 StyleBox[ButtonBox["Apply",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Apply"], "FunctionLink"],
 " function."
}], "Text",ExpressionUUID->"c27c4aaf-4cf4-43d6-b9a8-4db28acc8f37"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Apply", "[", 
  RowBox[{"CoprimeQ", ",", 
   RowBox[{"RandomInteger", "[", 
    RowBox[{"100", ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "2"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", "1", "}"}]}], "]"}]], "Input",
 CellLabel->
  "In[103]:=",ExpressionUUID->"fb053d9f-4106-4d20-82c9-e633e218efaa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "False", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True"}], "}"}]], "Output",
 CellLabel->
  "Out[103]=",ExpressionUUID->"3c2b8c8f-4d6d-4e32-8da0-466169346ccf"]
}, Open  ]],

Cell[TextData[{
 "Alternatively, you can use the ",
 StyleBox["@@@", "Code"],
 " operator."
}], "Text",ExpressionUUID->"b1e442db-5f2c-4fdd-9ac7-7b5b8ddedeae"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CoprimeQ", "@@@", 
  RowBox[{"RandomInteger", "[", 
   RowBox[{"100", ",", 
    RowBox[{"{", 
     RowBox[{"10", ",", "2"}], "}"}]}], "]"}]}]], "Input",
 CellLabel->
  "In[104]:=",ExpressionUUID->"4163b5e1-d38f-4909-9798-2a8eb2d2a749"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "False", ",", "False", ",", "True", ",", "False", ",", "False", ",", "True",
    ",", "True", ",", "True", ",", "True", ",", "True"}], "}"}]], "Output",
 CellLabel->
  "Out[104]=",ExpressionUUID->"ba53214c-6c1d-410e-8bfa-46075fbf6035"]
}, Open  ]],

Cell[TextData[{
 "Now, we just need to count the number that are relatively prime. For this, \
we use the ",
 StyleBox[ButtonBox["Count",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Count"], "FunctionLink"],
 " function with second argument ",
 StyleBox[ButtonBox["True",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/True"], "FunctionLink"],
 " to count the number of times that ",
 StyleBox[ButtonBox["True",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/True"], "FunctionLink"],
 " appears in the list."
}], "Text",ExpressionUUID->"01223f50-ca34-48fc-8479-73132df08b82"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Count", "[", 
  RowBox[{
   RowBox[{"CoprimeQ", "@@@", 
    RowBox[{"RandomInteger", "[", 
     RowBox[{"100", ",", 
      RowBox[{"{", 
       RowBox[{"10", ",", "2"}], "}"}]}], "]"}]}], ",", "True"}], 
  "]"}]], "Input",
 CellLabel->
  "In[105]:=",ExpressionUUID->"dbf2a7f0-48d1-4a3d-a1ca-fd492868a50e"],

Cell[BoxData["5"], "Output",
 CellLabel->
  "Out[105]=",ExpressionUUID->"ecd5546d-ca05-4cc8-999e-bceafcbfe588"]
}, Open  ]],

Cell["\<\
Increase the maximum integer and the number of pairs generated and divide by \
the number of pairs to get an estimate of the probability.\
\>", "Text",ExpressionUUID->"6667d66b-b6ae-45d6-80ce-be75dfe3a1fb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Count", "[", 
   RowBox[{
    RowBox[{"CoprimeQ", "@@@", 
     RowBox[{"RandomInteger", "[", 
      RowBox[{
       RowBox[{"10", "^", "50"}], ",", 
       RowBox[{"{", 
        RowBox[{"100", ",", "2"}], "}"}]}], "]"}]}], ",", "True"}], "]"}], 
  "/", "100."}]], "Input",
 CellLabel->
  "In[106]:=",ExpressionUUID->"db5613da-f3e5-40b4-bca9-18fa473bdb16"],

Cell[BoxData["0.59`"], "Output",
 CellLabel->
  "Out[106]=",ExpressionUUID->"a6bd0502-de2e-494b-ad07-11d47754fea6"]
}, Open  ]],

Cell[TextData[{
 "Repeating the computation may lead to a somewhat different result since the \
integers were generated randomly. You should try this with a larger sample \
size, say ",
 Cell[BoxData[
  FormBox["10000", TraditionalForm]],ExpressionUUID->
  "1b1f1898-a224-428f-adf3-279b30c72b45"],
 " pairs of integers. "
}], "Text",ExpressionUUID->"749c4830-7d4e-4ee4-a737-97d6907a4631"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Computations and Explorations 4", "Subsection",
 CellTags->
  "SolutionsCE4",ExpressionUUID->"905d6b33-c766-4fb7-a79d-696279f23f74"],

Cell["\<\
Determine the number of people needed to ensure that the probability at least \
two of them have the same day of the year as their birthday is at least 70%, \
at least 80%, at least 90%, at least 95%, at least 98%, and at least 99%.\
\>", "Problem",ExpressionUUID->"e21aca99-19e3-4e92-a17c-04b2fd031a3c"],

Cell[TextData[{
 StyleBox["Solution:",
  FontSlant->"Italic"],
 " Given that we know the formula for the probability of two people having \
the same birthday, we can use ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to loop over a range of possible numbers of people until we reach a \
probability greater than the desired probability. Example 13 of Section 7.2 \
of the text shows that the probability that ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "4cb60617-b1f4-4e9d-91eb-d4518fdf4d24"],
 " people in a room have different birthdays is"
}], "Text",ExpressionUUID->"7af4648c-ff93-4d88-9d44-5100272a5397"],

Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["p", "n"], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox["365", "366"], "\[CenterDot]", 
      FractionBox["364", "366"], "\[CenterDot]", 
      FractionBox["363", "366"]}], "\[CenterEllipsis]", " ", 
     FractionBox[
      RowBox[{"367", "-", "n"}], "366"]}], "=", 
    FractionBox[
     RowBox[{"P", "(", 
      RowBox[{"366", ",", "n"}], ")"}], 
     SuperscriptBox["366", "n"]]}]}], TraditionalForm]], "Equation",Expression\
UUID->"c3f377b5-cabd-4b97-8b56-d870aef792af"],

Cell[TextData[{
 "Our task is to find ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "0e1bc9ee-f14e-45e1-b9bd-1830bc0dc837"],
 " such that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "-", 
    SubscriptBox["p", "n"]}], TraditionalForm]],ExpressionUUID->
  "e3807074-3faa-46d0-a787-ae77c30933d7"],
 " is greater than the values specified in the problem. We can do this using \
the function below."
}], "Text",ExpressionUUID->"4bc17e19-c687-4c30-b44b-ccfaf2d859f2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"birthdays", "[", "percentage_Real", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"numPeople", "=", "0"}], ",", 
      RowBox[{"curProb", "=", "0"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"curProb", "<", "percentage"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"numPeople", "++"}], ";", "\[IndentingNewLine]", 
        RowBox[{"curProb", "=", 
         RowBox[{"1", "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"366", "!"}], "/", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"366", "-", "numPeople"}], ")"}], "!"}]}], ")"}], "/", 
           
           RowBox[{"366", "^", "numPeople"}]}]}]}]}]}], "\[IndentingNewLine]",
       "]"}], ";", "\[IndentingNewLine]", "numPeople"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellLabel->
  "In[107]:=",ExpressionUUID->"b61700a1-ab7a-4f77-880f-6198cea5c822"],

Cell["\<\
This function returns the number of people required to attain the given \
probability that two have the same birthday. We execute the function for \
probabilities of .70 and .95.\
\>", "Text",ExpressionUUID->"2022f4e3-77dc-4540-9228-491e8b0905a1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"birthdays", "[", ".70", "]"}]], "Input",
 CellLabel->
  "In[108]:=",ExpressionUUID->"c1f0299b-fb13-41b2-9522-482ab28ce33f"],

Cell[BoxData["30"], "Output",
 CellLabel->
  "Out[108]=",ExpressionUUID->"a94a4154-7afa-4278-843e-f2e4fa11804a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"birthdays", "[", ".95", "]"}]], "Input",
 CellLabel->
  "In[109]:=",ExpressionUUID->"7abe4fd4-e1f0-42cd-928b-d57b271014e4"],

Cell[BoxData["47"], "Output",
 CellLabel->
  "Out[109]=",ExpressionUUID->"9fd30c1a-9da9-4d1f-af70-5b1651715df4"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercises", "Section",
 CellTags->"Exercises",ExpressionUUID->"b4d128bb-1331-4ddb-bec0-298ce23fadd4"],

Cell[CellGroupData[{

Cell[TextData[{
 "Use ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to determine the integer ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]],ExpressionUUID->
  "5d2094d8-7c3d-4d47-a024-391189d6ee9b"],
 " such that the chances of picking six numbers correctly in a lottery from \
the first ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]],ExpressionUUID->
  "4c8c3060-6a87-4475-ba9b-cef68851704a"],
 " positive integers is less than"
}], "Item1Exercise",ExpressionUUID->"f84c5b40-056b-4011-8d2b-920d24fe124c"],

Cell[CellGroupData[{

Cell[TextData[{
 "1 in 100 million (",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["10", 
    RowBox[{"-", "8"}]], TraditionalForm]],ExpressionUUID->
  "4140f48a-0d53-423e-97d8-4d90f6d39cdb"],
 "),"
}], "Item2Exercise",ExpressionUUID->"a092d20d-5d32-4fe2-9a31-de5813af962d"],

Cell[TextData[{
 "1 in a billion (",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["10", 
    RowBox[{"-", "9"}]], TraditionalForm]],ExpressionUUID->
  "5da8917a-a23a-4cc4-9092-5753d148ec0f"],
 "),"
}], "Item2Exercise",ExpressionUUID->"db27040e-7b55-4c50-8ae9-21aa131d0680"],

Cell[TextData[{
 "1 in 10 billion (",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["10", 
    RowBox[{"-", "10"}]], TraditionalForm]],ExpressionUUID->
  "d5756d3b-bd30-443b-a6f1-f901b1ba19c9"],
 "),"
}], "Item2Exercise",ExpressionUUID->"5e70503e-f2ad-427a-8d17-6f9988eb277a"],

Cell[TextData[{
 "1 in 100 billion (",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["10", 
    RowBox[{"-", "11"}]], TraditionalForm]],ExpressionUUID->
  "ac2405a8-8aed-483a-91d9-328bd8e451a2"],
 "), and"
}], "Item2Exercise",ExpressionUUID->"a0fa1b1f-f806-43ef-8929-436e9c29768d"],

Cell[TextData[{
 "1 in a trillion (",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["10", 
    RowBox[{"-", "12"}]], TraditionalForm]],ExpressionUUID->
  "4f41cbdf-e415-4b5c-8511-f6d5c40ad9ae"],
 ")."
}], "Item2Exercise",ExpressionUUID->"7a27cf36-469b-4f55-acb1-8a94a4af0bc8"]
}, Open  ]],

Cell[TextData[{
 "Implement a Monte Carlo algorithm that determines whether a permutation of \
the integers 1 through ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "a8e250a5-91a1-4520-af74-7a5549f0c253"],
 " is in increasing order or not. (See Exercise 40 in Section 7.2 of the \
textbook.)"
}], "Item1Exercise",ExpressionUUID->"13d56eb4-92e3-4539-bbf2-3be31a338aea"],

Cell[TextData[{
 "Modify the implementation of the collector card simulator given in the \
solution to Computer Projects 7 to model the situation in which the cards do \
not appear with equal probabilities. For instance, there could be five \
possible cards all of which appear with probability ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", "/", "9"}], TraditionalForm]],ExpressionUUID->
  "5a1ebc60-1f57-43e3-86ab-51ee039de7d5"],
 " except for card number 5 which appears with probability ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "/", "9"}], TraditionalForm]],ExpressionUUID->
  "2769e8a7-a6c2-4659-af4c-4de13570707d"],
 "."
}], "Item1Exercise",ExpressionUUID->"bcc398f2-668f-4110-805c-e32f781923d1"],

Cell["\<\
Modify the implementation of the collector card simulator given in the \
solution to Computer Projects 7 to model the situation in which cards are \
purchased in packs. For example, there could be ten possible cards and they \
are purchased three to a pack. Assume the cards in a pack are always \
different from each other. The function should return the number of packs \
necessary to collect all of the cards.\
\>", "Item1Exercise",ExpressionUUID->"0f854509-b7be-4060-95a6-c35bf88b3d41"],

Cell[TextData[{
 "Compute the average of the probabilities returned by running the Bayesian \
filter ",
 StyleBox["pShakespeare", "Code"],
 " 100 times with the ",
 StyleBox["testMessage", "Code"],
 " argument equal to ",
 StyleBox["testPoems[[10]]", "Code"],
 " and a ",
 StyleBox["testSize", "Code"],
 " of 1, that is, on the tenth of the test poems and using one word. Repeat \
this with a ",
 StyleBox["testSize", "Code"],
 " of 2, 3, ..., 10. Graph the average probabilities for the different \
numbers of test words. Is there a trend in the average probabilities as the \
number of words increases? Explain why."
}], "Item1Exercise",ExpressionUUID->"c7ed132f-cab7-47f8-a60b-c6ce0fcf0293"],

Cell[TextData[{
 "The textbook describes how a Bayesian filter can be improved by considering \
pairs of words. Implement a Bayesian spam filter that uses this idea. Using \
the Shakespearean and Elizabethan sonnets as messages, compare the accuracy \
of your filter with ",
 StyleBox["pShakespeare", "Code"],
 "."
}], "Item1Exercise",ExpressionUUID->"7125b64f-77c2-459a-a8bd-f18b1a732412"],

Cell[TextData[{
 "As described in the textbook, spam filters are most effective when the \
words being used as the basis of comparison are not chosen randomly, as they \
are in the implementation of ",
 StyleBox["pShakespeare", "Code"],
 " above, but instead are chosen more carefully. Specifically, choosing words \
which have very high or very low probability of appearing in spam messages \
can improve the performance of the filter. Implement a Bayesian spam filter \
that uses this idea. Using the Shakespearean and Elizabethan sonnets as \
messages, compare the accuracy of your filter with ",
 StyleBox["pShakespeare", "Code"],
 "."
}], "Item1Exercise",ExpressionUUID->"df5ee51f-050d-4faa-a6e0-08a592c398e9"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
PrintingStyleEnvironment->"Working",
WindowSize->{725, 850},
WindowMargins->{{Automatic, 221}, {Automatic, 0}},
DockedCells->Cell[
  BoxData[
   TagBox[
    GridBox[{{"\"Exploring Discrete Mathematics with Mathematica\"", 
       ActionMenuBox[
       "\"Navigation\"", {
        "\"CloseAll\"" :> Module[{$CellContext`DJSection$}, SelectionMove[
             SelectedNotebook[], All, Notebook]; FrontEndExecute[
             FrontEndToken["SelectionOpenAllGroups"]]; 
           Do[NotebookLocate[$CellContext`DJSection$]; FrontEndExecute[
               FrontEndToken["OpenCloseGroup"]], {$CellContext`DJSection$, {
              "Section2a", "Section2b", "SolutionsCE3", "SolutionsCE4", 
               "SolutionsCP7", "SolutionsCP9", "Section1", "Section2", 
               "Section3", "Section4", "Solutions", "Exercises"}}]; 
           SelectionMove[
             SelectedNotebook[], Before, Notebook]], "\"Section1\"" :> 
         Module[{}, Do[NotebookLocate[$CellContext`DJSection]; FrontEndExecute[
                FrontEndToken[
                "SelectionCloseAllGroups"]], {$CellContext`DJSection, {
               "Section1", "Section2", "Section3", "Section4", "Solutions", 
                "Exercises"}}] NotebookLocate["Section1"]; FrontEndExecute[
             FrontEndToken["SelectionCloseAllGroups"]]; FrontEndExecute[
             FrontEndToken["SelectionOpenAllGroups"]]; SelectionMove[
             SelectedNotebook[], Before, Cell]], "\"Section2\"" :> 
         Module[{}, Do[NotebookLocate[$CellContext`DJSection]; FrontEndExecute[
                FrontEndToken[
                "SelectionCloseAllGroups"]], {$CellContext`DJSection, {
               "Section1", "Section2", "Section3", "Section4", "Solutions", 
                "Exercises"}}] NotebookLocate["Section2"]; FrontEndExecute[
             FrontEndToken["SelectionCloseAllGroups"]]; FrontEndExecute[
             FrontEndToken["SelectionOpenAllGroups"]]; SelectionMove[
             SelectedNotebook[], Before, Cell]], "\"Section3\"" :> 
         Module[{}, Do[NotebookLocate[$CellContext`DJSection]; FrontEndExecute[
                FrontEndToken[
                "SelectionCloseAllGroups"]], {$CellContext`DJSection, {
               "Section1", "Section2", "Section3", "Section4", "Solutions", 
                "Exercises"}}] NotebookLocate["Section3"]; FrontEndExecute[
             FrontEndToken["SelectionCloseAllGroups"]]; FrontEndExecute[
             FrontEndToken["SelectionOpenAllGroups"]]; SelectionMove[
             SelectedNotebook[], Before, Cell]], "\"Section4\"" :> 
         Module[{}, Do[NotebookLocate[$CellContext`DJSection]; FrontEndExecute[
                FrontEndToken[
                "SelectionCloseAllGroups"]], {$CellContext`DJSection, {
               "Section1", "Section2", "Section3", "Section4", "Solutions", 
                "Exercises"}}] NotebookLocate["Section4"]; FrontEndExecute[
             FrontEndToken["SelectionCloseAllGroups"]]; FrontEndExecute[
             FrontEndToken["SelectionOpenAllGroups"]]; SelectionMove[
             SelectedNotebook[], Before, Cell]], "\"Solutions\"" :> 
         Module[{}, Do[NotebookLocate[$CellContext`DJSection]; FrontEndExecute[
                FrontEndToken[
                "SelectionCloseAllGroups"]], {$CellContext`DJSection, {
               "Section1", "Section2", "Section3", "Section4", "Solutions", 
                "Exercises"}}] NotebookLocate["Solutions"]; FrontEndExecute[
             FrontEndToken["SelectionCloseAllGroups"]]; FrontEndExecute[
             FrontEndToken["SelectionOpenAllGroups"]]; SelectionMove[
             SelectedNotebook[], Before, Cell]], "\"Exercises\"" :> 
         Module[{}, Do[NotebookLocate[$CellContext`DJSection]; FrontEndExecute[
                FrontEndToken[
                "SelectionCloseAllGroups"]], {$CellContext`DJSection, {
               "Section1", "Section2", "Section3", "Section4", "Solutions", 
                "Exercises"}}] NotebookLocate["Exercises"]; FrontEndExecute[
             FrontEndToken["SelectionCloseAllGroups"]]; FrontEndExecute[
             FrontEndToken["SelectionOpenAllGroups"]]; SelectionMove[
             SelectedNotebook[], Before, Cell]], "\"Open All\"" :> 
         Module[{$CellContext`DJSection$}, 
           Do[NotebookLocate[$CellContext`DJSection$]; FrontEndExecute[
               FrontEndToken[
               "SelectionOpenAllGroups"]], {$CellContext`DJSection$, {
              "Exercises", "Section1", "Section2", "Section2a", "Section2b", 
               "Section3", "Section4", "Solutions", "SolutionsCE3", 
               "SolutionsCE4", "SolutionsCP7", "SolutionsCP9"}}] SelectionMove[
             SelectedNotebook[], Before, Notebook]]}]}}, 
     GridBoxAlignment -> {
      "Columns" -> {Left, Baseline}, "Rows" -> {Right, Baseline}}, AutoDelete -> 
     False, GridBoxItemSize -> {"Columns" -> {
         Scaled[0.8], 
         Scaled[0.2]}}], "Grid"]], "DockedCell", FontFamily -> "Times"],
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
Magnification->1,
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> 
     FrontEnd`FileName[{"Book"}, "Textbook.nb", CharacterEncoding -> 
       "UTF-8"]]], 
   Cell[
    StyleData[All, "Printout"], PageWidth -> PaperWidth, 
    CellHorizontalScrolling -> True, 
    CellLabelMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
    ShowAutoStyles -> False, 
    AutoStyleOptions -> {"HighlightMisspelledWords" -> False}, ScriptMinSize -> 
    9, MenuSortingValue -> 1500, 
    PrivateFontOptions -> {"FontType" -> "Outline"}, Magnification -> 1], 
   Cell[
    StyleData["Title"], Editable -> False, ShowCellBracket -> Automatic, 
    CellGroupingRules -> {"TitleGrouping", 0}, PageBreakBelow -> False, 
    DefaultNewInlineCellStyle -> {}, LanguageCategory -> "NaturalLanguage", 
    FontFamily -> "Helvetica", FontSize -> 25, FontWeight -> "Bold", 
    FontColor -> GrayLevel[0.137255]], 
   Cell[
    StyleData["BookChapterTitle", StyleDefinitions -> StyleData["Title"]], 
    CellFrame -> {{0, 0}, {1, 1}}, CellDingbat -> Cell[
      BoxData[
       GraphicsBox[{{
          RGBColor[0.09375, 0.570313, 0.816406], 
          RectangleBox[{0, 0}]}, {
          GrayLevel[1], FontSize -> 35, FontWeight -> Bold, FontFamily -> 
          "Helvetica", 
          InsetBox[
           CounterBox["ChapterNumber"], {0.5, 0.45}, {Center, Center}]}}, 
        ImageSize -> {70, 70}]], "Output"], 
    CellMargins -> {{100, 0}, {20, 20}}, CellFrameColor -> GrayLevel[1]], 
   Cell[
    StyleData["DockedCell"], CellMargins -> {{12, 12}, {20, 0}}, 
    CellGroupingRules -> "TitleGrouping", 
    ConversionRules :> {"TeX" -> {"\n\\chapter{", "}"}}, 
    TaggingRules :> {"CounterSettings" -> {"CounterTarget" -> "CellGroup"}}, 
    PageBreakAbove -> False, PageBreakBelow -> False, LineSpacing -> {1, 2}, 
    MenuSortingValue -> 1105, FontFamily -> "Helvetica", FontSize -> 27, 
    FontWeight -> "Bold", Background -> RGBColor[0.09375, 0.570313, 0.816406],
     CounterBoxOptions -> {
     CounterFunction :> Identity}, $CellContext`DefaultReturnCreatedCellStyle -> 
    "Section"], 
   Cell[
    StyleData["FunctionLink"], ConversionRules :> {"TeX" -> {{"", 
         $CellContext`ExportAsHyperRef[], ""}, {"", Automatic, ""}}}, 
    MenuSortingValue -> 1105, ButtonStyleMenuListing -> None, FontFamily -> 
    "Courier", FontVariations -> {"Underline" -> True}, FontColor -> 
    RGBColor[0, 0, 1], 
    ButtonBoxOptions -> {Active -> True, ButtonFunction :> (FrontEndExecute[{
         FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> ButtonData}], 
   Cell[
    StyleData["Problem"], CellMargins -> {{40, 12}, {15, 15}}, 
    CellGroupingRules -> {"GroupTogetherNestedGrouping", 15010}, 
    ConversionRules :> {
     "TeX" -> {{"", Automatic, ""}, {"\n\n", Automatic, ""}}}, 
    TaggingRules :> {
     "ExtraConversionRules" -> {"General" -> {"RestartList" -> False}}}], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Item1Exercise"], CellDingbat -> Cell[
         TextData[{
           CounterBox["Item1Exercise"], "."}], CellSize -> {30, Inherited}, 
         TextAlignment -> Right, FontWeight -> "Bold"], 
       CellMargins -> {{50, 12}, {3, 5}}, 
       CellGroupingRules -> {"GroupTogetherNestedGrouping", 17000}, 
       CellFrameLabels -> {{None, None}, {None, None}}, CellFrameLabelMargins -> 
       6, CounterIncrements -> "Item1Exercise", 
       CounterAssignments -> {{"Item2Exercise", 0}}, MenuSortingValue -> 
       4100], 
      Cell[
       StyleData["Item1Exercise", "Printout"], CellDingbat -> Cell[
         TextData[{
           CounterBox["Item1Exercise"], "."}], CellSize -> {20, Inherited}, 
         TextAlignment -> Right, FontWeight -> "Bold"], 
       CellMargins -> {{35, 12}, {3, 5}}, 
       CellGroupingRules -> {"GroupTogetherNestedGrouping", 17000}, 
       CellFrameLabels -> {{None, None}, {None, None}}, CellFrameLabelMargins -> 
       6]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["ExerciseContinuation"], CellMargins -> {{50, 12}, {1, 3}}, 
       CellGroupingRules -> {"GroupTogetherNestedGrouping", 17000}, 
       CellFrameLabels -> {{None, None}, {None, None}}, CellFrameLabelMargins -> 
       6, MenuSortingValue -> 4101], 
      Cell[
       StyleData["ExerciseContinuation", "Printout"], 
       CellMargins -> {{35, 12}, {1, 3}}, 
       CellFrameLabels -> {{None, None}, {None, None}}, CellFrameLabelMargins -> 
       6]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Item2Exercise"], CellDingbat -> Cell[
         TextData[{
           CounterBox["Item2Exercise"], "."}], CellSize -> {32, Inherited}, 
         TextAlignment -> Right, FontWeight -> "Bold"], 
       CellMargins -> {{75, 12}, {1, 2}}, 
       CellGroupingRules -> {"GroupTogetherNestedGrouping", 17100}, 
       CellFrameLabels -> {{None, None}, {None, None}}, CellFrameLabelMargins -> 
       6, CounterIncrements -> "Item2Exercise", MenuSortingValue -> 4200, 
       CounterBoxOptions -> {CounterFunction :> (Part[
           CharacterRange["a", "z"], #]& )}], 
      Cell[
       StyleData["Item2Exercise", "Printout"], CellDingbat -> Cell[
         TextData[{
           CounterBox["Item2Exercise"], "."}], CellSize -> {20, Inherited}, 
         TextAlignment -> Right, FontWeight -> "Bold"], 
       CellMargins -> {{50, 12}, {1, 2}}, 
       CellFrameLabels -> {{None, None}, {None, None}}, CellFrameLabelMargins -> 
       6, CounterBoxOptions -> {CounterFunction :> (Part[
           CharacterRange["a", "z"], #]& )}]}, Open]], 
   Cell[
    StyleData["ExerciseEquation"], CellMargins -> {{36, 12}, {7, 7}}, 
    CellGroupingRules -> {"GroupTogetherNestedGrouping", 17200}, 
    CellHorizontalScrolling -> True, 
    CellFrameLabels -> {{None, None}, {None, None}}, DefaultFormatType -> 
    TraditionalForm, InputAutoReplacements -> {}, TextAlignment -> Center, 
    MenuSortingValue -> 4300, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}], 
   Cell[
    StyleData["myCode"], CellMargins -> {{66, 10}, {5, 10}}, 
    StyleKeyMapping -> {"=" -> "WolframAlphaShort"}, Evaluatable -> False, 
    CellGroupingRules -> "InputGrouping", TextClipboardType -> "InputText", 
    PageBreakWithin -> False, GroupPageBreakWithin -> False, 
    DefaultFormatType -> DefaultInputFormatType, ContextMenu -> 
    FEPrivate`FrontEndResource["ContextMenus", "myCode"], ShowAutoStyles -> 
    True, "TwoByteSyntaxCharacterAutoReplacement" -> True, 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    AutoItalicWords -> {}, AutoQuoteCharacters -> {}, 
    PasteAutoQuoteCharacters -> {}, LanguageCategory -> "Mathematica", 
    FormatType -> InputForm, NumberMarks -> True, 
    LinebreakAdjustments -> {0.85, 2, 10, 0, 1}, CounterIncrements -> "Code", 
    MenuSortingValue -> 1495, MenuCommandKey -> "8", FontWeight -> 
    "Bold", $CellContext`StripStyleOnPaste -> True], 
   Cell[
    StyleData["CodeVar"], DefaultFormatType -> DefaultInputFormatType, 
    LineBreakWithin -> False, MenuSortingValue -> 10000, FontWeight -> "Bold",
     FontSlant -> "Italic", FontColor -> GrayLevel[0.4]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Section"], CellFrame -> {{6, 0}, {0, 1}}, ShowCellBracket -> 
       Automatic, CellMargins -> {{12, 12}, {3, 24}}, 
       CellGroupingRules -> {"SectionGrouping", 30}, 
       ConversionRules :> {
        "TeX" -> {"\n\\section{", "}"}, 
         "HTML" -> {"<h3 class=\"Section\">", "</h3>"}}, 
       TaggingRules :> {
        "CounterSettings" -> {
          "CounterFormat" -> {"BookChapterNumber", ".", "Section"}, 
           "CounterTarget" -> "Cell", "XRefPrefix" -> "Section"}}, 
       PageBreakBelow -> False, CellFrameMargins -> {{8, 8}, {4, 6}}, 
       CellFrameColor -> RGBColor[0.09375, 0.570313, 0.816406], TabSpacings -> 
       2.1, CounterIncrements -> {
        "Section", "SectionHeader", "SubsectionHeader", "SubsubsectionHeader",
          "SubsubsubsectionHeader"}, FontFamily -> "Helvetica", FontSize -> 
       16, FontWeight -> "Bold", Background -> GrayLevel[0.999985]], 
      Cell[
       StyleData["Section", "Printout"], CellFrame -> {{4, 0}, {0, 0.5}}, 
       CellMargins -> {{2, 2}, {3, 21}}, CellFrameMargins -> {{6, 6}, {3, 5}},
        CellFrameColor -> RGBColor[0.09375, 0.570313, 0.816406]], 
      Cell[
       StyleData["Section", "DoubleSpacedPrintout"], 
       CellFrame -> {{4, 0}, {0, 0.5}}, CellMargins -> {{2, 2}, {3, 21}}, 
       CellFrameMargins -> {{6, 6}, {3, 5}}, CellFrameColor -> 
       RGBColor[0.09375, 0.570313, 0.816406], FontSize -> 14]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Subsubsection"], CellDingbat -> None, 
       CellMargins -> {{12, 12}, {0, 6}}, 
       CellElementSpacings -> {"ClosedGroupTopMargin" -> 12}, 
       CellGroupingRules -> {"SectionGrouping", 50}, 
       ConversionRules :> {
        "TeX" -> {"\n\\subsubsection{", "}"}, 
         "HTML" -> {"<h5 class=\"Subsubsection\">", "</h5>"}}, PageBreakBelow -> 
       False, CellFrameLabelMargins -> 4, 
       CounterIncrements -> {
        "Subsubsection", "SubsubsectionHeader", "SubsubsubsectionHeader"}, 
       FontFamily -> "Helvetica", FontSize -> 11, FontWeight -> "Bold", 
       FontSlant -> "Italic"], 
      Cell[
       StyleData["Subsubsection", "Printout"], FontFamily -> "Helvetica", 
       FontSize -> 11, FontWeight -> "Bold", FontSlant -> "Italic"]}, Open]], 
   
   Cell[
    StyleData["Equation"], CellMargins -> {{26, 10}, {7, 7}}, 
    ConversionRules :> {
     "HTML" -> {{"", ""}, {"<p class=\"Equation\">", "</p>"}}}, 
    CellHorizontalScrolling -> True, DefaultFormatType -> TraditionalForm, 
    InputAutoReplacements -> {}, TextAlignment -> Center, CounterIncrements -> 
    "Equation", ButtonBoxOptions -> {Appearance -> {Automatic, None}}], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Item1Numbered"], CellDingbat -> Cell[
         TextData[{
           CounterBox["Item1Numbered"], "."}], CellSize -> {32, Inherited}, 
         TextAlignment -> Right, 
         TextJustification -> (FontWeight -> "Plain")], 
       CellMargins -> {{36, 12}, {1, 3}}, 
       CellGroupingRules -> {"GroupTogetherNestedGrouping", 15000}, 
       ConversionRules :> {{"TeX" -> {"\n\\item ", ""}}, {
         "HTML" -> {"<li>", "</li>"}}}, 
       TaggingRules :> {
        "ExtraConversionRules" -> {
          "General" -> {"NestingLevel" -> 30}, 
           "TeX" -> {"CellGroupEnvironment" -> "enumerate"}, 
           "HTML" -> {"CellGroupEnvironment" -> "ol"}}}, 
       CellFrameLabels -> {{None, None}, {None, None}}, CellFrameLabelMargins -> 
       6, TextJustification -> 1, CounterIncrements -> "Item1Numbered", 
       CounterAssignments -> {{"Item2Numbered", 0}, {"Item3Numbered", 0}}], 
      Cell[
       StyleData["Item1Numbered", "Printout"], CellDingbat -> Cell[
         TextData[{
           CounterBox["Item1Numbered"], "."}], CellSize -> {20, Inherited}, 
         TextAlignment -> Right, FontWeight -> "Plain"], 
       CellMargins -> {{24, 2}, {1, 2}}, CellFrameLabelMargins -> 3, 
       TextJustification -> 1]}, Open]], 
   Cell[
    StyleData["InitializationCell"], Background -> GrayLevel[1]], 
   Cell[
    StyleData["Item1"], TextJustification -> 1], 
   Cell[
    StyleData["Item1Printout"], TextJustification -> 1, MenuSortingValue -> 
    10000], 
   Cell[
    StyleData["Code"], FormatType -> InputForm]}, Visible -> False, 
  FrontEndVersion -> 
  "11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, 2018)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Section1"->{
  Cell[2790, 69, 140, 1, 55, "Section",ExpressionUUID->"eb92fc80-98c7-4ad8-ac1c-185057a3e876",
   CellTags->"Section1"]},
 "Section2"->{
  Cell[12178, 340, 119, 1, 55, "Section",ExpressionUUID->"ebef388e-7d42-4285-83da-6d2141e65084",
   CellTags->"Section2"]},
 "Section2a"->{
  Cell[13342, 374, 126, 1, 32, "Subsection",ExpressionUUID->"4f8672d2-130f-49e5-b7c6-5467d0e150a7",
   CellTags->"Section2a"]},
 "Section2b"->{
  Cell[91137, 2398, 145, 2, 32, "Subsection",ExpressionUUID->"d09817ca-8d2a-4cb4-ad01-f42b4e8b262c",
   PageBreakWithin->False,
   CellTags->"Section2b"]},
 "Section3"->{
  Cell[108278, 2882, 132, 1, 55, "Section",ExpressionUUID->"d5a73d40-2fe4-4715-9aa5-eaf593825c33",
   CellTags->"Section3"]},
 "Section4"->{
  Cell[161943, 4279, 128, 1, 55, "Section",ExpressionUUID->"f52d170b-ba36-40b3-bb81-dd6bb16ed2ad",
   CellTags->"Section4"]},
 "Solutions"->{
  Cell[175520, 4687, 170, 3, 55, "Section",ExpressionUUID->"86ecee26-5bc4-4e5b-9971-46ae327f5ba7",
   CellTags->"Solutions"]},
 "SolutionsCP7"->{
  Cell[175715, 4694, 126, 2, 32, "Subsection",ExpressionUUID->"a8567d5c-6b46-4055-9007-c0593f68e221",
   CellTags->"SolutionsCP7"]},
 "SolutionsCP9"->{
  Cell[187231, 4980, 126, 2, 32, "Subsection",ExpressionUUID->"2195b5da-d72d-4a15-b0da-543bb2e909ba",
   CellTags->"SolutionsCP9"]},
 "SolutionsCE3"->{
  Cell[191325, 5104, 138, 2, 32, "Subsection",ExpressionUUID->"f3da02f8-54c4-4d9c-b37a-a5d75c1eff79",
   CellTags->"SolutionsCE3"]},
 "SolutionsCE4"->{
  Cell[199799, 5364, 138, 2, 32, "Subsection",ExpressionUUID->"905d6b33-c766-4fb7-a79d-696279f23f74",
   CellTags->"SolutionsCE4"]},
 "Exercises"->{
  Cell[203936, 5489, 107, 1, 55, "Section",ExpressionUUID->"b4d128bb-1331-4ddb-bec0-298ce23fadd4",
   CellTags->"Exercises"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Section1", 226290, 5969},
 {"Section2", 226427, 5972},
 {"Section2a", 226567, 5975},
 {"Section2b", 226711, 5978},
 {"Section3", 226882, 5982},
 {"Section4", 227023, 5985},
 {"Solutions", 227165, 5988},
 {"SolutionsCP7", 227311, 5991},
 {"SolutionsCP9", 227463, 5994},
 {"SolutionsCE3", 227615, 5997},
 {"SolutionsCE4", 227767, 6000},
 {"Exercises", 227916, 6003}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 157, 3, 108, "BookChapterTitle",ExpressionUUID->"6a6d53b3-16b5-4f96-8cdf-e8fce7e958a4",
 CounterAssignments->{{"ChapterNumber", 7}}],
Cell[CellGroupData[{
Cell[762, 29, 86, 0, 55, "Section",ExpressionUUID->"5c129b62-ff22-4c0e-8616-dc435656c647"],
Cell[851, 31, 363, 7, 35, "Text",ExpressionUUID->"e9f849d2-9d5e-4c8e-8d5d-b578ed7cd0b9"],
Cell[1217, 40, 673, 10, 50, "Text",ExpressionUUID->"182324d2-31df-4a4a-8175-8df68c4c5247"],
Cell[1893, 52, 860, 12, 95, "Text",ExpressionUUID->"2172a1bb-2240-4ff2-9926-c88e7deb5354"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2790, 69, 140, 1, 55, "Section",ExpressionUUID->"eb92fc80-98c7-4ad8-ac1c-185057a3e876",
 CellTags->"Section1"],
Cell[2933, 72, 280, 4, 35, "Text",ExpressionUUID->"3530cf71-f412-4a61-8f68-3218c1869d4f"],
Cell[3216, 78, 285, 4, 35, "Text",ExpressionUUID->"bdd62906-88e1-4da9-ae9f-9602c03c5dba"],
Cell[CellGroupData[{
Cell[3526, 86, 163, 3, 31, "Input",ExpressionUUID->"16a22139-300c-48ba-aa2d-2574230486b5"],
Cell[3692, 91, 112, 1, 31, "Output",ExpressionUUID->"f4f8c318-c39b-4de8-9569-2ea4ead704b2"]
}, Open  ]],
Cell[3819, 95, 164, 3, 20, "Text",ExpressionUUID->"47e3b35f-151b-44f0-bd59-6dbbfed8b40b"],
Cell[CellGroupData[{
Cell[4008, 102, 187, 4, 31, "Input",ExpressionUUID->"9ea749c8-370e-4310-8554-be0b73300db6"],
Cell[4198, 108, 132, 2, 47, "Output",ExpressionUUID->"35e0c843-cbe0-4a6e-9353-e83404e9aa20"]
}, Open  ]],
Cell[4345, 113, 604, 13, 51, "Text",ExpressionUUID->"ce358c70-6baf-40a4-b8f1-5b81a179b884"],
Cell[CellGroupData[{
Cell[4974, 130, 217, 5, 31, "Input",ExpressionUUID->"0bdcb80e-0a2f-49fb-8bb9-723f0cfeefff"],
Cell[5194, 137, 125, 1, 32, "Output",ExpressionUUID->"878172be-a7cf-406a-adea-65e46eb35127"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5356, 143, 244, 6, 31, "Input",ExpressionUUID->"9d10d190-d6bd-4982-a0ab-b184e7e2be90"],
Cell[5603, 151, 146, 1, 32, "Output",ExpressionUUID->"ccb2153c-bd80-44ed-98aa-bbd4a9017600"]
}, Open  ]],
Cell[5764, 155, 391, 8, 39, "Text",ExpressionUUID->"753c8364-b35c-44b8-b966-24cdeedb8fba"],
Cell[CellGroupData[{
Cell[6180, 167, 189, 4, 31, "Input",ExpressionUUID->"72a78342-c509-458e-b8fb-2c9fd6622347"],
Cell[6372, 173, 127, 1, 32, "Output",ExpressionUUID->"f2b95ef1-1a05-4789-8130-0160a259a36c"]
}, Open  ]],
Cell[6514, 177, 513, 12, 35, "Text",ExpressionUUID->"1acb3b55-fa8b-4071-9e76-5f53183bfc15"],
Cell[7030, 191, 346, 9, 31, "Input",ExpressionUUID->"1695345c-067a-4641-a27a-e3ad6c0da54b",
 InitializationCell->True],
Cell[7379, 202, 142, 2, 20, "Text",ExpressionUUID->"7329e694-690a-4651-aa1b-66a0144b719b"],
Cell[CellGroupData[{
Cell[7546, 208, 222, 5, 31, "Input",ExpressionUUID->"2d90f52d-cb5a-4356-a11d-311a3a0bf611"],
Cell[7771, 215, 194, 4, 34, "Output",ExpressionUUID->"ee9c70f4-8585-4c7e-81dd-a9873959cc2e"]
}, Open  ]],
Cell[7980, 222, 658, 15, 36, "Text",ExpressionUUID->"4cd29d6a-e5a0-4107-976d-17dc5bfd58d0"],
Cell[CellGroupData[{
Cell[8663, 241, 374, 10, 31, "Input",ExpressionUUID->"32d38d35-f51b-4861-a0bd-5d9012739044",
 InitializationCell->True],
Cell[9040, 253, 1026, 25, 78, "Output",ExpressionUUID->"b8cdff0a-bd4f-4e5a-aca5-764e69eddf41"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10103, 283, 151, 2, 31, "Input",ExpressionUUID->"46b2f2cb-ee47-4a9f-8d54-9058ef9de6d3"],
Cell[10257, 287, 1594, 39, 220, "Output",ExpressionUUID->"6ae01a6b-4abb-4632-a2a3-4ccae10abc13"]
}, Open  ]],
Cell[11866, 329, 275, 6, 21, "Text",ExpressionUUID->"1cd67f47-43fe-4efe-b03d-dbc7d8da2f8f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12178, 340, 119, 1, 55, "Section",ExpressionUUID->"ebef388e-7d42-4285-83da-6d2141e65084",
 CellTags->"Section2"],
Cell[12300, 343, 206, 5, 20, "Text",ExpressionUUID->"d1dbb36b-01ef-4d3d-8fee-19d3a8481aed"],
Cell[12509, 350, 395, 6, 50, "Text",ExpressionUUID->"e562bf52-6112-4e88-97a1-e1d4eb6df5a3"],
Cell[CellGroupData[{
Cell[12929, 360, 248, 6, 31, "Input",ExpressionUUID->"236338b3-1248-48a2-a18c-3c6ac12cc8c0"],
Cell[13180, 368, 125, 1, 31, "Output",ExpressionUUID->"149aa138-137a-47a7-bd90-ca6eb51a3978"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13342, 374, 126, 1, 32, "Subsection",ExpressionUUID->"4f8672d2-130f-49e5-b7c6-5467d0e150a7",
 CellTags->"Section2a"],
Cell[13471, 377, 622, 14, 35, "Text",ExpressionUUID->"eab3a67b-5441-4dac-ba9f-cfb8b85160f5"],
Cell[14096, 393, 211, 3, 20, "Text",ExpressionUUID->"a8cc25dc-66c0-4e70-805e-0dc612bcde1a"],
Cell[CellGroupData[{
Cell[14332, 400, 131, 0, 18, "Subsubsection",ExpressionUUID->"8d955e8c-6270-4301-b3ef-6d56981898f6"],
Cell[14466, 402, 1133, 23, 83, "Text",ExpressionUUID->"deb46ab1-d6ee-44ea-9930-9db15476f5a7"],
Cell[15602, 427, 1079, 20, 82, "Text",ExpressionUUID->"7015543b-85e3-4031-86ee-fce4ed72cd9c"],
Cell[16684, 449, 172, 3, 31, "myCode",ExpressionUUID->"eda2bd57-a005-46b1-a1ba-e84febf6b515"],
Cell[16859, 454, 811, 20, 55, "Text",ExpressionUUID->"014a2666-cfc2-411d-9487-901657d9b514"],
Cell[17673, 476, 1033, 22, 67, "Text",ExpressionUUID->"7a55a9cd-ff51-4a6f-89e1-3393d2007d7a"],
Cell[18709, 500, 372, 8, 35, "Text",ExpressionUUID->"d3996daa-3182-432e-ae83-e9cc41e3413e"],
Cell[CellGroupData[{
Cell[19106, 512, 311, 7, 31, "Input",ExpressionUUID->"56182067-1565-4b84-b897-3a8caa6e1955"],
Cell[19420, 521, 126, 1, 31, "Output",ExpressionUUID->"fb3660c7-6f5c-46bb-b29c-aacf26c13319"]
}, Open  ]],
Cell[19561, 525, 147, 2, 20, "Text",ExpressionUUID->"9f246eaa-4142-4e5b-a23f-143aa173fc7a"],
Cell[19711, 529, 604, 10, 51, "Text",ExpressionUUID->"e81e88bc-b2a1-41a6-a431-41eb55c14ad9"],
Cell[CellGroupData[{
Cell[20340, 543, 285, 6, 31, "Input",ExpressionUUID->"4c792575-f395-45d6-b46c-0a1b3b5fc133"],
Cell[20628, 551, 126, 1, 31, "Output",ExpressionUUID->"f9b9b7ad-662e-44b0-ad7a-3f3a2f8b6e7b"]
}, Open  ]],
Cell[20769, 555, 1390, 31, 88, "Text",ExpressionUUID->"1b83a9cd-cf84-4834-b0dc-bb0cc22a78cf"],
Cell[CellGroupData[{
Cell[22184, 590, 397, 10, 31, "Input",ExpressionUUID->"dbb51e7e-36ed-454d-902d-862eba747cae"],
Cell[22584, 602, 128, 2, 47, "Output",ExpressionUUID->"9b740107-8acf-44dc-98b8-d9a74a9fb6fc"]
}, Open  ]],
Cell[22727, 607, 969, 17, 81, "Text",ExpressionUUID->"35245cd6-d425-419a-aee4-92cf861c673e"],
Cell[CellGroupData[{
Cell[23721, 628, 289, 6, 31, "Input",ExpressionUUID->"c3ffa7f0-f0ba-44f4-aeb1-750d9f42cbfd"],
Cell[24013, 636, 125, 1, 31, "Output",ExpressionUUID->"0922dabd-892e-4bc9-8f85-f6dc4db93147"]
}, Open  ]],
Cell[24153, 640, 448, 8, 35, "Text",ExpressionUUID->"1470abc1-0e71-47b0-bd29-d4b1db59e7b4"],
Cell[CellGroupData[{
Cell[24626, 652, 354, 8, 31, "Input",ExpressionUUID->"9dc137f9-8da9-4bed-938f-4e7f9570dd47"],
Cell[24983, 662, 116, 1, 31, "Output",ExpressionUUID->"6ba16f8d-18a5-4190-8b92-f5f1972ba227"]
}, Open  ]],
Cell[25114, 666, 646, 14, 50, "Text",ExpressionUUID->"64d2cf23-3793-4d9a-b761-ab6714cc6604"],
Cell[CellGroupData[{
Cell[25785, 684, 492, 13, 51, "Input",ExpressionUUID->"da7a0dd9-85f5-4a44-a607-26931459af27"],
Cell[26280, 699, 125, 1, 31, "Output",ExpressionUUID->"6236808c-7a61-466a-ba4a-b0644ca77fa1"]
}, Open  ]],
Cell[26420, 703, 237, 7, 24, "Text",ExpressionUUID->"122b819c-eb81-4ead-9741-bf0d17d944f6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26694, 715, 102, 0, 18, "Subsubsection",ExpressionUUID->"4f64ea62-af0e-4f66-ae46-8259449a144d"],
Cell[26799, 717, 448, 11, 37, "Text",ExpressionUUID->"cd979fcb-15a5-4145-84db-130076d01395"],
Cell[27250, 730, 1534, 45, 59, "Text",ExpressionUUID->"4b92486e-f870-4e84-947a-8cf27451a10d"],
Cell[28787, 777, 601, 15, 35, "Text",ExpressionUUID->"913b6c52-5b49-44bf-9002-d57f25bb4e20"],
Cell[CellGroupData[{
Cell[29413, 796, 262, 6, 31, "Input",ExpressionUUID->"003e0685-a62e-4926-aba4-0242bfc7dcad"],
Cell[29678, 804, 4448, 98, 243, "Output",ExpressionUUID->"0492462c-70e5-4c6f-9b09-cb7c29b67026"]
}, Open  ]],
Cell[34141, 905, 418, 10, 21, "Text",ExpressionUUID->"2cd82d01-afac-4b81-b850-f90d17d13b62"],
Cell[CellGroupData[{
Cell[34584, 919, 434, 11, 31, "Input",ExpressionUUID->"94222e9c-8ddb-4274-975b-4e79fd4b5458"],
Cell[35021, 932, 4208, 96, 238, "Output",ExpressionUUID->"555a682f-6d7a-44c9-af94-fed67f6840a9"]
}, Open  ]],
Cell[39244, 1031, 847, 16, 67, "Text",ExpressionUUID->"a2c3843f-68f2-45bb-a4d8-a2d1901146aa"],
Cell[40094, 1049, 779, 20, 53, "Text",ExpressionUUID->"31b2c18b-ee0d-49d3-81ed-5e6b9be056fd"],
Cell[CellGroupData[{
Cell[40898, 1073, 208, 4, 31, "Input",ExpressionUUID->"b513817c-f12e-4874-86f1-01360e47632a"],
Cell[41109, 1079, 2047, 54, 53, "Output",ExpressionUUID->"ac34b5ab-92c6-49b4-9fe2-f8e319759bf3"]
}, Open  ]],
Cell[43171, 1136, 1030, 28, 58, "Text",ExpressionUUID->"d0368ac3-65ab-4ee7-acb2-bbfde8795baa"],
Cell[44204, 1166, 541, 12, 36, "Text",ExpressionUUID->"864cbf7c-63bb-4621-a28b-e29954870605"],
Cell[CellGroupData[{
Cell[44770, 1182, 238, 5, 31, "Input",ExpressionUUID->"9746f6bf-dbcd-47b2-83c9-8ce7e5aa2ed4"],
Cell[45011, 1189, 126, 1, 31, "Output",ExpressionUUID->"01de951d-e357-4eb5-9d85-f257fedf6fbd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45174, 1195, 233, 5, 31, "Input",ExpressionUUID->"be122d4f-8e91-4fc7-be1e-c9433b284b45"],
Cell[45410, 1202, 125, 1, 31, "Output",ExpressionUUID->"30fdf665-c460-4b4a-9945-11b7c53155b4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45572, 1208, 311, 7, 31, "Input",ExpressionUUID->"be8f5808-5e80-4088-804e-0f69d19ac471"],
Cell[45886, 1217, 125, 1, 31, "Output",ExpressionUUID->"6d52389e-bfff-4bc2-bf82-f30124f7866e"]
}, Open  ]],
Cell[46026, 1221, 367, 10, 21, "Text",ExpressionUUID->"d1242f85-1286-48c5-a21a-953e5400547c"],
Cell[CellGroupData[{
Cell[46418, 1235, 352, 9, 31, "Input",ExpressionUUID->"fe328393-035b-4590-b23e-2bd14321d6dc"],
Cell[46773, 1246, 4208, 96, 238, "Output",ExpressionUUID->"3eb116e2-347b-44fd-b018-076cff26b506"]
}, Open  ]],
Cell[50996, 1345, 392, 8, 36, "Text",ExpressionUUID->"49b04b84-aa76-44f3-b0db-a435026fc14e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51425, 1358, 105, 0, 18, "Subsubsection",ExpressionUUID->"656e2e49-82c1-4660-8ce0-fba2174e150b"],
Cell[51533, 1360, 1173, 32, 56, "Text",ExpressionUUID->"e014f86e-35a2-4eb9-bce1-34158e23d810"],
Cell[CellGroupData[{
Cell[52731, 1396, 368, 9, 31, "Input",ExpressionUUID->"98b8e606-8173-4d72-986e-87f0381d4da9"],
Cell[53102, 1407, 125, 1, 31, "Output",ExpressionUUID->"a4478fa7-4713-490d-820e-5b129b0d4c73"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[53276, 1414, 112, 0, 18, "Subsubsection",ExpressionUUID->"05ea6763-11e3-45d3-9871-cd87e4ec8db9"],
Cell[53391, 1416, 559, 12, 37, "Text",ExpressionUUID->"2decf24b-a8f2-4d39-81ea-1f76437c6bb5"],
Cell[53953, 1430, 422, 8, 36, "Text",ExpressionUUID->"005db2a4-3bc9-4ba3-b182-643229fb89ff"],
Cell[CellGroupData[{
Cell[54400, 1442, 403, 8, 31, "Input",ExpressionUUID->"a97626cd-8315-4076-a5fc-53f1944cb0c3",
 InitializationCell->True],
Cell[54806, 1452, 343, 6, 31, "Output",ExpressionUUID->"2f582966-b763-42f9-a888-ba71efb6ab7f"]
}, Open  ]],
Cell[55164, 1461, 357, 7, 36, "Text",ExpressionUUID->"ab6f40bf-0893-4375-ab6b-3891569c9a76"],
Cell[CellGroupData[{
Cell[55546, 1472, 224, 4, 31, "Input",ExpressionUUID->"6f034b58-aa08-4659-b470-0143921b0fdc",
 InitializationCell->True],
Cell[55773, 1478, 9954, 199, 60, "Output",ExpressionUUID->"1142718d-c1ba-46f9-b4a4-80443facd356"]
}, Open  ]],
Cell[65742, 1680, 402, 9, 39, "Text",ExpressionUUID->"a6756649-5982-463a-ba46-80713d7c0cea"],
Cell[CellGroupData[{
Cell[66169, 1693, 252, 5, 31, "Input",ExpressionUUID->"5cc6bfc8-92b8-4b08-be7d-7e5bd1b86d1a"],
Cell[66424, 1700, 127, 2, 47, "Output",ExpressionUUID->"85f04f4e-9673-45a7-9803-d95a42ade778"]
}, Open  ]],
Cell[66566, 1705, 360, 10, 21, "Text",ExpressionUUID->"d5f30eb4-6b10-49a0-9acd-89c731328cdb"],
Cell[CellGroupData[{
Cell[66951, 1719, 296, 7, 31, "Input",ExpressionUUID->"ca106ab1-372f-4ae7-b2ff-f20286a3ea45"],
Cell[67250, 1728, 3163, 80, 239, "Output",ExpressionUUID->"98a7d9ca-f695-4b46-86d9-fd751ca4cfc0"]
}, Open  ]],
Cell[70428, 1811, 993, 24, 51, "Text",ExpressionUUID->"73f6e0ce-3d9a-4a25-b7f7-0504956d1855"],
Cell[71424, 1837, 440, 10, 39, "Text",ExpressionUUID->"96068efc-0a4e-46c6-ab53-2bc6c77f2102"],
Cell[71867, 1849, 514, 14, 31, "myCode",ExpressionUUID->"b37b9452-f2a6-474a-8542-778b5852b67d"],
Cell[72384, 1865, 983, 22, 65, "Text",ExpressionUUID->"d61906aa-cba9-4319-9d26-09510765af9f"],
Cell[73370, 1889, 362, 9, 31, "myCode",ExpressionUUID->"d349addf-f18a-469e-9471-32f9d9a6b391"],
Cell[73735, 1900, 337, 7, 36, "Text",ExpressionUUID->"07672e43-94fb-4fc7-9f1c-2fea9a33ec36"],
Cell[CellGroupData[{
Cell[74097, 1911, 447, 11, 31, "Input",ExpressionUUID->"cad9c3e2-4fef-4f00-a42b-d3ce574d03b9"],
Cell[74547, 1924, 127, 2, 47, "Output",ExpressionUUID->"77c0339c-e556-4677-97d5-cc3988e923d0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[74723, 1932, 113, 0, 18, "Subsubsection",ExpressionUUID->"a3099060-a9ad-4c0b-ad19-0ee06887d4d3"],
Cell[74839, 1934, 1075, 24, 65, "Text",ExpressionUUID->"16d98008-c519-41a3-b07d-949f6a7ac2db"],
Cell[75917, 1960, 178, 3, 20, "Text",ExpressionUUID->"7fc0f4de-876a-46c9-a95f-8aa2b3db99b5"],
Cell[76098, 1965, 690, 19, 51, "Input",ExpressionUUID->"c34095b9-6f11-4039-bf80-68a9987529e2",
 InitializationCell->True],
Cell[76791, 1986, 206, 3, 20, "Text",ExpressionUUID->"6fc1674d-66d6-4e9e-aca5-694ea1d19cbe"],
Cell[CellGroupData[{
Cell[77022, 1993, 394, 11, 31, "Input",ExpressionUUID->"161aef13-936c-4c95-94bb-ce40356723f4",
 InitializationCell->True],
Cell[77419, 2006, 128, 2, 47, "Output",ExpressionUUID->"b6e6a4cc-081e-4085-a72a-271af33adfbc"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[77596, 2014, 88, 0, 18, "Subsubsection",ExpressionUUID->"9f2e3a43-e207-42f9-a99e-bd575061f6d5"],
Cell[77687, 2016, 488, 9, 51, "Text",ExpressionUUID->"3631619f-6090-401d-ad38-a68edb917476"],
Cell[78178, 2027, 682, 11, 80, "Text",ExpressionUUID->"ed39d210-a0d3-437f-8d97-62624e514619"],
Cell[78863, 2040, 537, 12, 36, "Text",ExpressionUUID->"db01fc1c-9431-45be-8607-56307ca70fe9"],
Cell[CellGroupData[{
Cell[79425, 2056, 218, 4, 31, "Input",ExpressionUUID->"903e3422-9199-42ba-b21f-9b021102052a"],
Cell[79646, 2062, 107, 1, 31, "Output",ExpressionUUID->"b15750eb-3ee8-4ad7-9f8a-d1f58b8d25ae"]
}, Open  ]],
Cell[79768, 2066, 237, 4, 35, "Text",ExpressionUUID->"e42341d2-d66c-4344-849c-ffc467499fe9"],
Cell[80008, 2072, 335, 9, 31, "Input",ExpressionUUID->"f0e0a8c6-05c5-48cb-8533-f556310f6ef0",
 InitializationCell->True],
Cell[80346, 2083, 746, 16, 52, "Text",ExpressionUUID->"7da7e31d-6d8e-487b-b6d8-435d903a05d4"],
Cell[CellGroupData[{
Cell[81117, 2103, 353, 10, 31, "Input",ExpressionUUID->"5de606da-3156-4459-ad24-989ed346da1b",
 InitializationCell->True],
Cell[81473, 2115, 9603, 276, 236, "Output",ExpressionUUID->"4d06258c-9fb5-4ad4-9eed-8020e0ae6dbe"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[91137, 2398, 145, 2, 32, "Subsection",ExpressionUUID->"d09817ca-8d2a-4cb4-ad01-f42b4e8b262c",
 PageBreakWithin->False,
 CellTags->"Section2b"],
Cell[91285, 2402, 1433, 33, 80, "Text",ExpressionUUID->"1d6d1f6a-8ff5-4bbe-af34-939f4cca3457",
 PageBreakAbove->False,
 PageBreakWithin->False],
Cell[CellGroupData[{
Cell[92743, 2439, 110, 0, 18, "Subsubsection",ExpressionUUID->"1bc62d8d-7769-4ac9-899f-c952c49e5e80"],
Cell[92856, 2441, 2311, 69, 59, "Text",ExpressionUUID->"e452a1bf-9999-46bb-9b58-9a7f06291587"],
Cell[95170, 2512, 1569, 47, 35, "Text",ExpressionUUID->"1e4ba5fa-cfff-4e45-8cf6-93e4e46386f6"],
Cell[96742, 2561, 3378, 98, 122, "Text",ExpressionUUID->"42e39b49-a2bb-4fd3-8bd4-55884d8dc5e5"],
Cell[100123, 2661, 393, 10, 21, "Text",ExpressionUUID->"1ae6e74d-5279-4ad8-97e6-dd08298b88ef"],
Cell[100519, 2673, 1956, 53, 260, "Input",ExpressionUUID->"f6638d7f-3ec1-4822-bae6-938e29c3e1d8",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[102512, 2731, 106, 0, 18, "Subsubsection",ExpressionUUID->"bec5620d-e199-4330-8d20-063170bcd7f4"],
Cell[102621, 2733, 2173, 44, 125, "Text",ExpressionUUID->"876bda10-5b6b-4b73-acbd-cb82a52672a4"],
Cell[CellGroupData[{
Cell[104819, 2781, 202, 5, 31, "Input",ExpressionUUID->"255ce53e-801a-4740-8b38-180693b7f9b5"],
Cell[105024, 2788, 129, 1, 32, "Output",ExpressionUUID->"6df0f563-1718-426e-886b-f350775b082e"]
}, Open  ]],
Cell[105168, 2792, 107, 0, 20, "Text",ExpressionUUID->"30a53f07-50b3-44c6-9175-59186aba5b48"],
Cell[105278, 2794, 1071, 27, 165, "Input",ExpressionUUID->"29b9eda3-d3ff-4a06-a53d-caeca0301de6",
 InitializationCell->True],
Cell[106352, 2823, 676, 15, 55, "Text",ExpressionUUID->"9b4caf8a-dd11-42ae-bc97-780d0b41d65f"],
Cell[107031, 2840, 589, 15, 39, "Text",ExpressionUUID->"2f9bd718-38a0-4979-b814-b38d84d979e6"],
Cell[CellGroupData[{
Cell[107645, 2859, 141, 2, 31, "Input",ExpressionUUID->"03fb2b72-7cb3-4fc5-9c77-f03a63a2f546"],
Cell[107789, 2863, 112, 1, 31, "Output",ExpressionUUID->"0f8a954f-b285-4ffd-a127-bce57b769a42"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107938, 2869, 145, 2, 31, "Input",ExpressionUUID->"467890ff-dc69-42c8-8120-21c350e2e4f8"],
Cell[108086, 2873, 119, 1, 31, "Output",ExpressionUUID->"78222199-ad22-4b09-8501-63423c7b2c63"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[108278, 2882, 132, 1, 55, "Section",ExpressionUUID->"d5a73d40-2fe4-4715-9aa5-eaf593825c33",
 CellTags->"Section3"],
Cell[108413, 2885, 929, 27, 35, "Text",ExpressionUUID->"d9fd75d1-5c55-4cb7-9c45-68d6f224f784"],
Cell[109345, 2914, 631, 21, 51, "Equation",ExpressionUUID->"edefb456-72bd-4eb4-948d-48bf4eaea0f2"],
Cell[109979, 2937, 259, 6, 20, "Text",ExpressionUUID->"db12b135-dc51-492f-a9ef-161862b307e0"],
Cell[110241, 2945, 1334, 34, 60, "Text",ExpressionUUID->"c6a99d6e-cc4e-4b54-a7f2-0db00a403ded"],
Cell[111578, 2981, 439, 14, 51, "Equation",ExpressionUUID->"0feb98ab-0094-441a-b3d1-268bf641f501"],
Cell[112020, 2997, 205, 3, 20, "Text",ExpressionUUID->"411a4c09-42b0-42a2-a56a-ece182f85169"],
Cell[112228, 3002, 648, 17, 50, "Text",ExpressionUUID->"67a960b9-d7d7-4ae2-a4f3-de87eb7b6537"],
Cell[112879, 3021, 1518, 22, 155, "Text",ExpressionUUID->"d468efaa-9d87-461b-bc8d-948ae365fde7"],
Cell[CellGroupData[{
Cell[114422, 3047, 94, 0, 18, "Subsubsection",ExpressionUUID->"c5472550-08d1-4f48-8c59-96b775626171"],
Cell[114519, 3049, 970, 20, 65, "Text",ExpressionUUID->"1d6e6f74-5c8d-4a30-aeb0-86f65ab2fdb3"],
Cell[115492, 3071, 443, 11, 36, "Text",ExpressionUUID->"0e573dcb-e445-48a4-a360-b90a79f09fc6"],
Cell[115938, 3084, 319, 7, 31, "Input",ExpressionUUID->"65f32c93-8293-48a9-b9a8-a1ccea8ab905"],
Cell[116260, 3093, 319, 7, 31, "Input",ExpressionUUID->"0e4f53ed-e42f-4b79-bb75-58c211d2ba8f"],
Cell[116582, 3102, 309, 7, 31, "Input",ExpressionUUID->"93d5c465-3d19-4f30-8215-ff12637f7da9"],
Cell[116894, 3111, 1363, 31, 98, "Text",ExpressionUUID->"585fa119-9fb7-473b-b238-734129158916"],
Cell[118260, 3144, 597, 11, 51, "Text",ExpressionUUID->"1c6741d1-5384-4e4a-acd0-d601429a2297"],
Cell[118860, 3157, 235, 5, 31, "Input",ExpressionUUID->"5235e132-bb6e-4e47-9ab7-268eef47542d"],
Cell[119098, 3164, 235, 5, 31, "Input",ExpressionUUID->"0e03f4aa-b40c-4d05-a6c1-25f3c18704e4"],
Cell[119336, 3171, 231, 5, 31, "Input",ExpressionUUID->"8bb66243-ffcc-4661-8891-41f435759367"],
Cell[119570, 3178, 906, 22, 59, "Text",ExpressionUUID->"185dba58-ce1c-4499-ad63-20e5456487cc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[120513, 3205, 108, 0, 18, "Subsubsection",ExpressionUUID->"a04ac4c5-7e4c-4c6e-ab2f-b682f02d2371"],
Cell[120624, 3207, 723, 18, 58, "Text",ExpressionUUID->"f4371352-51c3-4d72-b36d-719e57453fe2"],
Cell[121350, 3227, 1984, 56, 73, "Text",ExpressionUUID->"4717dd37-49b7-4663-85b3-2effd1455029"],
Cell[123337, 3285, 274, 7, 21, "Text",ExpressionUUID->"18f00b3e-c250-4a1c-b060-07752c0d8521"],
Cell[CellGroupData[{
Cell[123636, 3296, 143, 2, 31, "Input",ExpressionUUID->"f6ca3b33-92d5-4c1d-9108-7a1b18ae61cb"],
Cell[123782, 3300, 109, 1, 31, "Output",ExpressionUUID->"5e816e8f-5712-4c60-9fab-5bfad85f166d"]
}, Open  ]],
Cell[123906, 3304, 380, 7, 35, "Text",ExpressionUUID->"bd83e729-0687-4c74-a765-2d114eede75b"],
Cell[124289, 3313, 732, 17, 51, "Text",ExpressionUUID->"de77b75c-f424-41d2-aecb-34a900e74b3b"],
Cell[CellGroupData[{
Cell[125046, 3334, 189, 3, 31, "Input",ExpressionUUID->"1cf396a8-5a4e-4305-99b5-8dcd0bc72273"],
Cell[125238, 3339, 111, 1, 31, "Output",ExpressionUUID->"17652cd0-43c2-4728-ad02-40f82c46be00"]
}, Open  ]],
Cell[125364, 3343, 193, 3, 20, "Text",ExpressionUUID->"2781a887-5d62-48b8-99fc-bc035590ffd8"],
Cell[CellGroupData[{
Cell[125582, 3350, 161, 3, 31, "Input",ExpressionUUID->"cb0e9c21-6399-47e0-898a-434d38a36497"],
Cell[125746, 3355, 792, 10, 317, "Output",ExpressionUUID->"6a17128e-c149-44a4-b374-f8f05d31b96e"]
}, Open  ]],
Cell[126553, 3368, 447, 8, 36, "Text",ExpressionUUID->"ef04db33-340c-4d1f-a7fb-27f6fe61b52c"],
Cell[CellGroupData[{
Cell[127025, 3380, 234, 5, 31, "Input",ExpressionUUID->"566b00a8-459c-4d5f-ac64-0cf4ff85019f"],
Cell[127262, 3387, 111, 1, 31, "Output",ExpressionUUID->"6988ae90-5346-4030-b84c-20080b35b874"]
}, Open  ]],
Cell[127388, 3391, 426, 6, 35, "Text",ExpressionUUID->"b4b38070-5ccf-419a-afcb-00b1b59d4c45"],
Cell[127817, 3399, 298, 6, 32, "myCode",ExpressionUUID->"8f80436c-7aa4-462c-9bc3-61a9b8b86d93"],
Cell[128118, 3407, 2632, 58, 170, "Text",ExpressionUUID->"6ec4ab23-40b2-4b83-a630-f9d177f27466"],
Cell[130753, 3467, 346, 7, 21, "Text",ExpressionUUID->"3abc78e8-05b4-41e4-aa82-7ba1a5714f95"],
Cell[CellGroupData[{
Cell[131124, 3478, 432, 10, 51, "Input",ExpressionUUID->"3a8986a5-162d-4343-80f4-f39cf8116c5d"],
Cell[131559, 3490, 110, 1, 31, "Output",ExpressionUUID->"a65b9b70-6dd4-4b1d-81b3-74043d1b1b88"]
}, Open  ]],
Cell[131684, 3494, 549, 10, 51, "Text",ExpressionUUID->"b590f70b-110c-40b4-a1ed-8a69189d1ac7"],
Cell[CellGroupData[{
Cell[132258, 3508, 440, 11, 52, "Input",ExpressionUUID->"2cf597f9-50ee-4f42-9a7a-4bf908698c76"],
Cell[132701, 3521, 110, 1, 31, "Output",ExpressionUUID->"a16cec33-a28a-4681-b270-c16192df1450"]
}, Open  ]],
Cell[132826, 3525, 352, 10, 21, "Text",ExpressionUUID->"cf5b2262-05e8-4adf-b705-bdc6a3710ef2"],
Cell[CellGroupData[{
Cell[133203, 3539, 492, 12, 52, "Input",ExpressionUUID->"f62aed7d-7b5d-48ea-ab81-640007f90cf0"],
Cell[133698, 3553, 111, 1, 31, "Output",ExpressionUUID->"6874b7f5-ab49-437e-9170-d9fb87297ff9"]
}, Open  ]],
Cell[133824, 3557, 448, 11, 37, "Text",ExpressionUUID->"af2a2b8c-f84d-4f5a-a9c7-7f438ee66288"],
Cell[134275, 3570, 582, 14, 71, "Input",ExpressionUUID->"effc39b2-b4ab-4ee6-9840-4e33f3cbb833",
 InitializationCell->True],
Cell[134860, 3586, 273, 4, 20, "Text",ExpressionUUID->"a4ce174d-0183-496f-825c-2807c0ec0053"],
Cell[CellGroupData[{
Cell[135158, 3594, 228, 5, 31, "Input",ExpressionUUID->"c6612d4a-d85b-4305-ba7f-a395bc72752d"],
Cell[135389, 3601, 111, 1, 31, "Output",ExpressionUUID->"cfcd9426-6941-4eeb-90e9-ed5d53c2712c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[135537, 3607, 231, 5, 31, "Input",ExpressionUUID->"a47f1903-7dc8-4d87-9d5c-c64ca3d5b85e"],
Cell[135771, 3614, 110, 1, 31, "Output",ExpressionUUID->"f4803c54-c76c-423e-bc17-4927f1f31a1d"]
}, Open  ]],
Cell[135896, 3618, 656, 15, 54, "Text",ExpressionUUID->"dbd37e94-1258-4d6c-bf4c-dda5b2f9a016"],
Cell[136555, 3635, 841, 24, 108, "Input",ExpressionUUID->"13b7d321-c964-41ae-817b-21b5c7d4bea3",
 InitializationCell->True],
Cell[137399, 3661, 214, 3, 20, "Text",ExpressionUUID->"7d390645-01b6-4562-b358-c719d92ac426"],
Cell[CellGroupData[{
Cell[137638, 3668, 187, 3, 31, "Input",ExpressionUUID->"4a455069-5e8a-46c8-87e2-16e3e5a29786"],
Cell[137828, 3673, 107, 1, 31, "Output",ExpressionUUID->"139dcee3-2704-4739-99da-6513a217810b"]
}, Open  ]],
Cell[137950, 3677, 251, 4, 20, "Text",ExpressionUUID->"2480de3c-77f2-42e5-ae35-81f74a8a1d48"],
Cell[CellGroupData[{
Cell[138226, 3685, 249, 5, 31, "Input",ExpressionUUID->"a4e8df69-0202-4662-be99-4f8d43abc1f5"],
Cell[138478, 3692, 129, 2, 47, "Output",ExpressionUUID->"178882e2-f4fe-4148-974b-a9a5524b26ae"]
}, Open  ]],
Cell[138622, 3697, 253, 4, 20, "Text",ExpressionUUID->"a3ef0c8e-90de-4bc0-a839-24a29039d32c"],
Cell[CellGroupData[{
Cell[138900, 3705, 249, 5, 31, "Input",ExpressionUUID->"7512bdea-ba90-4dc8-97e1-b34415bcf542"],
Cell[139152, 3712, 130, 2, 47, "Output",ExpressionUUID->"0502e753-623a-49fe-9824-7861c3a9234a"]
}, Open  ]],
Cell[139297, 3717, 284, 4, 35, "Text",ExpressionUUID->"b93180a0-b3fc-4330-84f1-5d14e764b511"],
Cell[CellGroupData[{
Cell[139606, 3725, 309, 9, 31, "Input",ExpressionUUID->"c48b7b11-cd6c-48ed-9963-4c5023a78daf"],
Cell[139918, 3736, 125, 1, 31, "Output",ExpressionUUID->"4a88cc22-7e8f-4798-b72e-2f9d2e40a0e8"]
}, Open  ]],
Cell[140058, 3740, 264, 4, 35, "Text",ExpressionUUID->"d9fa02fa-fa01-4099-b0fd-5f4c9d8a1f64"],
Cell[140325, 3746, 1193, 30, 165, "Input",ExpressionUUID->"306f443c-8902-4cdd-a3b2-3e6c6eebd389",
 InitializationCell->True],
Cell[141521, 3778, 230, 3, 20, "Text",ExpressionUUID->"608a4c51-9c07-425a-aacd-5ddd3e048aa1"],
Cell[CellGroupData[{
Cell[141776, 3785, 166, 2, 31, "Input",ExpressionUUID->"7c1feb18-1ce4-4cc0-bbf3-08b4e5ee5d56"],
Cell[141945, 3789, 125, 1, 31, "Output",ExpressionUUID->"b728883f-8f84-4d21-aa3c-78aa507de2d7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[142119, 3796, 100, 0, 18, "Subsubsection",ExpressionUUID->"aa5913bb-bde1-463e-b21f-74e27ed8b04c"],
Cell[142222, 3798, 1107, 29, 50, "Text",ExpressionUUID->"ae79e938-2333-41e0-ae80-d84ed99cced9"],
Cell[143332, 3829, 899, 28, 84, "Equation",ExpressionUUID->"3bbd82d6-5603-4614-8618-5b53ead3ebe7"],
Cell[144234, 3859, 739, 22, 34, "Text",ExpressionUUID->"749673b5-b9f6-4970-897f-7681ea1bf793"],
Cell[CellGroupData[{
Cell[144998, 3885, 321, 9, 31, "Input",ExpressionUUID->"f4666f6d-992d-44ed-90db-2328e23f8558"],
Cell[145322, 3896, 112, 1, 31, "Output",ExpressionUUID->"585c554a-1c7e-45e0-a820-42d2a54f319e"]
}, Open  ]],
Cell[145449, 3900, 330, 5, 20, "Text",ExpressionUUID->"21d4b3bd-be05-43c4-870d-e89b62957ac5"],
Cell[CellGroupData[{
Cell[145804, 3909, 528, 15, 51, "Input",ExpressionUUID->"3e67a7c3-59a2-4da1-99e7-54d02a0050e7"],
Cell[146335, 3926, 135, 2, 47, "Output",ExpressionUUID->"0103806b-f208-4946-ad71-6a03787cdf1e"]
}, Open  ]],
Cell[146485, 3931, 769, 16, 71, "Text",ExpressionUUID->"5c6d5b0e-08d8-4f89-882b-b4df9c91ee30"],
Cell[147257, 3949, 1656, 43, 203, "Input",ExpressionUUID->"c2dfe04d-0d48-4411-8095-bbf126853c2f",
 InitializationCell->True],
Cell[148916, 3994, 350, 5, 20, "Text",ExpressionUUID->"dfd2391f-0c2d-4f5a-b57f-0abfeec4af94"],
Cell[CellGroupData[{
Cell[149291, 4003, 255, 5, 31, "Input",ExpressionUUID->"035490c7-583a-4a5d-bee0-1fa0dc8224b8"],
Cell[149549, 4010, 125, 1, 31, "Output",ExpressionUUID->"de01f669-23fe-4f94-b1a9-1a3dd51d8d4e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[149723, 4017, 109, 0, 18, "Subsubsection",ExpressionUUID->"80cad68a-8151-4dc1-8c46-392ba212b76c"],
Cell[149835, 4019, 552, 12, 36, "Text",ExpressionUUID->"aa35ca56-d9bc-4e95-862f-1a073437cefa"],
Cell[CellGroupData[{
Cell[150412, 4035, 164, 3, 31, "Input",ExpressionUUID->"d94ec935-9b43-463f-a52b-76db51e89dd5"],
Cell[150579, 4040, 773, 9, 298, "Output",ExpressionUUID->"35b6dd8e-d674-4246-9d24-467c536c34bf"]
}, Open  ]],
Cell[151367, 4052, 1019, 20, 89, "Text",ExpressionUUID->"1f44dfc8-a363-4d7c-afa8-b1f09d141b62"],
Cell[CellGroupData[{
Cell[152411, 4076, 377, 10, 32, "Input",ExpressionUUID->"6242a440-5229-4b84-beda-4c34e28248a0"],
Cell[152791, 4088, 2756, 42, 184, "Output",ExpressionUUID->"0211091f-06d2-4e62-a412-59db26bcf7dc"]
}, Open  ]],
Cell[155562, 4133, 250, 6, 21, "Text",ExpressionUUID->"a5387dfe-846f-4fdc-94df-1e406786b845"],
Cell[CellGroupData[{
Cell[155837, 4143, 201, 3, 31, "Input",ExpressionUUID->"da761409-dd43-4307-a19b-9f99f0e10b64"],
Cell[156041, 4148, 2174, 32, 165, "Output",ExpressionUUID->"59a30514-8cbc-4f82-bdda-65a76886fc3d"]
}, Open  ]],
Cell[158230, 4183, 113, 0, 20, "Text",ExpressionUUID->"68a9dfbd-7407-4f7e-98a4-c0eb55d9c3be"],
Cell[CellGroupData[{
Cell[158368, 4187, 220, 4, 31, "Input",ExpressionUUID->"f9c52364-0b92-4d50-8a30-8ba9b93a54d4"],
Cell[158591, 4193, 235, 4, 31, "Output",ExpressionUUID->"69af6ead-5eb7-4a78-9eea-81f4b02f0ef3"]
}, Open  ]],
Cell[158841, 4200, 197, 3, 20, "Text",ExpressionUUID->"28d53366-b04e-41be-a340-ccc0b4d30c0d"],
Cell[CellGroupData[{
Cell[159063, 4207, 167, 2, 31, "Input",ExpressionUUID->"fb4906f8-52fc-4b63-9ea9-326814fdb184"],
Cell[159233, 4211, 110, 1, 31, "Output",ExpressionUUID->"dcebe7bd-1c2f-423b-bb60-df48a02975c8"]
}, Open  ]],
Cell[159358, 4215, 98, 0, 20, "Text",ExpressionUUID->"28ca644b-9329-406b-8784-3c7e80b629e1"],
Cell[159459, 4217, 896, 22, 128, "Input",ExpressionUUID->"770ee3b4-864f-499d-88eb-304aee5e5818",
 InitializationCell->True],
Cell[160358, 4241, 163, 3, 20, "Text",ExpressionUUID->"535ec4ea-14ae-4726-b765-a1caf8ab1ed3"],
Cell[CellGroupData[{
Cell[160546, 4248, 251, 6, 31, "Input",ExpressionUUID->"f9d82ce2-a77f-4d7a-9c48-43f2b50a9aec"],
Cell[160800, 4256, 125, 1, 31, "Output",ExpressionUUID->"26b24a6d-4147-4159-a4e1-3178e7c37185"]
}, Open  ]],
Cell[160940, 4260, 954, 13, 110, "Text",ExpressionUUID->"3ae9abc7-293f-4f48-90be-d573c463101c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[161943, 4279, 128, 1, 55, "Section",ExpressionUUID->"f52d170b-ba36-40b3-bb81-dd6bb16ed2ad",
 CellTags->"Section4"],
Cell[162074, 4282, 390, 6, 50, "Text",ExpressionUUID->"205074a1-91bf-465c-a7c9-1d26b093eb0d"],
Cell[162467, 4290, 401, 7, 36, "Text",ExpressionUUID->"08d236b8-0825-4b39-935e-ab5dd1bb9daa"],
Cell[162871, 4299, 498, 13, 36, "Text",ExpressionUUID->"d1897e9c-9740-4c09-adff-5a64686f8414"],
Cell[CellGroupData[{
Cell[163394, 4316, 310, 7, 31, "Input",ExpressionUUID->"29ae704d-945c-44ba-903d-2de7387a18fb"],
Cell[163707, 4325, 132, 2, 47, "Output",ExpressionUUID->"e85a99f7-00aa-4608-870c-e318ff51d001"]
}, Open  ]],
Cell[163854, 4330, 789, 16, 65, "Text",ExpressionUUID->"cb1b6059-2c80-4030-872f-92910b9e48fb"],
Cell[CellGroupData[{
Cell[164668, 4350, 310, 7, 31, "Input",ExpressionUUID->"57849c4e-afe5-479b-bcee-b6a4d27376b3"],
Cell[164981, 4359, 1842, 53, 51, "Output",ExpressionUUID->"e6367018-5b7f-4f83-98a8-053a0b42124a"]
}, Open  ]],
Cell[166838, 4415, 120, 0, 20, "Text",ExpressionUUID->"a31beb78-1761-4087-9d68-230740e44d4b"],
Cell[166961, 4417, 669, 18, 37, "Text",ExpressionUUID->"158f84d7-a8be-42a6-9096-0f01c436d163"],
Cell[CellGroupData[{
Cell[167655, 4439, 208, 4, 31, "Input",ExpressionUUID->"64a674ce-f4da-4672-b001-9235c286ffa5"],
Cell[167866, 4445, 107, 1, 31, "Output",ExpressionUUID->"6332f33d-fa19-45c3-9459-f4e6f894e61e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[168010, 4451, 212, 4, 31, "Input",ExpressionUUID->"6220af21-3acd-4e48-ab7d-d42ab96cb7f6"],
Cell[168225, 4457, 108, 1, 31, "Output",ExpressionUUID->"745c3367-23d9-44b7-89e6-e99b0fff0896"]
}, Open  ]],
Cell[168348, 4461, 117, 0, 20, "Text",ExpressionUUID->"1b65c51e-ef05-4e47-8912-aba998266591"],
Cell[CellGroupData[{
Cell[168490, 4465, 197, 3, 31, "Input",ExpressionUUID->"2763e265-f80b-4853-aa75-532dd61b4ae3"],
Cell[168690, 4470, 163, 4, 51, "Output",ExpressionUUID->"14643430-9e41-4024-8a50-e7bd6c85106c"]
}, Open  ]],
Cell[168868, 4477, 376, 9, 20, "Text",ExpressionUUID->"1ddd2364-db0c-4333-9116-463f1323aacf"],
Cell[CellGroupData[{
Cell[169269, 4490, 217, 5, 31, "Input",ExpressionUUID->"6b2ee033-03ea-45cb-93e1-b32dcb2e08f5"],
Cell[169489, 4497, 128, 2, 47, "Output",ExpressionUUID->"18b5f90f-53ae-45df-8591-ad2334e9a1b6"]
}, Open  ]],
Cell[169632, 4502, 764, 16, 52, "Text",ExpressionUUID->"dbae4ab0-a6de-4e99-9636-c1ad2f6978da"],
Cell[170399, 4520, 327, 8, 20, "Text",ExpressionUUID->"bc638171-1c4d-40a2-8218-ecd00f074b2c"],
Cell[CellGroupData[{
Cell[170751, 4532, 279, 6, 31, "Input",ExpressionUUID->"2041d601-4bf3-47aa-adc5-7f5919962133"],
Cell[171033, 4540, 107, 1, 31, "Output",ExpressionUUID->"b8115538-9052-4346-a5ce-5804d28d3f12"]
}, Open  ]],
Cell[171155, 4544, 449, 12, 21, "Text",ExpressionUUID->"f119218d-bca8-45ef-a885-195e83679e7b"],
Cell[CellGroupData[{
Cell[171629, 4560, 303, 7, 31, "Input",ExpressionUUID->"bd1ee4c0-f24c-4117-a534-b63c8769a5d8"],
Cell[171935, 4569, 108, 1, 31, "Output",ExpressionUUID->"a5e1b1be-d189-468f-beb4-798adde05c2e"]
}, Open  ]],
Cell[172058, 4573, 553, 15, 26, "Text",ExpressionUUID->"7e5cf6af-87e2-4e3c-b057-f366485a4a27"],
Cell[CellGroupData[{
Cell[172636, 4592, 336, 8, 31, "Input",ExpressionUUID->"1769089f-cae6-494e-b104-be60c82d351e",
 InitializationCell->True],
Cell[172975, 4602, 107, 1, 31, "Output",ExpressionUUID->"2e0542f4-9efa-422f-906d-9100a27741e3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[173119, 4608, 357, 9, 31, "Input",ExpressionUUID->"5366fbf9-c2e4-47d0-a2d8-c64d984852cf"],
Cell[173479, 4619, 108, 1, 31, "Output",ExpressionUUID->"1b8fed65-f69a-4992-a5ac-abba2e728633"]
}, Open  ]],
Cell[173602, 4623, 124, 0, 20, "Text",ExpressionUUID->"798b5848-d2c1-48c5-ab60-1c455d21b51d"],
Cell[173729, 4625, 259, 6, 31, "Input",ExpressionUUID->"003e248f-7f5f-479b-a08a-bd81e6eaef2b",
 InitializationCell->True],
Cell[173991, 4633, 260, 6, 31, "Input",ExpressionUUID->"6cac2c4f-fd9b-4a48-b5ba-b6c071bc0163",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[174276, 4643, 431, 12, 31, "Input",ExpressionUUID->"fab1ed2d-7b78-49d0-ae56-95e1da77029c",
 InitializationCell->True],
Cell[174710, 4657, 110, 1, 31, "Output",ExpressionUUID->"cac7ed08-bb5f-4db6-9ffc-34e8faeadd4e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[174857, 4663, 487, 15, 31, "Input",ExpressionUUID->"1610773c-8eb2-411c-97a9-d29cc31ba5c0"],
Cell[175347, 4680, 124, 1, 31, "Output",ExpressionUUID->"0a329fec-ed5c-45b4-893a-0fc1b3cd08c0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[175520, 4687, 170, 3, 55, "Section",ExpressionUUID->"86ecee26-5bc4-4e5b-9971-46ae327f5ba7",
 CellTags->"Solutions"],
Cell[CellGroupData[{
Cell[175715, 4694, 126, 2, 32, "Subsection",ExpressionUUID->"a8567d5c-6b46-4055-9007-c0593f68e221",
 CellTags->"SolutionsCP7"],
Cell[175844, 4698, 557, 12, 55, "Problem",ExpressionUUID->"28f8616f-22e6-4225-a060-859ed3f66bc7"],
Cell[176404, 4712, 548, 10, 54, "Text",ExpressionUUID->"a24f7337-634f-476b-b2b7-3ae9e07bc9ec"],
Cell[176955, 4724, 839, 18, 73, "Text",ExpressionUUID->"624abd92-62fd-4563-99a4-4b82d142ef23"],
Cell[CellGroupData[{
Cell[177819, 4746, 169, 3, 31, "Input",ExpressionUUID->"af1d5bc8-0e2e-483d-b2a7-8e97a218ee07"],
Cell[177991, 4751, 239, 5, 31, "Output",ExpressionUUID->"c6ef7531-3eac-46c2-ba04-dfc86329dfdc"]
}, Open  ]],
Cell[178245, 4759, 1026, 27, 55, "Text",ExpressionUUID->"961a60c7-8d4b-4707-876f-6c73366d63d2"],
Cell[CellGroupData[{
Cell[179296, 4790, 193, 4, 31, "Input",ExpressionUUID->"6e07bcaa-c3bb-4cd9-9316-4b12121578a2"],
Cell[179492, 4796, 108, 1, 31, "Output",ExpressionUUID->"11c01fdc-0987-4363-8a2e-77c8a9259524"]
}, Open  ]],
Cell[179615, 4800, 967, 20, 70, "Text",ExpressionUUID->"977f7002-7516-4c14-b4ad-8bcf084e441e"],
Cell[CellGroupData[{
Cell[180607, 4824, 227, 5, 31, "Input",ExpressionUUID->"4a07862b-0d37-4125-8ae1-e87fea56f8ff"],
Cell[180837, 4831, 107, 1, 31, "Output",ExpressionUUID->"c36e1e4b-47e9-4e4c-bae5-94382cfc4794"]
}, Open  ]],
Cell[180959, 4835, 211, 3, 20, "Text",ExpressionUUID->"7eeaef66-dfbe-4fc1-9232-88e34429b140"],
Cell[181173, 4840, 130, 0, 20, "Text",ExpressionUUID->"c265bba0-12d5-41fc-ab4c-c467b6c56e1a"],
Cell[181306, 4842, 1254, 31, 203, "Input",ExpressionUUID->"545755c0-557e-41b7-aaba-6a5894489b9c",
 InitializationCell->True],
Cell[182563, 4875, 413, 11, 20, "Text",ExpressionUUID->"bd596c89-8b83-4c8e-9236-8d36df89733d"],
Cell[182979, 4888, 313, 8, 31, "Input",ExpressionUUID->"30b92402-be25-438d-93c3-4a1223501816",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[183317, 4900, 178, 3, 31, "Input",ExpressionUUID->"2504fc12-8d8f-4d97-a777-3ee1e1c7fcd5",
 InitializationCell->True],
Cell[183498, 4905, 3684, 69, 233, "Output",ExpressionUUID->"0a617a5b-ab21-4964-b62d-bf8a6514f9d7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[187231, 4980, 126, 2, 32, "Subsection",ExpressionUUID->"2195b5da-d72d-4a15-b0da-543bb2e909ba",
 CellTags->"SolutionsCP9"],
Cell[187360, 4984, 532, 12, 55, "Problem",ExpressionUUID->"988e47a6-688c-4b0c-b892-ce66e6ad8960"],
Cell[187895, 4998, 1333, 37, 70, "Text",ExpressionUUID->"d86ce82a-1eb2-494c-bdbb-d29eba810f83"],
Cell[189231, 5037, 346, 9, 31, "Input",ExpressionUUID->"79f0a1cd-0865-43b4-b44a-f7cac7fe68e9",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[189602, 5050, 140, 2, 31, "Input",ExpressionUUID->"7be43ec8-d6fc-4d8f-864d-7fe20a764cbb"],
Cell[189745, 5054, 128, 1, 32, "Output",ExpressionUUID->"bf118441-8010-4bdc-8e21-530c2a85cef5"]
}, Open  ]],
Cell[189888, 5058, 345, 5, 35, "Text",ExpressionUUID->"5eb9c74a-8e4e-4b99-86a0-387fcfc2f968"],
Cell[190236, 5065, 380, 10, 31, "Input",ExpressionUUID->"18f13aaf-2a78-41df-bd73-266e81776a33",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[190641, 5079, 164, 3, 31, "Input",ExpressionUUID->"cd6f86d6-1ede-4372-ba6e-a2b19353dd82"],
Cell[190808, 5084, 128, 1, 32, "Output",ExpressionUUID->"f5917dbb-9c72-44b2-a3db-74539b357395"]
}, Open  ]],
Cell[CellGroupData[{
Cell[190973, 5090, 168, 4, 31, "Input",ExpressionUUID->"e65ac1f7-22ba-4f74-8942-096ef02b5840"],
Cell[191144, 5096, 132, 2, 31, "Output",ExpressionUUID->"f62304df-e9c3-46e6-adc0-68f0105c2cbf"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[191325, 5104, 138, 2, 32, "Subsection",ExpressionUUID->"f3da02f8-54c4-4d9c-b37a-a5d75c1eff79",
 CellTags->"SolutionsCE3"],
Cell[191466, 5108, 340, 5, 55, "Problem",ExpressionUUID->"54c9152b-3c43-4bd3-9a1b-de91a8e96956"],
Cell[191809, 5115, 183, 4, 20, "Text",ExpressionUUID->"f6a2a411-f1dd-4ab7-88d0-eadbc2555d4b"],
Cell[CellGroupData[{
Cell[192017, 5123, 139, 1, 16, "Item1Numbered",ExpressionUUID->"8eff5646-70c9-470d-813e-0f81d0fe586f"],
Cell[192159, 5126, 225, 3, 29, "Item1Numbered",ExpressionUUID->"28e14352-a366-45ff-8aac-c2509ef3fc3b"],
Cell[192387, 5131, 126, 0, 16, "Item1Numbered",ExpressionUUID->"505ac0a8-af54-4f84-8ae6-021771622396"]
}, Open  ]],
Cell[192528, 5134, 121, 0, 20, "Text",ExpressionUUID->"ecba048d-4167-462a-9302-ccb5ee33fdc0"],
Cell[192652, 5136, 449, 8, 36, "Text",ExpressionUUID->"fbb92dba-afa3-4954-b860-73725cc913ab"],
Cell[CellGroupData[{
Cell[193126, 5148, 175, 4, 31, "Input",ExpressionUUID->"0ab4202f-d346-483d-a9b5-00b52c99bb0a"],
Cell[193304, 5154, 252, 6, 31, "Output",ExpressionUUID->"d5b9648e-daa1-4036-b23b-f2611f88ad25"]
}, Open  ]],
Cell[193571, 5163, 279, 5, 39, "Text",ExpressionUUID->"8cc7a6eb-3af7-4203-881f-16e1f0a51b9f"],
Cell[CellGroupData[{
Cell[193875, 5172, 224, 6, 31, "Input",ExpressionUUID->"a3cf36c3-d0a2-4dfb-bdd1-b2082a8f38c8"],
Cell[194102, 5180, 746, 24, 51, "Output",ExpressionUUID->"35524540-2205-47e6-9fa1-f26cf2df42c9"]
}, Open  ]],
Cell[194863, 5207, 1305, 32, 71, "Text",ExpressionUUID->"c27c4aaf-4cf4-43d6-b9a8-4db28acc8f37"],
Cell[CellGroupData[{
Cell[196193, 5243, 327, 9, 31, "Input",ExpressionUUID->"fb053d9f-4106-4d20-82c9-e633e218efaa"],
Cell[196523, 5254, 274, 6, 31, "Output",ExpressionUUID->"3c2b8c8f-4d6d-4e32-8da0-466169346ccf"]
}, Open  ]],
Cell[196812, 5263, 158, 4, 24, "Text",ExpressionUUID->"b1e442db-5f2c-4fdd-9ac7-7b5b8ddedeae"],
Cell[CellGroupData[{
Cell[196995, 5271, 259, 7, 31, "Input",ExpressionUUID->"4163b5e1-d38f-4909-9798-2a8eb2d2a749"],
Cell[197257, 5280, 277, 6, 31, "Output",ExpressionUUID->"ba53214c-6c1d-410e-8bfa-46075fbf6035"]
}, Open  ]],
Cell[197549, 5289, 578, 15, 37, "Text",ExpressionUUID->"01223f50-ca34-48fc-8479-73132df08b82"],
Cell[CellGroupData[{
Cell[198152, 5308, 329, 10, 31, "Input",ExpressionUUID->"dbf2a7f0-48d1-4a3d-a1ca-fd492868a50e"],
Cell[198484, 5320, 111, 2, 31, "Output",ExpressionUUID->"ecd5546d-ca05-4cc8-999e-bceafcbfe588"]
}, Open  ]],
Cell[198610, 5325, 216, 3, 20, "Text",ExpressionUUID->"6667d66b-b6ae-45d6-80ce-be75dfe3a1fb"],
Cell[CellGroupData[{
Cell[198851, 5332, 390, 12, 31, "Input",ExpressionUUID->"db5613da-f3e5-40b4-bca9-18fa473bdb16"],
Cell[199244, 5346, 115, 2, 31, "Output",ExpressionUUID->"a6bd0502-de2e-494b-ad07-11d47754fea6"]
}, Open  ]],
Cell[199374, 5351, 388, 8, 35, "Text",ExpressionUUID->"749c4830-7d4e-4ee4-a737-97d6907a4631"]
}, Open  ]],
Cell[CellGroupData[{
Cell[199799, 5364, 138, 2, 32, "Subsection",ExpressionUUID->"905d6b33-c766-4fb7-a79d-696279f23f74",
 CellTags->"SolutionsCE4"],
Cell[199940, 5368, 314, 4, 55, "Problem",ExpressionUUID->"e21aca99-19e3-4e92-a17c-04b2fd031a3c"],
Cell[200257, 5374, 643, 14, 50, "Text",ExpressionUUID->"7af4648c-ff93-4d88-9d44-5100272a5397"],
Cell[200903, 5390, 543, 16, 46, "Equation",ExpressionUUID->"c3f377b5-cabd-4b97-8b56-d870aef792af"],
Cell[201449, 5408, 487, 13, 20, "Text",ExpressionUUID->"4bc17e19-c687-4c30-b44b-ccfaf2d859f2"],
Cell[201939, 5423, 1090, 30, 146, "Input",ExpressionUUID->"b61700a1-ab7a-4f77-880f-6198cea5c822",
 InitializationCell->True],
Cell[203032, 5455, 257, 4, 35, "Text",ExpressionUUID->"2022f4e3-77dc-4540-9228-491e8b0905a1"],
Cell[CellGroupData[{
Cell[203314, 5463, 147, 3, 31, "Input",ExpressionUUID->"c1f0299b-fb13-41b2-9522-482ab28ce33f"],
Cell[203464, 5468, 112, 2, 31, "Output",ExpressionUUID->"a94a4154-7afa-4278-843e-f2e4fa11804a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[203613, 5475, 147, 3, 31, "Input",ExpressionUUID->"7abe4fd4-e1f0-42cd-928b-d57b271014e4"],
Cell[203763, 5480, 112, 2, 31, "Output",ExpressionUUID->"9fd30c1a-9da9-4d1f-af70-5b1651715df4"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[203936, 5489, 107, 1, 55, "Section",ExpressionUUID->"b4d128bb-1331-4ddb-bec0-298ce23fadd4",
 CellTags->"Exercises"],
Cell[CellGroupData[{
Cell[204068, 5494, 522, 14, 33, "Item1Exercise",ExpressionUUID->"f84c5b40-056b-4011-8d2b-920d24fe124c"],
Cell[CellGroupData[{
Cell[204615, 5512, 274, 8, 18, "Item2Exercise",ExpressionUUID->"a092d20d-5d32-4fe2-9a31-de5813af962d"],
Cell[204892, 5522, 272, 8, 18, "Item2Exercise",ExpressionUUID->"db27040e-7b55-4c50-8ae9-21aa131d0680"],
Cell[205167, 5532, 274, 8, 18, "Item2Exercise",ExpressionUUID->"5e70503e-f2ad-427a-8d17-6f9988eb277a"],
Cell[205444, 5542, 279, 8, 18, "Item2Exercise",ExpressionUUID->"a0fa1b1f-f806-43ef-8929-436e9c29768d"],
Cell[205726, 5552, 274, 8, 18, "Item2Exercise",ExpressionUUID->"7a27cf36-469b-4f55-acb1-8a94a4af0bc8"]
}, Open  ]],
Cell[206015, 5563, 391, 8, 33, "Item1Exercise",ExpressionUUID->"13d56eb4-92e3-4539-bbf2-3be31a338aea"],
Cell[206409, 5573, 704, 15, 46, "Item1Exercise",ExpressionUUID->"bcc398f2-668f-4110-805c-e32f781923d1"],
Cell[207116, 5590, 500, 7, 59, "Item1Exercise",ExpressionUUID->"0f854509-b7be-4060-95a6-c35bf88b3d41"],
Cell[207619, 5599, 694, 16, 71, "Item1Exercise",ExpressionUUID->"c7ed132f-cab7-47f8-a60b-c6ce0fcf0293"],
Cell[208316, 5617, 390, 7, 50, "Item1Exercise",ExpressionUUID->"7125b64f-77c2-459a-a8bd-f18b1a732412"],
Cell[208709, 5626, 715, 12, 80, "Item1Exercise",ExpressionUUID->"df5ee51f-050d-4faa-a6e0-08a592c398e9"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

