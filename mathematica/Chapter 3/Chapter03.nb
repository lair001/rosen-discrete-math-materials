(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    460145,      10032]
NotebookOptionsPosition[    410327,       9173]
NotebookOutlinePosition[    429471,       9563]
CellTagsIndexPosition[    428974,       9544]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Algorithms", "BookChapterTitle",
 CounterAssignments->{{
   "ChapterNumber", 
    3}},ExpressionUUID->"908cd556-e505-4181-a220-00ee00ce0df6"],

Cell[CellGroupData[{

Cell["Introduction", "Section",ExpressionUUID->"2cae07be-e164-4aec-be74-744e181510ac"],

Cell[TextData[{
 "In this chapter, we supplement the discussion of algorithms presented in \
the text with their implementation in the Wolfram Language. In Section 3.1, \
we discuss the process of turning step-by-step instructions describing a \
procedure and pseudocode for a procedure into code in the Wolfram Language. \
In Section 3.2, we make use of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "\[CloseCurlyQuote]s graphing capabilities to better understand the big-O \
notation. And in Section 3.3, we explore average-case complexity of \
algorithms by considering the performance of a function on input."
}], "Text",ExpressionUUID->"c25b1c62-d311-46e2-993f-d9840deac894"],

Cell[TextData[{
 "In this chapter, please keep in mind the difference between an algorithm \
and its implementation (referred to as a function or procedure in the Wolfram \
Language). An algorithm refers to an approach to solving a particular \
problem, while a function is the implementation of the algorithm in the \
Wolfram Language. In this manual, we will also distinguish between complexity \
and performance. Complexity is a measure of an algorithm and is generally \
measured by counting basic operations (e.g., comparisons or arithmetic \
operations), while performance takes into account additional factors related \
to the specifics of an implementation and can be measured by recording the \
time it takes for the function to complete. Some of the factors affecting \
performance may include: choice of data structures and how the system \
implements those structures, the kinds of loops employed and how those are \
implemented by the computer language, and various improvements to efficiency \
handled by the system (for example, many computer languages, when evaluating \
a Boolean expression such as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"p", "\[And]", "q"}], TraditionalForm]],ExpressionUUID->
  "d5e3e1ec-6900-474b-88eb-fe4b639398fb"],
 ", will not bother checking ",
 Cell[BoxData[
  FormBox["q", TraditionalForm]],ExpressionUUID->
  "a96f122a-1bf4-45fe-8868-4bb5c3001122"],
 " if ",
 Cell[BoxData[
  FormBox["p", TraditionalForm]],ExpressionUUID->
  "d9061da0-3f4f-464c-99fa-547ed860f22e"],
 " is found to be false thereby decreasing the number of operations that need \
to be performed)."
}], "Text",ExpressionUUID->"72fcad99-4eab-4383-81f5-b0409249efb3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["3.1 Algorithms", "Section",
 CellTags->"Section1",ExpressionUUID->"97a1c89a-f900-4ef2-897a-18bdd3ed428b"],

Cell[TextData[{
 "It is impossible to overemphasize the importance and utility of writing \
either pseudocode or step-by-step instructions for an algorithm before you \
write the actual code for the function. Doing so helps you organize your \
ideas about how to solve the problem without the rigid constraints of the \
particular programming language. The textbook serves as an excellent model \
for you as you learn how to turn mathematical concepts and solutions to \
problems into algorithms. Those algorithms can then be turned into functions \
in any programming language you choose. This manual will help you turn your \
pseudocode or step-by-step instructions for algorithms into functions in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ", or the Wolfram Language generally."
}], "Text",ExpressionUUID->"3af70217-0fff-4ade-81f4-b27d0cd128c8"],

Cell["\<\
Section 3.1 of the textbook describes several algorithms, with an emphasis on \
how you can describe these algorithms using both English descriptions and \
pseudocode. Here, we will see how to implement several of these algorithms in \
the Wolfram Language. In this chapter, it will be especially important for \
you to have the text alongside you, as we will not reproduce the descriptions \
of the algorithms from the text.\
\>", "Text",ExpressionUUID->"368715af-36c1-455e-b3ff-f1c1ec0b47f6"],

Cell[CellGroupData[{

Cell["Finding the Maximum", "Subsection",
 CellTags->"Section1a",ExpressionUUID->"6d07dc9e-88c9-4cc0-9b54-0fe1b16baa34"],

Cell["\<\
The first algorithm we will implement is the algorithm for finding the \
maximum in an unsorted sequence. This is described in Section 3.1 as \
step-by-step instructions in the solution to Example 1 and as pseudocode in \
Algorithm 1. We will build the function according to the step-by-step \
instructions. In order to make the connection between the instructions and \
the code as clear as possible, we will begin with a function with no \
statements and successively revise it to show the addition of each step. Be \
warned that the incomplete versions of the function may produce errors, if \
you attempt to execute them.\
\>", "Text",ExpressionUUID->"472a02a9-f6e1-44d3-9646-6c2192abf37c"],

Cell[TextData[{
 "We begin with the basic elements of the function definition. Specifically, \
we include the name of the function, a pattern to impose the type of the \
argument, and, since we will have local variables, the ",
 StyleBox[ButtonBox["Module",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Module"], "FunctionLink"],
 " function and its basic structural elements."
}], "Text",ExpressionUUID->"04cf2242-82d9-4d84-bcaf-667f32af2410"],

Cell[BoxData[
 RowBox[{
  RowBox[{"findMax", "[", 
   RowBox[{"L", ":", 
    RowBox[{"{", "__Integer", "}"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ","}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "]"}]}]], "myCode",
 Editable->False,
 AutoStyleOptions->{
 "HighlightMissingArguments"->
  False},ExpressionUUID->"5100680f-9239-47e6-970b-1645cd31a858"],

Cell[TextData[{
 "Note that the pattern specifying the type of the argument indicates that \
the function will accept a list (indicated by the braces) consisting of a \
sequence (indicated by the ",
 StyleBox[ButtonBox["BlankSequence",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/BlankSequence"], "FunctionLink"],
 " (",
 StyleBox["_\[ThinSpace]_", "Code"],
 ")) of one or more integers. The ",
 StyleBox["L:", "Code"],
 " means that the argument will be referred to as ",
 StyleBox["L", "Code"],
 "."
}], "Text",ExpressionUUID->"880cbb77-fce0-48be-bdcb-4de6ceb63169"],

Cell["\<\
Step 1 in the step-by-step instructions is to \[OpenCurlyDoubleQuote]set the \
temporary maximum equal to the first integer\[CloseCurlyDoubleQuote] in the \
list. We declare a local variable to store the temporary maximum and add a \
statement in the body of the function to assign the first integer in the list \
to this value.\
\>", "Text",ExpressionUUID->"cfb27ee5-8249-4d59-81c5-89c3ece9af49"],

Cell[BoxData[
 RowBox[{
  RowBox[{"findMax", "[", 
   RowBox[{"L", ":", 
    RowBox[{"{", "__Integer", "}"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "tempMax", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"tempMax", "=", 
      RowBox[{"L", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "]"}]}]], "myCode",
 Editable->False,ExpressionUUID->"b1ea2541-4493-49cc-87ca-45a20558bea0"],

Cell[TextData[{
 "Step 2, according to Example 1 of the text, is to compare the next integer \
to the temporary maximum and update the temporary maximum if necessary. This \
requires an ",
 StyleBox[ButtonBox["If",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/If"], "FunctionLink"],
 " statement to make the comparison."
}], "Text",ExpressionUUID->"de74bbe8-99ba-403f-b9c9-203e7ade74c2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"findMax", "[", 
   RowBox[{"L", ":", 
    RowBox[{"{", "__Integer", "}"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "tempMax", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"tempMax", "=", 
      RowBox[{"L", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"tempMax", "<", 
        RowBox[{"L", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ",", 
       RowBox[{"tempMax", "=", 
        RowBox[{"L", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]], "myCode",
 Editable->False,ExpressionUUID->"c2f26d21-3f63-499c-a0c5-6966707ee4b2"],

Cell[TextData[{
 "(We are intentionally following the step-by-step instructions to the \
letter, so in step 2, \[OpenCurlyDoubleQuote]the next integer\
\[CloseCurlyDoubleQuote] is ",
 StyleBox["L[[2]]", "Code"],
 ".)"
}], "Text",ExpressionUUID->"cf35caac-6863-47fc-9c7e-f179f8734ab4"],

Cell[TextData[{
 "Step 3 tells us to repeat step 2 for all of the integers in the list, so we \
need to revise our code. The fact that we are supposed to repeat step 2 means \
that we need a loop. Since this loop is supposed to consider all the elements \
of the list beyond the first, we use a ",
 StyleBox[ButtonBox["For",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/For"], "FunctionLink"],
 " loop over the indices of the list starting at 2. We put the code we wrote \
for step 2 inside this loop, since that is the instruction being repeated, \
and replace the specific index \[OpenCurlyDoubleQuote]2\
\[CloseCurlyDoubleQuote] with the loop variable. Finally, the loop variable \
needs to be added to the list of ",
 StyleBox[ButtonBox["Module",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Module"], "FunctionLink"],
 " variables."
}], "Text",ExpressionUUID->"1dc5fa56-4726-47ac-b7fa-88ca821e210d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"findMax", "[", 
   RowBox[{"L", ":", 
    RowBox[{"{", "__Integer", "}"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tempMax", ",", "i"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"tempMax", "=", 
      RowBox[{"L", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "2"}], ",", 
       RowBox[{"i", "\[LessEqual]", 
        RowBox[{"Length", "[", "L", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"tempMax", "<", 
          RowBox[{"L", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ",", 
         RowBox[{"tempMax", "=", 
          RowBox[{"L", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]",
       "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}]], "myCode",
 Editable->False,ExpressionUUID->"d2560eeb-03f6-4191-bd78-067cd5104ea2"],

Cell["\<\
Finally, step 4 tells us that once the loop is completed, the value of the \
temporary maximum is the maximum. We end the function with the variable name \
so that the value of the variable is the value produced by the function.\
\>", "Text",ExpressionUUID->"324014e3-40c2-4a2a-a89b-473c2c8075a8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"findMax", "[", 
   RowBox[{"L", ":", 
    RowBox[{"{", "__Integer", "}"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tempMax", ",", "i"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"tempMax", "=", 
      RowBox[{"L", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "2"}], ",", 
       RowBox[{"i", "\[LessEqual]", 
        RowBox[{"Length", "[", "L", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"tempMax", "<", 
          RowBox[{"L", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ",", 
         RowBox[{"tempMax", "=", 
          RowBox[{"L", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]",
       "]"}], ";", "\[IndentingNewLine]", "tempMax"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellLabel->"In[1]:=",ExpressionUUID->"0c48212e-2d71-4418-aaee-280fb76feca5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"findMax", "[", 
  RowBox[{"{", 
   RowBox[{"3", ",", "18", ",", 
    RowBox[{"-", "5"}], ",", "72", ",", "6", ",", "0"}], "}"}], 
  "]"}]], "Input",
 CellLabel->"In[2]:=",ExpressionUUID->"418d3afd-b5ee-4aed-b3b9-23bc0dc78139"],

Cell[BoxData["72"], "Output",
 CellLabel->"Out[2]=",ExpressionUUID->"02ce7ac4-1ab0-4154-8655-976d6714d918"]
}, Open  ]],

Cell["\<\
Admittedly, this example may seem a bit too simple to warrant such an \
elaborate process. However, it illustrates an essential point: a well-written \
set of step-by-step instructions describing a procedure can be easily turned \
into working and correct code. Moreover, for nontrivial algorithms, the \
two-step process of writing instructions for the function and then \
implementing the function based on those instructions typically results in \
the production of a correct implementation more quickly than attempting the \
implementation without writing instructions.\
\>", "Text",ExpressionUUID->"67591ab4-eb19-46ff-9a30-bf84a37d0f61"],

Cell["\<\
Take a moment to compare the function above with the pseudocode given in \
Algorithm 1 in the textbook. You will notice that, in this example, they are \
extremely similar. This is one of the benefits of pseudocode in comparison to \
step-by-step instructions. However, step-by-step instructions are often \
easier to write as a first step toward a working function. Step-by-step \
instructions are also typically easier to understand, especially for novice \
programmers, as they can more easily accommodate explanation and other \
information that is out of place in pseudocode.\
\>", "Text",ExpressionUUID->"9d125aa6-358c-4fd1-8130-f6def511a631"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Binary Search", "Subsection",
 CellTags->"Section1b",ExpressionUUID->"3698e4da-6c76-410b-ad52-d5f6bfa6be7d"],

Cell["\<\
The second example will be the binary search algorithm, presented as \
Algorithm 3 in Section 3.1. The previous example showed how you can use \
step-by-step instructions to build up the function. When you start from \
pseudocode, writing the final implementation involves translating statements \
in the pseudocode into statements allowed in the programming language and \
filling in missing details.\
\>", "Text",ExpressionUUID->"b73520e3-43fe-496d-9c90-011f25175ef0"],

Cell[TextData[{
 "As before, we will go through several iterations as we translate the \
pseudocode in the text to actual code in the Wolfram Language. Initially, we \
need to: make sure that the input is specified in a way appropriate for the \
Wolfram Language; declare the local variables that are indicated in the \
pseudocode; and make basic syntax adjustments, specifically the ",
 StyleBox[ButtonBox["While",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/While"], "FunctionLink"],
 " loops, ",
 StyleBox[ButtonBox["If",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/If"], "FunctionLink"],
 " statements, and mathematical expressions such as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[LeftFloor]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"i", "+", "j"}], ")"}], "/", "2"}], "\[RightFloor]"}], 
   TraditionalForm]],ExpressionUUID->"8c97584d-1452-4cb0-97f8-619fa783c96e"],
 " must be translated into their Wolfram Language counterparts. It is \
important to note that the colon\[Dash]equal syntax used for assignment in \
the textbook\[CloseCurlyQuote]s pseudocode is to distinguish assignment from \
testing equality. In the Wolfram Language, a single equals represents \
assignment and double equals is used for testing equality."
}], "Text",ExpressionUUID->"c0f1850f-3382-4016-9577-d3dbf5ee209d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"binarySearch1", "[", 
   RowBox[{"x_Integer", ",", 
    RowBox[{"A", ":", 
     RowBox[{"{", "__Integer", "}"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"i", ",", "j", ",", "m", ",", "location"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"j", "=", "n"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"i", "<", "j"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"m", "=", 
         RowBox[{"Floor", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"i", "+", "j"}], ")"}], "/", "2"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"x", ">", 
           RowBox[{"A", "[", 
            RowBox[{"[", "m", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"i", "=", 
           RowBox[{"m", "+", "1"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"j", "=", "m"}]}], "\[IndentingNewLine]", "]"}]}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"x", "\[Equal]", 
        RowBox[{"A", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"location", "=", "i"}], ",", "\[IndentingNewLine]", 
       RowBox[{"location", "=", "0"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", "location"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellLabel->"In[3]:=",ExpressionUUID->"e62c708e-e6c5-4812-927c-f8d7662879a0"],

Cell["\<\
It is too much to expect this first version to properly execute.\
\>", "Text",ExpressionUUID->"96d118c0-2193-41fb-b441-51bb832e8987"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"binarySearch1", "[", 
  RowBox[{"19", ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "5", ",", "6", ",", "7", ",", "8", ",", 
     "10", ",", "12", ",", "13", ",", "15", ",", "16", ",", "18", ",", "19", 
     ",", "20", ",", "22"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[4]:=",ExpressionUUID->"c25b107c-fc2a-429f-b6e9-7ba5b14f13be"],

Cell[BoxData["0"], "Output",
 CellLabel->"Out[4]=",ExpressionUUID->"24c54b2c-53cf-4489-88f1-490e7481268e"]
}, Open  ]],

Cell[TextData[{
 "The problem is a simple one to correct. The pseudocode implicitly used ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "a95ce802-3279-44e0-8562-58a821204606"],
 " as the last index of the sequence of integers, so we need to make that \
assignment explicit in our code."
}], "Text",ExpressionUUID->"46fb10a0-0df6-4023-8be4-5a58a98167a5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"binarySearch1", "[", 
   RowBox[{"x_Integer", ",", 
    RowBox[{"A", ":", 
     RowBox[{"{", "__Integer", "}"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"n", ",", "i", ",", "j", ",", "m", ",", "location"}], "}"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"n", "=", 
      RowBox[{"Length", "[", "A", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"i", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"j", "=", "n"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"i", "<", "j"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"m", "=", 
         RowBox[{"Floor", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"i", "+", "j"}], ")"}], "/", "2"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"x", ">", 
           RowBox[{"A", "[", 
            RowBox[{"[", "m", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"i", "=", 
           RowBox[{"m", "+", "1"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"j", "=", "m"}]}], "\[IndentingNewLine]", "]"}]}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"x", "\[Equal]", 
        RowBox[{"A", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"location", "=", "i"}], ",", "\[IndentingNewLine]", 
       RowBox[{"location", "=", "0"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", "location"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellLabel->"In[5]:=",ExpressionUUID->"a40195d8-8a66-4c95-8143-a26652eea9db"],

Cell["Now we try running it again.", "Text",ExpressionUUID->"47976ebf-2555-439b-8547-6b4ed75d136e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"binarySearch1", "[", 
  RowBox[{"19", ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "5", ",", "6", ",", "7", ",", "8", ",", 
     "10", ",", "12", ",", "13", ",", "15", ",", "16", ",", "18", ",", "19", 
     ",", "20", ",", "22"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[6]:=",ExpressionUUID->"d21035ac-1002-4c4d-aca8-e4605295160d"],

Cell[BoxData["14"], "Output",
 CellLabel->"Out[6]=",ExpressionUUID->"f501a3f4-91c4-4b07-a590-fe9f1d058799"]
}, Open  ]],

Cell["\<\
One last adjustment needs to be made. The pseudocode makes clear that the \
sequence of values input to the algorithm is expected to be in increasing \
order. The version of the function thus far does not prevent us from \
attempting to evaluate it on invalid input.\
\>", "Text",ExpressionUUID->"7aea9778-7b05-4610-8fbe-1fd164bcd599"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"binarySearch1", "[", 
  RowBox[{"3", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4", ",", "3", ",", "5", ",", "6"}], "}"}]}], 
  "]"}]], "Input",
 CellLabel->"In[7]:=",ExpressionUUID->"6244bb57-e91e-4089-978b-47527c80ea4d"],

Cell[BoxData["0"], "Output",
 CellLabel->"Out[7]=",ExpressionUUID->"a183cdd9-fa96-4125-8fed-5fc0f4196742"]
}, Open  ]],

Cell[TextData[{
 "To test that the input is in increasing order, we take advantage of the \
fact that ",
 StyleBox[ButtonBox["Less",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Less"], "FunctionLink"],
 ", the implementation of the less than relation, can be applied to a \
sequence of values and returns true only when each element of the sequence is \
less than the next. This is illustrated below. "
}], "Text",ExpressionUUID->"1d7840c4-830f-4aa7-9f92-ba83a05cac1f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Less", "[", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], 
  "]"}]], "Input",
 CellLabel->"In[8]:=",ExpressionUUID->"3948a716-5c5c-4fcc-b17b-4077f4f61cb6"],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[8]=",ExpressionUUID->"11832e2d-508f-456e-8e62-cb594afda49d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Less", "[", 
  RowBox[{"1", ",", "2", ",", "4", ",", "3", ",", "5", ",", "6"}], 
  "]"}]], "Input",
 CellLabel->"In[9]:=",ExpressionUUID->"d6805065-ffb0-4f8c-aafc-fc231e9e632c"],

Cell[BoxData["False"], "Output",
 CellLabel->"Out[9]=",ExpressionUUID->"253366d9-7c72-4445-ac4e-a674ac79a5d6"]
}, Open  ]],

Cell[TextData[{
 "Note that applying ",
 StyleBox[ButtonBox["Less",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Less"], "FunctionLink"],
 " to undefined symbols displays with the infix notation."
}], "Text",ExpressionUUID->"8a29694b-e78c-466a-b36b-a20d458c2101"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Less", "[", 
  RowBox[{"a", ",", "b", ",", "c"}], "]"}]], "Input",
 CellLabel->"In[10]:=",ExpressionUUID->"fa2475f1-7c61-4837-9314-c414f0bcd5c6"],

Cell[BoxData[
 RowBox[{"a", "<", "b", "<", "c"}]], "Output",
 CellLabel->"Out[10]=",ExpressionUUID->"165cc09b-0109-484d-984a-be1c4352ea88"]
}, Open  ]],

Cell[TextData[{
 StyleBox[ButtonBox["Less",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Less"], "FunctionLink"],
 " applies to a sequence, not a list, so to test whether the ",
 StyleBox["A", "Code"],
 " in our function is in increasing order, we will ",
 StyleBox[ButtonBox["Apply",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Apply"], "FunctionLink"],
 " (",
 StyleBox["@@", "Code"],
 ") ",
 StyleBox[ButtonBox["Less",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Less"], "FunctionLink"],
 " to ",
 StyleBox["A", "Code"],
 ". Recall that a ",
 StyleBox[ButtonBox["Condition",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Condition"], "FunctionLink"],
 " (",
 StyleBox["/;", "Code"],
 ") is used in conjunction with a function definition to ensure that the \
function is not evaluated unless the test is passed. Here, then, is the \
complete function definition."
}], "Text",ExpressionUUID->"6ffc0f65-9305-4873-9511-1a2d2d735a04"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"binarySearch", "[", 
    RowBox[{"x_Integer", ",", 
     RowBox[{"A", ":", 
      RowBox[{"{", "__Integer", "}"}]}]}], "]"}], "/;", 
   RowBox[{"Less", "@@", "A"}]}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"n", ",", "i", ",", "j", ",", "m", ",", "location"}], "}"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"n", "=", 
      RowBox[{"Length", "[", "A", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"i", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"j", "=", "n"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"i", "<", "j"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"m", "=", 
         RowBox[{"Floor", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"i", "+", "j"}], ")"}], "/", "2"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"x", ">", 
           RowBox[{"A", "[", 
            RowBox[{"[", "m", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"i", "=", 
           RowBox[{"m", "+", "1"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"j", "=", "m"}]}], "\[IndentingNewLine]", "]"}]}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"x", "\[Equal]", 
        RowBox[{"A", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"location", "=", "i"}], ",", "\[IndentingNewLine]", 
       RowBox[{"location", "=", "0"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", "location"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellLabel->"In[11]:=",ExpressionUUID->"d2ed0e16-53b4-46e8-8072-b71ec5ce9b08"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"binarySearch", "[", 
  RowBox[{"19", ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "5", ",", "6", ",", "7", ",", "8", ",", 
     "10", ",", "12", ",", "13", ",", "15", ",", "16", ",", "18", ",", "19", 
     ",", "20", ",", "22"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[12]:=",ExpressionUUID->"45cfca5f-6e47-42d5-9603-15cfd1a9cf37"],

Cell[BoxData["14"], "Output",
 CellLabel->"Out[12]=",ExpressionUUID->"db394db4-91a5-4960-9c97-f380bb05505c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"binarySearch", "[", 
  RowBox[{"3", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4", ",", "3", ",", "5", ",", "6"}], "}"}]}], 
  "]"}]], "Input",
 CellLabel->"In[13]:=",ExpressionUUID->"01d4f4cf-59d5-43c7-9078-23e35354c4f6"],

Cell[BoxData[
 RowBox[{"binarySearch", "[", 
  RowBox[{"3", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4", ",", "3", ",", "5", ",", "6"}], "}"}]}], 
  "]"}]], "Output",
 CellLabel->"Out[13]=",ExpressionUUID->"5bc3f1fd-6644-4491-8383-98cc153d045f"]
}, Open  ]],

Cell[TextData[{
 "Observe that the only commands that we added to the pseudocode given in the \
book were the declaration of local variables and the assignment of ",
 StyleBox["n", "Code"],
 ". We also added additional line breaks to be consistent with the style of \
code used in this manual. Otherwise, the Wolfram Language code and pseudocode \
match very closely. It is, of course, not always quite this straightforward, \
but well-written pseudocode should contain all the essential elements. Like \
with proofs, as you become more familiar with pseudocode you will find \
yourself more comfortable with leaving some details out."
}], "Text",ExpressionUUID->"afe7457c-3211-4166-be04-a8b790a1dc9a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Bubble Sort", "Subsection",
 CellTags->"Section1c",ExpressionUUID->"1b6a45fa-7e76-4a03-8729-85181591ad5f"],

Cell["\<\
We will next implement bubble sort, presented in the text as Algorithm 4 of \
Section 3.1.\
\>", "Text",ExpressionUUID->"48c32761-4b5e-4db0-8150-ce40bb7f082c"],

Cell[TextData[{
 "For our first attempt at implementing Algorithm 4, we need to: specify the \
input, declare the local variables (which can, in part, be gleaned from the \
pseudocode), and correct the syntax for the ",
 StyleBox[ButtonBox["For",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/For"], "FunctionLink"],
 " loops and ",
 StyleBox[ButtonBox["If",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/If"], "FunctionLink"],
 " statements."
}], "Text",ExpressionUUID->"afc10ebb-5678-488b-951f-b44d02cec535"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bubbleSort", "[", "A_List", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"i", ",", "j"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "\[LessEqual]", 
       RowBox[{"n", "-", "1"}]}], ",", 
      RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"j", "=", "1"}], ",", 
        RowBox[{"j", "\[LessEqual]", 
         RowBox[{"n", "-", "i"}]}], ",", 
        RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"A", "[", 
            RowBox[{"[", "j", "]"}], "]"}], ">", 
           RowBox[{"A", "[", 
            RowBox[{"[", 
             RowBox[{"j", "+", "1"}], "]"}], "]"}]}], ","}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"then", " ", "interchange", " ", 
           RowBox[{"A", "[", 
            RowBox[{"[", "j", "]"}], "]"}], " ", "and", " ", 
           RowBox[{"A", "[", 
            RowBox[{"[", 
             RowBox[{"j", "+", "1"}], "]"}], "]"}]}], "*)"}], 
         "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}]], "myCode",\

 Editable->False,
 AutoStyleOptions->{
 "HighlightMissingArguments"->
  False},ExpressionUUID->"52fcd28d-9d26-46a9-afe4-a5977a348f96"],

Cell[TextData[{
 "The implementation above gets us close to a correct implementation of the \
bubble sort algorithm, but there are some problems. The simplest to fix is \
that ",
 StyleBox["n", "Code"],
 " is not defined. You can correct this by declaring ",
 StyleBox["n", "Code"],
 " as a local variable and setting it equal to the number of elements of ",
 StyleBox["A", "Code"],
 "."
}], "Text",ExpressionUUID->"eb1d6bcf-e3db-41ab-bae1-1b7e746c6a4f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bubbleSort", "[", "A_List", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"i", ",", "j", ",", 
      RowBox[{"n", "=", 
       RowBox[{"Length", "[", "A", "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "\[LessEqual]", 
       RowBox[{"n", "-", "1"}]}], ",", 
      RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"j", "=", "1"}], ",", 
        RowBox[{"j", "\[LessEqual]", 
         RowBox[{"n", "-", "i"}]}], ",", 
        RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"A", "[", 
            RowBox[{"[", "j", "]"}], "]"}], ">", 
           RowBox[{"A", "[", 
            RowBox[{"[", 
             RowBox[{"j", "+", "1"}], "]"}], "]"}]}], ","}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"then", " ", "interchange", " ", 
           RowBox[{"A", "[", 
            RowBox[{"[", "j", "]"}], "]"}], " ", "and", " ", 
           RowBox[{"A", "[", 
            RowBox[{"[", 
             RowBox[{"j", "+", "1"}], "]"}], "]"}]}], "*)"}], 
         "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}]], "myCode",\

 Editable->False,
 AutoStyleOptions->{
 "HighlightMissingArguments"->
  False},ExpressionUUID->"872542a0-e65a-4426-ada0-7dd8eff0c07c"],

Cell[TextData[{
 "The next problem is the instruction in the pseudocode to interchange ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["a", "j"], TraditionalForm]],ExpressionUUID->
  "e7789251-7e9a-4de5-b3b1-cff1c8c7b5e3"],
 " with ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["a", 
    RowBox[{"j", "+", "1"}]], TraditionalForm]],ExpressionUUID->
  "ca738a5e-e587-43a6-ad98-4ce66b33f49d"],
 ". The Wolfram Language contains no interchange function. We either have to \
make an interchange function that can be used within the ",
 StyleBox["bubbleSort", "Code"],
 " function or flesh out the code to interchange the two list elements within \
",
 StyleBox["bubbleSort", "Code"],
 " itself. We take the first approach here so as to preserve as close a \
connection as possible between our implementation and the pseudocode."
}], "Text",ExpressionUUID->"cca7962c-212d-4cae-9a54-b4febf2b8330"],

Cell[TextData[{
 "Before creating an ",
 StyleBox["interchange", "Code"],
 " function, however, there is another issue to take into consideration. \
Namely, in the Wolfram Language, arguments to a function cannot generally be \
modified. Instead, we need to copy the parameter to a local variable, both in \
",
 StyleBox["bubbleSort", "Code"],
 " and in the ",
 StyleBox["interchange", "Code"],
 " function we are about to write."
}], "Text",ExpressionUUID->"11225068-80b0-479d-b943-c5e0e1039bf0"],

Cell[TextData[{
 "Our ",
 StyleBox["interchange", "Code"],
 " function will take two arguments: the list of numbers and the index of the \
smaller of the two positions to be swapped. It will proceed as follows: "
}], "Text",ExpressionUUID->"c822066a-669f-4a85-957d-300bd9975630"],

Cell[CellGroupData[{

Cell["\<\
Set a temporary variable equal to the first value to be swapped.\
\>", "Item1Numbered",ExpressionUUID->"29fb64be-f374-44d6-9df3-a34cf57d57ae"],

Cell["\<\
Set the value of the first position equal to the second value.\
\>", "Item1Numbered",ExpressionUUID->"b3015a6c-3029-4ee0-998b-2b53ded30cdb"],

Cell["\<\
Set the value of the second position equal to the value stored in the \
temporary variable.\
\>", "Item1Numbered",ExpressionUUID->"fb9227e0-94c7-440a-9f6e-d7ea30bcbafe"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"interchange", "[", 
   RowBox[{"L_List", ",", "i_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"M", "=", "L"}], ",", "temp"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"temp", "=", 
      RowBox[{"M", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"M", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "=", 
      RowBox[{"M", "[", 
       RowBox[{"[", 
        RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"M", "[", 
       RowBox[{"[", 
        RowBox[{"i", "+", "1"}], "]"}], "]"}], "=", "temp"}], ";", 
     "\[IndentingNewLine]", "M"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",\

 InitializationCell->True,
 CellLabel->"In[14]:=",ExpressionUUID->"091e8243-73e8-4620-8de9-7535eff0c191"],

Cell[TextData[{
 "We update our implementation of bubble sort by: copying the list to a local \
name and replacing all the occurrences of the argument with the local \
variable; applying the ",
 StyleBox["interchange", "Code"],
 " function; and ending with the local copy of the list, so that it is the \
output of the function."
}], "Text",ExpressionUUID->"01c4771e-1f98-4f95-9192-56b17cef970e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bubbleSort", "[", "A_List", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"i", ",", "j", ",", 
      RowBox[{"n", "=", 
       RowBox[{"Length", "[", "A", "]"}]}], ",", 
      RowBox[{"B", "=", "A"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", 
        RowBox[{"n", "-", "1"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", "1"}], ",", 
         RowBox[{"j", "\[LessEqual]", 
          RowBox[{"n", "-", "i"}]}], ",", 
         RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"B", "[", 
             RowBox[{"[", "j", "]"}], "]"}], ">", 
            RowBox[{"B", "[", 
             RowBox[{"[", 
              RowBox[{"j", "+", "1"}], "]"}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"B", "=", 
            RowBox[{"interchange", "[", 
             RowBox[{"B", ",", "j"}], "]"}]}]}], "\[IndentingNewLine]", 
          "]"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", "B"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellLabel->"In[15]:=",ExpressionUUID->"d76c7b69-1fee-4eb8-9aa2-651feb773a53"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bubbleSort", "[", 
  RowBox[{"{", 
   RowBox[{"3", ",", "18", ",", 
    RowBox[{"-", "5"}], ",", "72", ",", "6", ",", "0"}], "}"}], 
  "]"}]], "Input",
 CellLabel->"In[16]:=",ExpressionUUID->"b9c38179-1947-4ea4-b8b3-5dafc039c730"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "5"}], ",", "0", ",", "3", ",", "6", ",", "18", ",", "72"}], 
  "}"}]], "Output",
 CellLabel->"Out[16]=",ExpressionUUID->"3e1c20ad-553f-4c21-9298-33060c67c182"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["3.2 The Growth of Functions", "Section",
 CellTags->"Section2",ExpressionUUID->"8d65f244-2e1c-4890-836e-50fb1f1002e0"],

Cell[TextData[{
 "In this section, we use ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to computationally explore the growth of functions. In particular, we will \
graph functions in order to visually convince ourselves that the big-O \
relationship is satisfied. We will also see how to use graphs to determine \
possible witnesses for the constants ",
 Cell[BoxData[
  FormBox["C", TraditionalForm]],ExpressionUUID->
  "7febe062-87a6-426d-ae65-9988d1d152d8"],
 " and ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]],ExpressionUUID->
  "d235bb99-96ee-4592-bb63-8f81f5f8404d"],
 " in the definition of big-O notation. Since, as the textbook mentions, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", "x", ")"}], TraditionalForm]],ExpressionUUID->
  "965cf168-44c3-49f6-8a88-1864b49479ea"],
 " is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"O", "(", 
    RowBox[{"g", "(", "x", ")"}], ")"}], TraditionalForm]],ExpressionUUID->
  "c1963499-06b1-4cb6-b01a-1f2095aa2262"],
 " if and only if ",
 Cell[BoxData[
  FormBox[
   RowBox[{"g", "(", "x", ")"}], TraditionalForm]],ExpressionUUID->
  "13a48995-0ca9-4c8a-9f67-afa611dc05a3"],
 " is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalOmega]", "(", 
    RowBox[{"f", "(", "x", ")"}], ")"}], TraditionalForm]],ExpressionUUID->
  "22f06e16-14a0-4e00-9f0f-780bfbb34d03"],
 ", the techniques we explore in this section apply also to big-Omega and \
big-Theta notation."
}], "Text",ExpressionUUID->"348156fb-dcc9-4c94-a172-75445502c94c"],

Cell[TextData[{
 "We begin by considering the function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     RowBox[{"5", 
      SuperscriptBox["x", "3"]}], "+", 
     RowBox[{"4", 
      SuperscriptBox["x", "2"]}], "+", 
     RowBox[{"3", "x"}], "+", "9"}]}], TraditionalForm]],ExpressionUUID->
  "92c2e8b9-0caf-4538-b21d-b6ab7bd467a3"],
 ". Theorem 1 from Section 3.2 tells us that this is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"O", "(", 
    SuperscriptBox["x", "3"], ")"}], TraditionalForm]],ExpressionUUID->
  "cfd85352-f40c-4e0e-a172-1e4a66032b56"],
 ", but we will use this function as an example of how you can use ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to find values for ",
 Cell[BoxData[
  FormBox["C", TraditionalForm]],ExpressionUUID->
  "53cd5074-6308-4ff6-86a3-1287e65836d5"],
 " and ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]],ExpressionUUID->
  "33f7419d-ebdd-488e-b8ed-9722d12bc98e"],
 " such that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"|", 
    RowBox[{"f", "(", "x", ")"}], "|", 
    RowBox[{"\[LessEqual]", "C"}], "|", 
    RowBox[{"g", "(", "x", ")"}], "|"}], TraditionalForm]],ExpressionUUID->
  "f6f8982d-1d52-4f0c-a16d-2c29d9e67bb4"],
 " for all ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "\[GreaterEqual]", "k"}], TraditionalForm]],ExpressionUUID->
  "79fa7d72-a011-44bb-9d4a-409f36c1bc7e"],
 "."
}], "Text",ExpressionUUID->"11b1d57a-5197-449a-b86c-24c7d071f4fd"],

Cell[CellGroupData[{

Cell[TextData[{
 "The ",
 StyleBox["Plot", "Code"],
 " Function"
}], "Subsection",
 CellTags->"Section2a",ExpressionUUID->"e967fbe1-a442-41d9-867a-b2702535b25d"],

Cell[TextData[{
 "First, we will look at options to the ",
 StyleBox[ButtonBox["Plot",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Plot"], "FunctionLink"],
 " function that will be useful in this context. Start by giving names to the \
formulas."
}], "Text",ExpressionUUID->"c2217703-b1ab-44da-860a-c776e53a570c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f1", "=", 
  RowBox[{
   RowBox[{"5", "*", 
    RowBox[{"x", "^", "3"}]}], "+", 
   RowBox[{"4", "*", 
    RowBox[{"x", "^", "2"}]}], "+", 
   RowBox[{"3", "*", "x"}], "+", "9"}]}]], "Input",
 InitializationCell->True,
 CellLabel->"In[17]:=",ExpressionUUID->"7be7742e-5cef-4718-bca7-1d08db3d847b"],

Cell[BoxData[
 RowBox[{"9", "+", 
  RowBox[{"3", " ", "x"}], "+", 
  RowBox[{"4", " ", 
   SuperscriptBox["x", "2"]}], "+", 
  RowBox[{"5", " ", 
   SuperscriptBox["x", "3"]}]}]], "Output",
 CellLabel->"Out[17]=",ExpressionUUID->"6e58ebfe-837b-4a3a-877c-af8a9e807771"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g1", "=", 
  RowBox[{"x", "^", "3"}]}]], "Input",
 InitializationCell->True,
 CellLabel->"In[18]:=",ExpressionUUID->"af2696c2-d38b-4944-a30d-d115eb2b410e"],

Cell[BoxData[
 SuperscriptBox["x", "3"]], "Output",
 CellLabel->"Out[18]=",ExpressionUUID->"ffeaf77e-db7c-4748-8a3e-8650b694a9b2"]
}, Open  ]],

Cell[TextData[{
 "Graphing ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", "x", ")"}], TraditionalForm]],ExpressionUUID->
  "bef54f16-d421-477c-887f-bef1d64b13be"],
 " can be as simple as calling ",
 StyleBox[ButtonBox["Plot",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Plot"], "FunctionLink"],
 " with the formula as the first argument and a specification of the domain \
as the second. The domain specification is given as a list consisting of the \
name of the independent variable used in the formula, the minimum value, and \
the maximum value. "
}], "Text",ExpressionUUID->"f6648909-f749-47b0-ab55-e97389c7c89f"],

Cell[TextData[{
 "For example, to display the graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", "x", ")"}], TraditionalForm]],ExpressionUUID->
  "6a1f9fcc-deca-40ff-b57b-8d4c45f0d67e"],
 " with ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "17437e63-a89f-44df-af7a-2d72aef800f6"],
 " ranging from 0 to 10, enter the following."
}], "Text",ExpressionUUID->"9b6ebff2-3de5-457c-9de1-4dcc0ab1fd0d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"f1", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[19]:=",ExpressionUUID->"06eceae9-8ce3-4f5c-818d-9c136c5858a5"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
M0PjtehQsyiz+udgIftn1/SWPh3+BwEdDpE=
       "]]},
     Annotation[#, "Charting`Private`Tag$2186#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10}, {0., 5438.999676938782}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[19]=",ExpressionUUID->"7db5d68c-70a1-4175-adf8-83db9443e0fd"]
}, Open  ]],

Cell[TextData[{
 "Note that ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " automatically selects the vertical range of the graph. You can control \
this with the ",
 StyleBox[ButtonBox["PlotRange",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/PlotRange"], "FunctionLink"],
 " option. The first two common values for ",
 StyleBox[ButtonBox["PlotRange",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/PlotRange"], "FunctionLink"],
 " are ",
 StyleBox["Automatic", "Code"],
 " and ",
 StyleBox["All", "Code"],
 ". The ",
 StyleBox["Automatic", "Code"],
 " value has the same effect as omitting the option. The difference between \
",
 StyleBox["Automatic", "Code"],
 " and ",
 StyleBox["All", "Code"],
 " is that, in certain circumstances, ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " may choose to omit parts of the function being graphed when using the ",
 StyleBox["Automatic", "Code"],
 " plot range. The ",
 StyleBox["All", "Code"],
 " value forces ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to display the entire function. This is illustrated below, where we have \
graphed ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "10"], TraditionalForm]],ExpressionUUID->
  "e32dd1d3-9a16-4093-9c71-f77ffdb79190"],
 " with both options. "
}], "Text",ExpressionUUID->"37689db6-10de-4437-9173-5b2ca4fa3959"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"x", "^", "10"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "5"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Automatic"}]}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"x", "^", "10"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "5"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "}"}]], "Input",
 CellLabel->"In[20]:=",ExpressionUUID->"58a0942e-af42-4f8b-8ae8-1bf60b939856"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
         "]]},
       Annotation[#, "Charting`Private`Tag$2292#1"]& ]}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
      AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 4.999999897959183}, {0., 3.526348860245497*^6}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
k095ng==
         "]]},
       Annotation[#, "Charting`Private`Tag$2336#1"]& ]}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
      AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellLabel->"Out[20]=",ExpressionUUID->"e4cbc2e0-9a33-4094-9df4-54a2f2bbc91f"]
}, Open  ]],

Cell[TextData[{
 "Another common use of ",
 StyleBox[ButtonBox["PlotRange",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/PlotRange"], "FunctionLink"],
 " is to explicitly specify the maximum and minimum ",
 Cell[BoxData[
  FormBox["y", TraditionalForm]],ExpressionUUID->
  "1291bc1c-0812-49df-a2d6-5d1e6fe859a0"],
 " values. If you provide a single positive number as the value for ",
 StyleBox[ButtonBox["PlotRange",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/PlotRange"], "FunctionLink"],
 ", ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " will display the graph with that value as the maximum for the vertical \
axis and its negative as the minimum. The following graphs ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", "x", ")"}], TraditionalForm]],ExpressionUUID->
  "ca4f935a-0c90-4359-9c6e-b8c2907fcfea"],
 " with ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "c32f3cc7-9aa5-49db-92f2-3bff477fb194"],
 " from 0 to 10 and the vertical axis ranging from ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", "5000"}], TraditionalForm]],ExpressionUUID->
  "657e237f-5919-412d-a378-3cd4fcae891b"],
 " to ",
 Cell[BoxData[
  FormBox["5000", TraditionalForm]],ExpressionUUID->
  "e18cca70-a7ba-4b4b-8580-be7e0aa1b0a6"],
 "."
}], "Text",ExpressionUUID->"44d24ac7-b56a-4178-9483-2427bfeb2663"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"f1", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "5000"}]}], "]"}]], "Input",
 CellLabel->"In[21]:=",ExpressionUUID->"82b2c7ab-357d-46ad-ad29-094293d65e10"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
Ev5LzB38P5vgW+E=
       "]]},
     Annotation[#, "Charting`Private`Tag$2396#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10}, {-5000, 5000}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[21]=",ExpressionUUID->"e724ace8-fb1b-4ff2-aea3-0caf38a10d7f"]
}, Open  ]],

Cell[TextData[{
 "If you wish to specify different values for the maximum and minimum for the \
vertical axis, you can do so with a list consisting of the two values. The \
following shows ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", "x", ")"}], TraditionalForm]],ExpressionUUID->
  "c0b6473a-5aa6-4370-8b96-70f5ce4450f9"],
 " on the domain ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"0", ",", "10"}], "]"}], TraditionalForm]],ExpressionUUID->
  "be302e40-8241-47af-b2e6-f77f0b8b9cd3"],
 " with the vertical axis ranging from ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", "1000"}], TraditionalForm]],ExpressionUUID->
  "e229bc02-4825-488f-88b3-f34358fe5d7d"],
 " to ",
 Cell[BoxData[
  FormBox["5000", TraditionalForm]],ExpressionUUID->
  "3be64977-aad6-4411-911e-f14904d83bb8"],
 "."
}], "Text",ExpressionUUID->"976fd751-d3a1-488a-ab0f-709acff54153"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"f1", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1000"}], ",", "5000"}], "}"}]}]}], "]"}]], "Input",
 CellLabel->"In[22]:=",ExpressionUUID->"996233fe-4437-41c4-82ac-961d2f5ca4da"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
Ev5LzB38P5vgW+E=
       "]]},
     Annotation[#, "Charting`Private`Tag$2440#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 9.999999795918367}, {-1000, 5000}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[22]=",ExpressionUUID->"e26733c7-88cd-4cfd-bb66-6ee5c9400cca"]
}, Open  ]],

Cell[TextData[{
 "Finally, you can use ",
 StyleBox[ButtonBox["PlotRange",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/PlotRange"], "FunctionLink"],
 " to specify the displayed range in both directions using the syntax ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       StyleBox[
        SubscriptBox["x", "min"], "CodeVar"], ",", 
       StyleBox[
        SubscriptBox["x", "max"], "CodeVar"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       StyleBox[
        SubscriptBox["y", "min"], "CodeVar"], ",", 
       StyleBox[
        SubscriptBox["y", "max"], "CodeVar"]}], "}"}]}], "}"}], Input]],
  ExpressionUUID->"f5ad98de-783e-4b60-bc82-94f0651ea4d2"],
 ". Note that specifying the range for the horizontal axis in this way is \
quite different from setting the domain of the function, which is done with \
the second argument to ",
 StyleBox[ButtonBox["Plot",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Plot"], "FunctionLink"],
 ". We illustrate the difference with the following example."
}], "Text",ExpressionUUID->"ddb56a58-65fa-456b-945f-eb5a300d509e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"f1", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "3", ",", "7"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "5000"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellLabel->"In[23]:=",ExpressionUUID->"66409445-a623-4f95-9450-7a5419229db1"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVyn080wkAx/HhyjwkW7a1/ZJU5FIh3Fmir+W1k1RSHk5anZQW0ZIjjizP
Kg/jxLLpjshKUpGUh5Tbojy8KA8X9brk4SwPPUhUrvvj83r/8zH0DXY7qEoi
kbZ963/5L99rkkhk0LrvEqSL/nBSG7ONVSVjTuzX5FPkDxPjocD588goVkZc
q77qj8GAnhZtTTKMzfwZEXf84fexRsTUI4PxLDpYvcMf+3USWZYmZNR3lrn5
zD8Mj43M1YdcydjX51AxfvQwHHPstjy+SMbevccCH4CPbNqMpsEODVQeaWZO
sQIwaaAIHZjUwO6WRvfNo4EwatKPCs/QxH1hYIq+PAit7CH1THstNNZsq40Q
HEPsDw22y15qoaxrQKc2XIBr07rvLNO0sUbLfNWtP4+j3HuIS7ddgI0Vx1zc
OkNQu6V1c8DfC6DaZSzz/HICDl9XP+Qm6yDBZtmNKpdf0bIp502W6ULsiZZZ
pYnCYGV47mZ500IoHiSqmfaHgzwQES2z1YXPj+Ki/l0RmP1yO8z6rC68MoPf
Pq+JRMnMtRuxr3SxRLnVRt09Co7yEVs2mwKVdz3bZ99F44B3KdMkmYIhA9kG
PicG9m2r2b0vKHjUt68nYoUQEm2L0kZzKow9RiWDn4WoMp30PZFERbmF/dLC
idOoY304lNJPxfTRR7d2D8dia5uwrmfdItS9/cN1XlccRIcVPyvjF6EwNPeN
wz/x4MnPO9l0LUJarry+41UC6FOy+FFjPeQdreGrDSciWT38O98oPbSfXJVB
0kqG8MWTLkqLHgyeWr3uW54Ca3GfMs6IBqsEZrjfnjN4utLCdV8kDUTVqQHZ
+bOYCV1ADmmmIWT6apmt/Bx6SwpUnJfT0dp9OWWUmYZNhQ07vEPoqH650i7V
LB3pQUbK9gY6VGZcE+w60pFHcJq0mQw4h37QrE7OwNq0oc8xfAbElDOF+TYi
nHzNFVTVM9Cpv36t16wIzqpmG76nLkZk2W+RWpWZII9771TxXQzBjXy724Is
CGshy6tajBHRdU4S53ec2l3mKdBgosCw+RlfMxs2T7q4Gr8wEefV75w4nI0+
mmMc+TYTvplyLXvFeagbsekO6iyMJXlmaUhzoKQPj2zksVDh+ulS9JlceLQa
UI+XsUC9xZtKCRKj1PNCks4cC+yAS9et3S6grqENQe4EOuNfWH7angeP96nb
1IsIBNDFz1wgwcMWjnlwMQEnbY+oVEcJ1pdMUbsuE9gzEp3a5iSBDo/XXXSF
gL/Zmgn3nRI0ytce4JYTmPgrofygrwRWFx6Hx98jcFW12Tw3TgIKR7NQrYPA
iYL5XNdHEkQvqU0I6CQw7hTmmP9EAuWUgN/xlMD9xNnSsXYJFFd61hV0Eygu
3tWQ2itBDK3kDqefgJdL50THqARjwz+1CkcI6JOL+Md1pPB5MFs+8i+B57z7
hIIqRZOkLGunksDn4s3spQwpitwY3objBK4PZVQ2G0ix997gQP17AjenB6tN
Lb792WK5yRSBI7XNijhrKWwE22XpHwlQVjhw+tlS6BlXBu+fIeCX/zZMxJHi
NOmIm2KWgOVyttUbrhQTvfrW5l8IrGcZ+ThtlYJX0c7I+Upg8t7d8YIdUjxO
i5+ZmyOgCtXxuV1S/AeeGys0
       "]]},
     Annotation[#, "Charting`Private`Tag$2484#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10}, {0, 5000}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[23]=",ExpressionUUID->"9ed7dca6-9f74-41cb-80cb-091e46ad7c1e"]
}, Open  ]],

Cell[TextData[{
 "You can see above that the ",
 StyleBox[ButtonBox["PlotRange",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/PlotRange"], "FunctionLink"],
 " option is specifying the extent of the graph. On the other hand, the \
second argument, ",
 StyleBox["{x,3,7}", "Code"],
 ", is a restriction of the domain of the function."
}], "Text",ExpressionUUID->"6f82a064-3949-4c9f-97a2-ddc8c865e18e"],

Cell[TextData[{
 "To plot multiple functions in the same graph, use the ",
 StyleBox[ButtonBox["Plot",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Plot"], "FunctionLink"],
 " function with a list of functions as the first argument."
}], "Text",ExpressionUUID->"db2625a7-3ffc-47a4-a1bc-b1dc5fea82e2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"f1", ",", "g1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[24]:=",ExpressionUUID->"8fd22ed9-9d50-49ef-9276-21132e616dd4"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
fa2bE5uPtVOMmfl5Aklrb/09H8zH/wKNMwvr
       "]]},
     Annotation[#, "Charting`Private`Tag$2530#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
DzpalbQ=
       "]]},
     Annotation[#, "Charting`Private`Tag$2530#2"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 5}, {0., 748.9999573469395}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[24]=",ExpressionUUID->"45c9c445-3fb4-48fd-8b54-2f98a09ef878"]
}, Open  ]],

Cell[TextData[{
 "Note that ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " automatically selects colors for the two functions. You can manually \
select the colors (or other visual effects) with the ",
 StyleBox[ButtonBox["PlotStyle",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/PlotStyle"], "FunctionLink"],
 " option. If you use the ",
 StyleBox[ButtonBox["PlotStyle",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/PlotStyle"], "FunctionLink"],
 " option with a list of named colors, then the first color will be assigned \
to the first function, the second color to the second function, and so on. \
You can choose from common choices such as ",
 StyleBox["Red", "Code"],
 ", ",
 StyleBox["Green", "Code"],
 ", ",
 StyleBox["Blue", "Code"],
 ", ",
 StyleBox["Black", "Code"],
 ", ",
 StyleBox["White", "Code"],
 ", ",
 StyleBox["Gray", "Code"],
 ", ",
 StyleBox["Cyan", "Code"],
 ", ",
 StyleBox["Magenta", "Code"],
 ", ",
 StyleBox["Yellow", "Code"],
 ", ",
 StyleBox["Brown", "Code"],
 ", ",
 StyleBox["Orange", "Code"],
 ", ",
 StyleBox["Pink", "Code"],
 ", and ",
 StyleBox["Purple", "Code"],
 ". You can get more information about colors from the ",
 ButtonBox["Colors guide",
  BaseStyle->"Link",
  ButtonData->"paclet:guide/Colors"],
 "."
}], "Text",ExpressionUUID->"1a67e701-9a79-4c2d-94ac-7e751cdd9bdc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"f1", ",", "g1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "5"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Orange", ",", "Purple"}], "}"}]}]}], "]"}]], "Input",
 CellLabel->"In[25]:=",ExpressionUUID->"b6beff3c-3fe0-43c5-bec7-6d69402fcfb4"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
fa2bE5uPtVOMmfl5Aklrb/09H8zH/wKNMwvr
       "]]},
     Annotation[#, "Charting`Private`Tag$2577#1"]& ], 
    TagBox[
     {RGBColor[0.5, 0, 0.5], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
DzpalbQ=
       "]]},
     Annotation[#, "Charting`Private`Tag$2577#2"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 5}, {0., 748.9999573469395}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[25]=",ExpressionUUID->"f0ce595d-f4cc-4e46-a2f0-f81afff8c1ca"]
}, Open  ]],

Cell[TextData[{
 "When displaying graphs of multiple functions, it can often be useful to \
include a legend with the graph indicating which function is which. You can \
use the ",
 StyleBox[ButtonBox["PlotLegends",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/PlotLegends"], "FunctionLink"],
 " option to do this. "
}], "Text",ExpressionUUID->"3fb8263f-fab0-4636-86ec-2604d8f1bb7d"],

Cell[TextData[{
 StyleBox[ButtonBox["PlotLegends",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/PlotLegends"], "FunctionLink"],
 " is an option to ",
 StyleBox[ButtonBox["Plot",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Plot"], "FunctionLink"],
 " (and other plotting functions such as ",
 StyleBox[ButtonBox["ListPlot",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/ListPlot"], "FunctionLink"],
 "). We will describe three of the possible values. "
}], "Text",ExpressionUUID->"20aab817-3631-48b2-97be-20f307fa5df1"],

Cell[TextData[{
 "The simplest way to create a legend is by setting the ",
 StyleBox[ButtonBox["PlotLegends",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/PlotLegends"], "FunctionLink"],
 " option to ",
 StyleBox[ButtonBox["Automatic",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Automatic"], "FunctionLink"],
 ". This will create a legend that identifies the colors used in the plot \
with the index of the function."
}], "Text",ExpressionUUID->"d9ef3a4b-b13f-439f-8284-f355e1393930"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"f1", ",", "g1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "5"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellLabel->"In[26]:=",ExpressionUUID->"c56e10c8-437a-4095-a5bf-4f77fb7f0460"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVxXk41AkfAPBxpbCF376VXTHNnbutntLG94sOqXTIsYhMDCksr0kiFZrJ
mzLZjkESYSNStvIiKiTGGMOUI8oxw1jxlpiKlPd9//g8n5XsiH1B6iQS6fz/
/P/sBPaC1YFx9rHpW3RIJAo2yMg7Pcm/waob0Zt91Sk431ibRCYfBpeC5Jkq
TQpmP71gqkWOhXVS8dCpRRQ8ascN+2yaAuNPc5exCArKvoZc/mCaAV27T61X
MSio3TvEnDAtAsEaojJrDwW7n9Zwx0eLwN1yyNPVjYLFhcL6d/eLwZhbPazh
QUHXKFf/MacS0DEyfBPjQ8Gri6quKoPL4PrrqZwkDgUNrzepT3aVQyav+Jbl
SQrminIi35lWwuil/+gOl1BwWvjQrD+1ElybDu6BexTcGtwi75iphB8rQgTZ
f1FwXOOze5WsCnK1qv7BqaLgBjvXjSn8x6Dup3jEbKKgtGxOnfn+CXQ+DPaP
VFDwlMjCZbV/PWB7YZE9mYq371cw7lypB+bIR4+VNCp2CB016OJ6EHzs/GMh
i4q0YK/Hy20bQGyrlCisqSjSSLYiEc+BGVvc8hKouNSu17CtsRECuS3vrh6k
4t2ylN6jViKIX6NiNBRQccxwLNUlQAS0M54cVREVmcdc7FmXRaA0jCWb36Xi
zU26ufIZEZhWLPox/xEV05tTOd7PW6DngyRA/IKKx+Rpk9t8W+GvbC/5zBgV
c3Rbkgy2SOFtgqJnaC0N7e3ifE/7SaGzRPS42JaGfeHm697HSEHybCI9xp6G
yzvOj4iLpWDkPsskO9PwknDn9nP67VCyJMuv1IeGSXTJ4vnedvjoHLq9OomG
wdCeMR4lA3lY9e9PumhIyvtU1XteBn3XwioM3tBQqGncJ8qXweyO/jWHh2jY
1MwxKeqUwYHUX/qYEzRk7Z/LC9r4EprUJncp1Ok4GsIseav2CvL906W+1nQM
TT9ZKxV0QsXYeVZQKh3VVXn9T4o6ocZVWzsonY6Znk2ksrpOKNURp4YK6Sgy
JpwuTHeCdgP7Oi+fjuZ/3n6x3asLCqUrrDVq6DheLZPWmXbD/ORFO4P3dAwf
XiV/cLcH2F6JLzM8GTjg17PwWXMPbAkP7FX6MdCt+5xVq6IHwlSwxI7DwA0t
ytjhn17D0ChJ/1s0AzXuF+gv5b+GhgOx07J0BgrjV9rH+PdCpstjGGxj4DPC
KMNW/w10pTj/kbGbiTork5n9GwaAfjhMnMBhYdOmS9YJWwag61Bh4YoIFvK8
bqxfsW8AJiwW1dTHsFBd8O9tPkcGwK9Hq5SewsLZ7+PBXdkD0B74nuRQwsJ3
fe6329QHQTN95f3uKRaKhcxVT8WDYFU4/bng3Cq8qN9ilntQDrOVo1t5zWZY
uX7FQ9dwOdSq58ZPvTRDhV8EzMXJwfFJ+dbQATP8tZTY73lNDpy0m8XRn81w
dLvvyR8kchgN71r7jW6OTkkTbbG/KsDdweHoYLI5flEt4e5bOgxjypNrlrlY
ILt3/xMN8Qg09R3k209Zok7WYFhkzwgkdq8PmyZZYbl3uHH/yAiEc6vKHiy2
Qo3X/NgqNSU4tCX47jezwvzuqjWR65UQU7SqXZ9thSOvyLff5inB23LdwkSZ
FYZKxwWVsaMgNr7wKLDWGiOfJ7MjmGPgMt1Ydum1Dd7/Xc9t+fYJsO+QlGZN
/IK5cUfGbDw/QKPw+OBI2jpMzJnbOz0+CTamUaXVhzcgSTaAj09MQVh/XHFu
5q/IiOYc32+mgpNKO1vRvwAVqmseujWf4Iakft/zbgd0GQ49mR75BRwLXTfn
+29GV4XA3MRkFsIUIxrNjG04Vs8+3VT6FQ4POSl6tFzQyqBzhZP/N7i8gXS3
hrsLdUAV0Df1HbzX8Hdjwh7cNuH9meJOQpqR+5tPV/Zhd12gmreFGrotmnq2
69V+fHiuwY+sUsPZsW1fycaeyNHiDkgk6ogb/5RHNf2Gh6LiHuplaqBP3+Da
Kyd80TrYXLIzQBPXHuuu0drrj22GFrpcWy2cPyaIOLU7AKvvJmZZaCzAWPtD
uX6f2BinZrZH/GYBfpn7ejx6IBB1+k44hz/QRnvWh5tdQxwcLlx5OSd+IXrM
l/B2DIbgZZaRZqX7IszmLNvGtjyCgkzOiwCyDlrfrE+r+2cYel8+INFT6qB+
sJZQIYnAL5sLZnJqddG0tez8JodIlA87Hq/j62GB1L2o/koU5tmt/rk14Ad8
caKpe+anaCw9yzUItlyMWlf37H6awUW++6EdGqrFeM/ArPMGNQbX9eUW8VuX
YLJrjo+N4jgKV2WVtu7Qx1aTxTm+WSfw1NMLwh2V+pixiVy3+mI87vrZvUBE
M0D9ltn1pWkJ6BD+wscgxQBjyo3B2vE05hizaWKVATorKMWPD5xBWv2fV119
DJHhHBRpGJWIAss6s45aQ7zUpq62LDUJOVOa7c1mBHKP2nQ2iJKRff8jOSWN
QObhetkuEg+PJrrNuVwisPRZnVqbFg+5bg+69P4gULuw3GSvLg/PqbgXBVcJ
dI55SPdaysO7tjNfr2UTWP39dGikBQ9nns13Ft4hsKPi24DUi4eCDr0LDS8I
TON9X7K5nIeZt8JCeM0EzjrGO8kreHgrWuLk3EKg5l/ckKQaHj5aKphtkRA4
Y2jJb2ziYZ83ESJ7ReAvV5RGXv08ZMqNnIbkBO6p/K3wth4fbR6cMMkfJnDh
WeOvHoZ83Hi2dyZISeAO4U3HBcv5uJOZfe/vMQLdZ+2Kg6l8jDpCNpmcJDA0
Qvvtuo18jN90ZqZ8ikDGxsUt74CPZ38YehmtItBjaeydvC18FJbdOv/lC4Em
IeKtxF4+5p3WDK6aJdBG8Eat1YOPd/YGOcbPEXjPKv8e35ePDyiNK+y/E9h/
fa2bE5uPtVOMmfl5Aklrb/09H8zH/wKNMwvr
          "]]}, 
        Annotation[#, "Charting`Private`Tag$2624#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
DzpalbQ=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$2624#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 5}, {0., 748.9999573469395}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellLabel->"Out[26]=",ExpressionUUID->"38f9e3f4-60a2-495e-ae94-f0cdfee3ab50"]
}, Open  ]],

Cell[TextData[{
 "Setting the ",
 StyleBox[ButtonBox["PlotLegends",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/PlotLegends"], "FunctionLink"],
 " option to \[OpenCurlyDoubleQuote]Expressions\[CloseCurlyDoubleQuote] is \
much more descriptive, showing the expression that is being graphed."
}], "Text",ExpressionUUID->"42e8d2a7-7e22-47a9-8ad0-8b40d3b5bae5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"f1", ",", "g1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "5"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellLabel->"In[27]:=",ExpressionUUID->"d90fe0fe-0a37-4918-9f0e-3344236b685a"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
fa2bE5uPtVOMmfl5Aklrb/09H8zH/wKNMwvr
          "]]}, 
        Annotation[#, "Charting`Private`Tag$2781#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
DzpalbQ=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$2781#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 5}, {0., 748.9999573469395}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"f1", "g1"}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellLabel->"Out[27]=",ExpressionUUID->"2aa32f07-cd43-4e1d-9f5c-27afadda56e0"]
}, Open  ]],

Cell["\<\
Finally, you can specify your own labels by assigning the option to a list \
containing expressions that identify the functions.\
\>", "Text",ExpressionUUID->"3b061ce6-b634-42ab-858f-a8fc77ea152d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"f1", ",", "g1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "5"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<f\>\"", ",", "\"\<g\>\""}], "}"}]}]}], "]"}]], "Input",
 CellLabel->"In[28]:=",ExpressionUUID->"7c03bd33-ffd9-4058-8db5-9cfaf7ea43e2"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
fa2bE5uPtVOMmfl5Aklrb/09H8zH/wKNMwvr
          "]]}, 
        Annotation[#, "Charting`Private`Tag$2856#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
DzpalbQ=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$2856#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 5}, {0., 748.9999573469395}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"f\"", "\"g\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellLabel->"Out[28]=",ExpressionUUID->"912bfac5-2432-4f04-93ee-4fdcb31b06e1"]
}, Open  ]],

Cell[TextData[{
 "There are other possible values for the ",
 StyleBox[ButtonBox["PlotLegends",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/PlotLegends"], "FunctionLink"],
 " option to influence the placement of the legend. It also has more general \
functions, particularly ",
 StyleBox[ButtonBox["LineLegend",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/LineLegend"], "FunctionLink"],
 ", that gives you the ability to completely customize the content and format \
of the legend."
}], "Text",ExpressionUUID->"8781d043-0957-41d6-916b-4542930ea57d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Finding Values for ",
 Cell[BoxData[
  FormBox["C", TraditionalForm]],ExpressionUUID->
  "6f666c41-f220-4944-9474-e691fe45371b"],
 " and ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]],ExpressionUUID->
  "0a22f98f-25cc-4d00-93c9-c119ba94aefa"]
}], "Subsection",
 CellTags->"Section2b",ExpressionUUID->"e7044e32-ae60-4d67-825c-83cab7a6e359"],

Cell[TextData[{
 "Now, we can start exploring different values of ",
 Cell[BoxData[
  FormBox["C", TraditionalForm]],ExpressionUUID->
  "37453427-6f7b-4137-b3ce-acdca898092a"],
 " for which the equation ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "\[LessEqual]", 
    RowBox[{"C", "\[CenterDot]", 
     RowBox[{"g", "(", "x", ")"}]}]}], TraditionalForm]],ExpressionUUID->
  "d44c9007-2c94-4a50-8a2b-9f24344beb90"],
 " is satisfied. To do this, we just have to multiply ",
 StyleBox["g1", "Code"],
 " by different values. We will choose several values until we see a clear \
crossing. "
}], "Text",ExpressionUUID->"6d53eab1-b007-4b61-8db4-09d82fc64362"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"f1", ",", 
     RowBox[{"2", "*", "g1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "5"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<f(x)\>\"", ",", "\"\<2g(x)\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellLabel->"In[29]:=",ExpressionUUID->"20ead970-cc7b-43ca-b730-bbfff2e7e2ce"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
fa2bE5uPtVOMmfl5Aklrb/09H8zH/wKNMwvr
          "]]}, 
        Annotation[#, "Charting`Private`Tag$2933#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
a5hR
          "]]}, 
        Annotation[#, "Charting`Private`Tag$2933#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 5}, {0., 748.9999573469395}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"f(x)\"", "\"2g(x)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellLabel->"Out[29]=",ExpressionUUID->"7fde38af-3de3-4499-8d76-acc42b9a3c4b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"f1", ",", 
     RowBox[{"4", "*", "g1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "5"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<f(x)\>\"", ",", "\"\<4g(x)\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellLabel->"In[30]:=",ExpressionUUID->"51ff2003-26b0-4fb5-a82d-10e9a2febcf4"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
fa2bE5uPtVOMmfl5Aklrb/09H8zH/wKNMwvr
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3011#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
jWLAYFucFictYX9d0SGXPQa35iX/3mo6kmrJfIlLaQIRLck8/B5bSHUYxS5Z
awLXXtFkqidtIUMlO6JOG01gNuvE5piqLWQHt+jYLecJtEzzMMSwMZCnX+Vd
v2ZMYEdR7B7+cAaixeH82VxwEn8VM8JEchjJyucZSsHqJFoSGE4UM7GQGHuL
UUntaVjrCivvZ2InkkUMSx5Xp+HKmJfAzMdOiugSN/28MY0CmzOWK4fYSa/3
AL+35TRu1XPr0OmyE97oq9q/vaYhU8os0/ienYSVnC+JyZ9GP/8mbV11DhLA
IhXJITiDl6erplXjKMQlau3C/PgMosHItubMSaiaekn+ozko3JtOs/y5kwjf
N7HVEFvA5M5vlwqfCpKBhRAtpoI/uLLL5qn6H2GiPGjuGGC1hLi3A/fuuksQ
tQE/cV7eFVDL8c6NGh8ko98MH1ckr8JTpGxYPUOK7Gf/sUtO/y/eKXwYXyuU
IYxYMOiaW8e2bAHu6IUT5OyEzqKgJhVRKaLT+0p3irQVG1HrSFATwZHszYUV
ciTDs+Qa/wI1CW+xaqqLVCAmm2x6a2tpSNAWH9H1NSVyw9o+gzmMljwWHHno
a3GOHDAVr1U1oCOrOyUdb3qqkzoOCSabo5tIg1ZhmO+HiyTvo8trCVp6kn49
qIa6RYPYU4upV3fTk4O3TAV26GgTxq5HinfSN5MxKr5VCp0OGYwXCIxy2EI4
9vrcOJisRwL3ctPlaDIQ0RM4G1+sT/zCTMoN+BmJplFQvJW5AdEJvFrLPMxI
5FWOVSTQ3iBLZ+KWowqZCB/z0yWpTiPSP3jattiDmZxVYNpZkmxCYk8e5Kkx
YCGS+okaN0tvkmQ3G3bTfaxEta1b5dYPc+KheUOFdoGVMB3894+WbpEjXTFJ
HjVbSaZkg6qb2V0SKvo6uUaFjezMWNkeN2xJnIu8Q1Vy2IjDvnZvM3lrco5H
M65SiJ34+QjkJX68R07dKddl92InSuLdY6tbbUjUTkOh6gV2svXsGuOVmAdE
6FtCsJouB9HLSQsKFbUlfvuKxRoLOYghdU7ldK4dMZmja/guRiFCXxSjwp/Y
E8PUWX4vXwqp3xLkeuGEI7nlcmlN2Z9CqNoOqx0+40hsLqW3Mr+kkBCmq66c
qo7Ec8HGxy+YQmQ66/f16TqSj0eXV0MiKEQ1t8bdw96RLH/d+BH/nkLu3nxl
zJXnSPwamb1LyikkmfF6rspxJxL25vZN9+//eKzXt+vKOZE392vlFKso5LX6
Wo+FihPJ5PRbqaqlEKOK54X+uk6kS4dys6mFQoqFg9Mm7Z2ISD+33K/+f/u+
Lc8m8p2IZPoj3reDFEJ3tauHUupEjrl1LhsPU8i4hueb4zVORFUkIuX3KIUU
rl9w9u12ItYW/LwzMxSS0Xb8qeK6E3E48WQ5bY5CqoJXrz+idyZuLL+a7y9Q
yMMFo0/JrM4k9NOb50tLFNJUlxnDxedMYh/TmeauUMh2s155dRFn8v6C8WmH
NQrh6jmi53XAmaQLlu2SXaeQxILWgW/SzqRwTnh5Y4NCgoOHfm7AmfwfWz6V
8w==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3011#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 5}, {0., 748.9999573469395}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"f(x)\"", "\"4g(x)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellLabel->"Out[30]=",ExpressionUUID->"7e5a96c1-ab28-4330-ba74-075d82bf7f52"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"f1", ",", 
     RowBox[{"6", "*", "g1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "5"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<f(x)\>\"", ",", "\"\<6g(x)\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellLabel->"In[31]:=",ExpressionUUID->"0a008915-4564-4b57-b556-f39119dd403a"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
fa2bE5uPtVOMmfl5Aklrb/09H8zH/wKNMwvr
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3088#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVVnc4Ff7/xTUKWbdPP2RcfUQomWXe17ukMpKPRCE7q0JK9gyXSkmykhVy
cbNlJXvvPbP3tbJXvv3+OM/595zznOc8h8/UTushFQUFxe5f/D9/9jSlFTd3
w9/01zOt5SyTr+7Cqevi7oOVXNRoioIu/qi27CUOZw2XfnhOMikQ8EyhBVn0
/Q6gWU7o8In+gv9cHsxLg3MBRGszUyn/HX9+xfztkaUXjM+letzKqsWPMMX+
OejzhbgcPaxudBeeP+X4pb19f2DhIXrP4EbxjxUdn2zzBoFhM/dcjPwsPrd7
LGlD6Q3w+0w6XHi1it97pD68ZvkOJljo2i5mbeHjKYeDtpXfw0Rwf/E3iT/4
ay3vz271hYK2s37elWgMzEXeqNiwDoP+SG9/JfIxeGN+aLC+/xGK+RlsGnDM
ICaWu7MWHAE86h8P4/ix0LVvFbbKGwUNl+nmg+T/D17U8YitZEeDN3a9qn/k
NHB+6G5aUoqBPA3nJ3yvcFBm+MqS3PMZWhvUFH8++xdMhRFm0TIOuAZ/buOy
BIBq37Vtwz0eMgxxVQlKwtA9dpd7QzkBwi8V1cRIiEJKrdijdaZEcMAthhYg
cXDOYCj63ZcIWt/GqS9HS4Jq6Azt7/gv8FxqRu1Q8BJwOVdor1kngWkiz/4l
sgwsP4hJXJVIhrjZrGTWeXkoV3JaXdlPhoL1yl/FOIBQIS38SnUKsOv/4MpS
vQLmzBfeLAd/BRVmr6QIfiWgG5oQXOIlQlibl7W3/A3oL//hSJ4jgkzTlGym
qwqkpURWLWanwYTzPn3riBpoOGgYLShlAHGq2ub0K03A3RMizTOSoI2EFe/b
+A9+K1Lvz/WQwBvGXxU+uwPhx4vDZy0zgS6D5w1Hlg7kOak6PGPPgkRPvsNM
23sQs3CZY909C1SPN4RFKemBbTub5W/lbDC8dL7pg4Qh6CpRMDmkZcN1qx9R
IwLGgAqW8taYcuDc8ca0bGQCbDH1VGt9OcCJFyCJR5vBPlMB0V4hF45pAMZ6
0BymfL5orsbnQhCx3Wtb0AIKLD1jV6zz4EhuJV+MbAVxg4+U7VrzoJes3G1h
ZgOBt+6TlyXygXri6wT9/CPQk5SSW97PB563uKhcnB0opfCNPzEuAGdjiq4E
a3s4z8EcuFRdAI8j4FKG6lP482e+hxz8HYYHNpw+8D+DhMa4p4u8RUBx8gfR
Td4JNiLzhUffFEGadiLxl60zXLdsmuzcLYKFMN776RkuQMZs3y3uKgaFvgtm
kjfdAToZmb+hEqgunnp9I8UDQuPP1CeQSuCXsReFE7MXyChqyAURSmF0qCeP
TOkDrxnM1903SuEoSTw8p84Hfg24ZNib/IApseRFww++4PcimeeefBk4OOyW
Vyn4QXvmAZXgyk+grzMqFBkkABscNzwhWg7Edt+R0I5AkBcIkyOYl8Mfo+PY
0LYgeLtBXHftKAedNQuP7NHXIPW+56FpegX4+V3atRcKAUNn46vD4xVgkz8Y
W1IeAgSjRR4d9kpIedXLma7/HgYvUPar+FfCLNvcQVJMKHg1nlcVN6qCtIvb
cvLqHyE1+7tA+scq8GAfMZ+kDIfOyKuYs81VIEBAkkEl4cBvea+UXbYa0mZC
+ffkIqER4ydKga2BMqUF4dRHn2BjgYnBVaUGDFeR6vOrMcDdGTW77lUD16jl
h8O5P4N9fGb8LLkGKrXO/2QYj4VTikNsbbW1UMN8jbipkQCI32Ll5mEtTN0C
smZzAlgzrDVVStaBhVhcG0Y9EUoHaP0L4utgR+9UeoDWFzB9IbH92bUepkKS
uGPck+FbZtDQY9FGiO/WujyukgYLbAtvVE0aIedET/m1qTQQfKGKPxfWCBxN
JFEKn3SIV2BImNxthN4r8o0hFRkQ2vDGQq+mCWjPZftFGGXCi8l3azcMWkD2
ndiHiKAcyLm+mnj2XQvw3tb+GLGQAytETW1MZQsIX9TOnFXPBSt71u9lgq2A
I2hL+fyTB3qHoe7S661w6vSt6v6CfIhjaHrJqtwOZVsNDCcVigCv6GbgbdgO
kbKGKfy5RTBsKyK94tQOQa5enkSRYmDvfD3TnNYOcqI9q+x8JfA+Ul0lkKUD
dMYreVu5f8DLs61MR0Md8KdZaEg5qxzO6HrOPtnsgAxeycTt7XIoDxQtH2bq
BBPjoWhHVAEHi2+fFl/pBGJdWfJgVwU45tzudvzaCeSVpkor6iqwhI4oskMX
0BX18IUG1wBF4lbx0OsuOE/16ev4WA1EUnMNNyZ1Qb7BVgOtdC3UN1jwEHu7
4NGhhUDvaC2c0z5IfCjXDRprmwxfoR7mrAQzflH2gGbl3vbRuSbwblJvaeHs
gRfx56iEXjUBu6jDcqlkD2Q9acqSITfBzfVSsU8Pe6D2jaUiS24zED208nUb
euDZ+M/xH2qtYBPqUdYe0gvHfUMmKHragWozcfQnsRe2Ujut6E90QLRuPUVm
ZS9cLcDXvFPugEYurFLwRi+QjEL4WAo7QORrap3KvT6oXTnQ2Er867ukq72S
tx/iT2Lz2kK6wXZaaDLv2wDYLK8b2bf3w5jhwLGKhgF4e1iAhHgH4E5/oGjL
1ACUDl5aI9gO/N3pWZdpzkHgiWJ2kWUeBEx2MsspwiDE6EcIed8bgkh3PryT
0RBIJL2XlWL4BRVYjihZlhGo0R6VOdgbB6ng+jJlkRGQorHjMbwwASm0zlP/
XR8BGz/LRm7jCXiz23vRxn0EBBXMO77XToDOaFht9NwIZKQr8xhHTsJCGsvG
fvkvUDV52tByaxro+fwER2XGoGAgB+uJmYd6hfcXPZXHgBwb9PMEfh4C7sVe
5tYag0+SjK93nOeBKqTwhv6jMYgsav00tjIPe3/Iln2fx8CmxNCIamIBFofv
prZRjYNBts6Nxj4yNEcKCpU3j8NwLEaM5L8Kr/KkxI0GxkGAmOuymLoKN9uv
yP6ZHofNO3xl+s2rUE1noKJwNA6XfUOrO7FrUPoixLpQfAKoMLrJPMlrQNLe
JWaFT4D4l7JE9Y7f8JalSTjBeBLcGgpXdjQ3oegyd76G7ST00+94K3huwpSh
HRy4TQIm+PvOz/RNkCdhtXUjJiFk58ttAt0WzKkYeJxonYTBpbQArsotUHq5
1OYiPwVRBtKOgUo7sLPJ7Kh1ahp4kg0kEpz34V9u06Ojf6cBtSsVy3zbB41r
eUEk8WkwMWWp/2dqH5JD78Ue+5urpfF1oQTNA9C6mFBX9nIa5q7FLlFeOASS
lQSnyNo0MJdUDLCt/wHTIe2fmOYZkBnaf9urR4noP40/eTowA/zbt35+cKFE
OXq2XKMzM3D/mqKAYyQlwgwSXIopZ8E+7ORSUi8lSuovlnx6eRYodoJzirWp
0EwPLvVX4iyESSyWdOhikE07OaTIZQ48k1Qrr7rSILYQFxAkzAFG7TZV1mca
VHybdjksbA4eiO/xXaugQQxtvGr2mXNgPWp2d/wYLcpo0aIRnJ4DP5Lt2FoU
LVpuLHQJ05yHfKcEAc8qOvS0xs/UTnABNn6/eNIvRY94pq7TbkkuAONpYup7
PXrURHU8zR0twFWN07R23vToLApeC7q/AIaf+h6HN9OjgeKP3kmvF8BFWqcl
yoIBXclKiR1YWYDe0NhtnwRGxPqpflCpcBHq8ZuDmpLMKNue8Q67yhJcMq48
ee8hG2qOxrqQdJaAdt0n8MCTDc1Uc8ZdNV+CraAnNYWRbIiTQ2jxsdcSxG90
1zo3syG/CuWXFflLcJJFjotdGot02Lxybc4s/91XurwR+pNoL3cN+2N/GcYU
6Ugd9f+gBLdHC2K6qyASJGtXE8KBxMqP7xAe/O3pu8j90G8cqJw6lWbUbBVi
sixSnZo50FjwFC7YfhUSCwUIAcc4EU/8A935oFXoFsRql/hwoujq29UJpaug
nU2gCnI+jUJPSMWynVmD4Ukx63UnbuQbd/DfBnkNCjPpGA9HcYiiawyVuq7D
cx2pgLCvZ5HAcwtnbeFNeJie5MFdJ4KmNiN0GH5sAaZX16xURhypTtt4hD7d
AXe3xfAuc2mkMRUiwsOzB77mpMdj7HJoocrUu560D+ryRP1dZkCirL3cSkaH
QCHtk6347iqih02T4b+9ZFYdYJMpVEY3lvS2z9ylQPY4OvozBBXUX2lOqXee
EkkafGTgJt1C+YHVhrhNSiRt/PHX6W1NZEHjONbaSoXsA4TjyjzuIDMHt3zG
aAwa41iOSmfRQRctRVrVTaiRs0h9SUzzPdTGdp7BUZYGyflyW/VRGaCSb76f
zmNoEROrcZ4vGCE3SmHN5hFadPb9iagPL00Q/bDrTds8OpSFdA+YXpqh6RS+
sDj3Y4gpNo1+2uchCjvHQV109zjifWKXf9BhiUKiLepMcPTI+9SYSxqvDdIL
e9DKOEuP5ux1M9z8H6Oda8m7cWUMSJSt9nnbTTs0OX3VuZLAiPKfH/vnDtVT
lKgofrrF5AQyv+EJTGEOiOTvyGp5gQnJms7IdOCeI8JdMzXMJhOq5//7j4od
kfRwApHQwowCp2J2/33nhCKFPpFa1FhQGvNOvJO+C/IqD45UK2JBctU12jxW
bujW6bvJjfysqP9uDvuhvwe6YlunzxrEipbLm8Z3I7xQHJcpf/MmK1KTVqyn
2vVG/FVfwzX02RANw3V7CV5fFHKhUrizjA3RV9BHSqm/RBbr1B0Nwlik/+6F
k3SCHzLN/o0LeodFMbWZZxSX/NFj3zsHqu+xiGIixVVg3R853snrY/yARdn1
/hMsu/4ocNPxbUg4FtkkGUzMUQegb7K7+xGfsahIjTM5mSsA7VYc9aakY9Ed
Jkl1LfUAFNLJGFxdh0VUx+qbnDMCUPSXJ1YBDVjExXBM0y8nAH153qp0swmL
nisozoYUBqCCUyF7Ta1YpNY7p0GqDkDDelirrh4sYvu8SrM+HIAEJzmUJiax
6IMI7lzOCQISy3PlSZrGoirls7OtWAKS8x/afTj7Vy+kFJM5CEhd8HPW/AIW
MXl5xIn8PZ0Oj3A8a2tYFDhx3qwAT0DuCj67OetYxJ5dWj90jYD8T0x0P9/E
Io7C10pUagQUmfnl9c4OFv06reKipUtAid7UlsV7WNSuYSXl/oCA0v97eNX9
AItCLc7RfDUjoLwztdz4P1iEb01Y7LQmoLJ1gd2jIyxaXSXPHtkR0P8AcqWN
yQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3088#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 5}, {0., 749.9999540816334}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"f(x)\"", "\"6g(x)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellLabel->"Out[31]=",ExpressionUUID->"f31f732a-d801-4502-acdd-367bbcee7030"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"f1", ",", 
     RowBox[{"7", "*", "g1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "5"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<f(x)\>\"", ",", "\"\<7g(x)\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellLabel->"In[32]:=",ExpressionUUID->"d7426008-7db5-4ef8-ac01-e6172f49e560"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
fa2bE5uPtVOMmfl5Aklrb/09H8zH/wKNMwvr
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3165#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
/wAMEYyE
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3165#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 5}, {0., 874.9999464285723}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"f(x)\"", "\"7g(x)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellLabel->"Out[32]=",ExpressionUUID->"d9c7b51c-fce9-47f7-9182-11d06f9047f6"]
}, Open  ]],

Cell[TextData[{
 "By expanding the range of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "171902bb-1c8a-4520-b24f-7e5273ef73c4"],
 " values, we can obtain a graph that provides fairly convincing evidence \
that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"C", "=", "7"}], TraditionalForm]],ExpressionUUID->
  "89ee227f-f768-48f9-8e05-7840c716f714"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", "=", "3"}], TraditionalForm]],ExpressionUUID->
  "858c6a8f-0f42-4f52-84d4-59f1b0003d6d"],
 " witness for the assertion that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", "x", ")"}], TraditionalForm]],ExpressionUUID->
  "c9f39319-f2eb-44d8-a720-970a4edcebf4"],
 " is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"O", "(", 
    SuperscriptBox["x", "3"], ")"}], TraditionalForm]],ExpressionUUID->
  "0fe994ae-a938-48a3-b2bc-6858e9311c67"],
 "."
}], "Text",ExpressionUUID->"35ba3c76-0918-493c-8c7e-6a07c1f8939d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"f1", ",", 
     RowBox[{"7", "*", "g1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "20"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<f(x)\>\"", ",", "\"\<7g(x)\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellLabel->"In[33]:=",ExpressionUUID->"d6efcc88-0c8f-42af-a3d7-3162a3906517"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
8knVuaUlClUpXiNZrlz8D9O+tww=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3242#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVlmc4FQwfxu1kZTwJGYeMbDr1aOD/zwyFlEQiJ7uSiJCiZD2l5KE0bBlF
MosHIWQTCRnZ4xz7ONm8vR/u6/5yf/xd1+8WJ103c2Cgo6Nb/ZP/d9xdEouq
/SvNv/ax2cc/EVev7iCctCD4QotbP5OA8H+a27XlQQRCOHzu4ytw3EvR5Ioq
+sDWHQWs7PX10wMsEFcRIcZMeAFGO75xcO3dCwpz9o+3nRLAumTOycpHDvq5
4rc2upLBvm2KUjLwN0im7fx7bf0NHNz46BWyXwuuanhdWxbLBEFBn+IhISPI
/z6YuqSdBW/5Cz78MjoDa1dO9i045UDev/21aj5WkEjfF76smwtumxnPI+Ps
QKf5qdTvrjz4ZLd7M2nAESZj9SuXXArgdF7F3lS+a/DIftOaul4IVzt773jt
9wAVlfyVhYiP4BMUZOZg7g0d687R82LFsLuy/0mj0G3w/iqqMpdbAmzeK8Iu
xwNB6N/vjTPapbA/1+7tN6MgKLf5x2m6swxqKhQ9CnJDgCSHjBSnz9DUYest
7fMPMKz7tS75V4Co4Pon9dTH8H3QXGRJtxK6belFQ+KeQlqtyhUqVxUor5fS
dRKiwSeLvXixqwrYfucGxww8A8OocZbFxC/QPzGkaNbzAoR9Ks8uuFSDiLOx
XwxfHMxefJ08f6AGREI3aEv6iVChfWt+br0GOj8t0F/bnwxRsmaac9W1sBgd
Ku6jkAr2uxQfzUZ8BbkJzZgL5mmwo3dYZkasHrqFd9+uEHoH3RVlXtOT9VD5
/JBbU3E2vE2L/ULJbYCeC2W9pOMfwNjD2Jas3QQ1bMfSG4zygXBeNnuKoxk8
aM+41hcLYFGDaX2ysxn4G1iSs3KL4NnOkmcTTq2QX7evRcSnBApuGXp4CrSB
c/npdIl7pfCarCZI9W+De4diFImp5eDWxuu0qPsNPoopDwXGVYKFNh2Xx9tv
sGGcF8bQXQVYNFOwwNUOOWzH9VsJ1cD7uo5hoasdRKn0hk8GamGdqyjTXb0D
CoJvKkmdrYPReymm84kd4OXu6WrUUw9FTnfj51y+g5zQc9nHfM2Q8POK7vWW
77CmuXHyVH0LhJ2ynJ490Ald2mpMC/ptYEU8eHR2vRPUMza/OO9vB+008aFr
l37A33vlvSekOkBBcFfYTPUP2ApOiPZU+A5bW1Od0xFd8CMjruic+Q9Iaki4
QRHrgXfTufMlQr2wFFso9+tRD9SSNPZa3usDPafGkfbVHuAJMtEQWeqHacZl
85KOnzDCq2LiGTAI0M6x6z32AvWqbmmm0RBEJUrUJWX3Qtcpwwor0WE4rGF8
NDy0D352Gu+P7hqBh+z2VP+lPvgeM2ppWj4KAz2+We52/WDL9axs9t0YPPB+
I3r+2AD0WvkUHXk9AW05Gwwyc7/gYdn1rP4OCvDCThtOpUEQihfIDlyahmPS
0UdD7Qch4+Uh/k7hWXi8lEn1+zYIdRz+A/5a83DwaacD6d0Q6Oi6NjP2LoKN
zyWtvqEhSO/IfBz8kAqhthTRcwLDUJlkkqCPS/BTkb7bIHgYuPjt/SuKaBDQ
oGCoajsCCxyN1XPdK5CR+1H6XcwIqOtbJA5krUJ7rBajVNMIMFC9HL2C10DS
6XypwJFRqP1IF9iiswENjA+U6PjGwCbVMfTF5jYskbnY/QzGQO2RqbygPx2K
tL+YoAaMQceeZvOZdTp0T8xJnJgeAz0V5Z96jAzIr9HL21o7DtxlkvOeqkyI
ko5zJzbHYfCnQXn+FyZ0YV9orCJOgPjlUeGc88xY2sMSXJQ4Ad6fdTwW/2FB
kveB5Ti/Sbi0Bc2XeHbi+5zw3qtKZHA49bAi5B0XknnJjwztyPDmaMrDN7a7
UMbbUHN/NBl8i47uRXZuTFRnTxpZJQPv02QC1HJjVP0jR6saCrzPKiUJnOJF
75EnC/rWMyCQ/kk+JHE35unNJ0s9mQET6+HuDzz8OJdpepaxagZY1IaTLj/g
R2d3no/lMrOQFkfiveq2B602o/wPUWdhbsnyqJm5ICawNwbx6M4DkVbBWeUu
gpoat60DbeYhNFag6u26CPa5yR+auzUPhvZQrhsmigLtD8eb3s7DbOGKQFya
GD6NPWkQxr0AHoyhUZwbBAySauHa7l2Au9UfAk777EMJi7sT12gLQE09pvG7
cR9WhClV9HEtgvCrtwfDCZK4QXl8o+T4IsxP5vMHNEmiV57Jd6/0RdCcmYlo
VZZGJ/j2YtqDCsTsFn85KVmkS/5d0vuHo7D7v2KtQ2Qxlkm4ryGVCvuvJlBC
J2Wxrt5RNPMHFTb9mxVac+Rw/9mNZIejSxDywmBEy1ABJ51lsgboaZA/vGrU
maOMgY0nm5uFaKDLOkN5zq2CAkoes6VEGqS99S5tNFDBE9RSlVcONBDllfGt
L1PBzDtmhRb1NFCazfmilKWKrlF3ytsifwPbzGaefAoRGWjJvz5n/gaxGprk
o1EivrSoo8up+g3LsvXcd6QPYoMwn3bE0m8wFOr4xpt1EOXTM74anF+G0j0y
1mLlh3D6v462KrEV4I69kq6/pYZuY7IjBe9X4Rvq1yhS1XHQpoe1sn4VbrfL
eTObaOCZ7jCl5tFV6M10fRH/TgMPN074jgmtQcqBKJKAkyYy5r7h5g9dgyFy
sApOAMb6i2vesl0HEVq0eHjIcazkE3xxhHsTxocttaTXdPBgRF25rvwmlKoo
tMwc1MU0Fp/R03qbIF3jUynhrouPVn8ou/pvgpKe4c0fE7p47ld07cvJTTA4
cXqfe58ekt9yL61XbEGXHtOVmp8nkE38gcyvw3S4vfmmskzpFNapP1W+q0uH
5Y8JbNyepzDkfLyaiBkdDo4fTm76eAoZIj/pX7hCh6Hde9lDtIxxbWvaqSuO
DjeUX1QzXDRBSp95RisDPYpHLW4d6jDFplgZ2YomeqQbfU9K0DuD/xQcVLXt
ocfsl6cvl10/gyfajh/ZGqNH6pB0/u4XZ7B6h7WB+jY9Up6bj3lNn8FS70iX
T6oM2N19lH815ixmn13N/PCMAblcBsqUlszxMXejXNIlRiyJsai6NXAei9VE
Co3dGPH0R+9nenyWOGpzHTZuM6JSa+Cy7QlLPJbNd9biOSNmnIQDnvmWOGlg
fYezhRG/u37VF4+wQu2gmVbfY0yY94xvoN7YGldou7zM+JnR7BI7qw3LJdwn
Qtre3seMfkfM9iRJXUJjnYLwbFVmvHykoIBD9xK+iTofz3qKGSdI5Qw2Dy6h
mXLS1/IgZuwze91AYbLDbOcDQvILzFhvwbLdwElCUu/Zz4xNLFgZ0JZmAvbI
9mro2o0eFtw2VLFVuGyPeVZuwr/GWdDZT9+CGGqPjD9DfUvod2C3xYxLRas9
pnaXEG+o7UC6k6ZtPSQHHO8kZAwk70ALbo0LYk8d0bVtOrLYlxWnPtMfTuFy
Qd5IX5AJZcUHXbkMK2ouWGLCMhsdzYpaoykyfnYuyN4qZuSew4qmygkjLIUu
mNVsxiwzxorXG+R7dWxccbbhk2+06U7MYHe671x8BW/UPCBdl2HDr+6FARtR
big6qsfym8iGRwxrdLbL3bCRYedbf2TDleAGVQWKG0phxEK4JRvO/jL9zqRz
HXtKYgJTH7IhSfPJ9fzl63j8Q1p8zxwbZnTeaHuY7448r+p+an9ix6Xi4gAd
ogfmunOcETDgxCmhwwLq3l7Y9JLPN/scJx7Q00qQjvbC8WqhBC17TlwimI8r
5HmhkKAs5WoAJ5Z4rEw8mvXCB5W6QZWFnLjHeZbw2tkbz/EG5LtKcGF/gk06
A+kWruUv8JWtc+FPj7AlA1dfTLp9haxiwY2shC/0TzvuoErFzpXQi9zoYBYq
de73HaxgymD+dZkb2Vtu6fwteBcHI0YJEe7cWKaQHadvexdFEy9aTIVzo4Ql
/3DO9F18WW1SnVTKjV/9JadNWAIxivNgPK8EDx7/mWuWonIP7ydsnF6a5sGs
ZdbHGzlBSNcxiKV+fNhvH/X6vnY4St909DkrtxtNiw3DpQ9G4ijt+Tn2Mn58
7zvuGbInGg3HXO9E3RBAbm7n4CRaLBqPRsqLigqhFu2m7AWPeCR/IQXWZe/F
56TmhjTRZFTi+SGibSuCnWX8JiLpb5ANaHZ9VFHkvbe5e/pcJurPWC1LmP/x
himrnVldNnZX2dNbKYijaGOlXppJLhaGVdsQaOI4+ZKxh9aQj47MXoMtLRJ4
X9/a3qasCC973C7keLkPVUQpYSLlxajsJN9y0k4SPx74q7dothRbeRXYvY5I
4fJDx/TNcxX43/v7rxQYpTG+YPhfu6NVeJtezrSpXxrf3T3a/8OtGtn6/E64
FchgC+G/20+/1OJYmnh0gv9+5L4srPZwTz1G7xdkKjaXxdSzFndPNzRi5EvH
r3YEOYy5Hjyi59eCVtEXWzgm5LCPnth6IKUNV3TerCaUy+OrfzwtW6AdR8a0
fKpCFfBuf3gse3cHJmuo7m22U0TDM3yG/2V1YnawF4+TohJqiZCq4m93Yaj5
ZSNGmhKS5f78I8sePNSXlBnarIwJbGopZ/17MVb2VXazkQoulHqPX4rpx4CK
iFijYhV8sUv9k8/qLzy11/xNg6QqlluXpXQcHsLjbl8v8ISr4mCwndvGtWFM
ECZJNtFUUbH89ZRi8whKfkl/ZnzhAKqQNu47SI5hpGKVXHv5Afx7yC43Kmgc
HalM3+rliIjptuwuPJNIyl0khD8hYpGTxJmv0VN49f6ZDcOnRKS7eG0069UU
ep0p6OL4l4iSrgt5/yZPYRjN63HkMyJ++8zP6vBhCt8fWV1/HvfHm4xLMfxN
U7hauf0j7R0R7Y6Nny9kJGNkO0dE9VciWuz8S3vYk4wvU645h9QT8TdHQd6c
HxlTbrZon2gkYlit8OWte2Qs4o9ca2wh4nmTkhCxSDL2WfE5d3QSkWyn3eee
RUaZEUHt4REi3uv36zEZI6NKgZ9o6hgR7b/RXb4xTcajwb2rDhNENDbcoxxN
JeNJmbgPU2Qijpc7Pemnp6DHFYLowgIR4y8WeAaIUtBf/d5qHpWIi/v6/non
RcFgzuHvN2lErDvns9qlQMHYnJSHKytE7KEFRBw6RsHkQCankrU/+wuSGo5a
FHx32kHLf4OI5hI5KrEGFCyQqBXR3CIitUbdudGUguVU6dXtbSJ++TI1sm1B
wf8BkeJ0mQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3242#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 20}, {0., 55999.99657142863}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"f(x)\"", "\"7g(x)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellLabel->"Out[33]=",ExpressionUUID->"3c668aa9-4611-425f-9ffa-362e92eb8bab"]
}, Open  ]],

Cell[TextData[{
 "It is important to note that the graph above is not proof that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"5", 
     SuperscriptBox["x", "3"]}], "+", 
    RowBox[{"4", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"3", "x"}], "+", "9"}], TraditionalForm]],ExpressionUUID->
  "c254eafe-37dc-4752-ac10-d78603d5b60e"],
 " is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"O", "(", 
    SuperscriptBox["x", "3"], ")"}], TraditionalForm]],ExpressionUUID->
  "344741b4-6831-45ae-afad-74c28b95dfea"],
 ". A formal proof must follow the model provided by the examples in the text."
}], "Text",ExpressionUUID->"de36f7a5-dd98-452f-a712-353473468f0f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["A Second Example", "Subsection",
 CellTags->"Section2c",ExpressionUUID->"64e0c4c7-62c1-4d8b-8d12-c325f7e06953"],

Cell[TextData[{
 "As a second example, consider ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     RowBox[{"3", 
      SuperscriptBox["x", "5"]}], "+", 
     RowBox[{
      SuperscriptBox["x", "3"], 
      RowBox[{"ln", "(", 
       RowBox[{
        SuperscriptBox["x", "2"], "+", 
        RowBox[{"2", "x"}], "+", "1"}], ")"}]}]}]}], TraditionalForm]],
  ExpressionUUID->"f2d8a7cb-8e84-45e2-82bb-4fb48f94bdb0"],
 ". We claim that this is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"O", "(", 
    SuperscriptBox["x", "n"], ")"}], TraditionalForm]],ExpressionUUID->
  "5d555b37-df95-4d0a-b84a-0ef6693d08a8"],
 " for some value of ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "fb6de233-c119-4314-acb2-25c0adbbf67d"],
 ". We want to first determine the smallest value of ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "a25d7d1e-c1ea-4648-a12c-c2fdd4253347"],
 " and then find witnesses for ",
 Cell[BoxData[
  FormBox["C", TraditionalForm]],ExpressionUUID->
  "2cc24f08-03bf-46c2-ab28-e01eb922f8c9"],
 " and ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]],ExpressionUUID->
  "aa78db4f-e574-45dd-8891-b2d47472ef5c"],
 ". We assign a name for the formula for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", "x", ")"}], TraditionalForm]],ExpressionUUID->
  "c778dab5-fd4e-4c94-b4a9-1c0977f0a104"],
 ". Note that the Wolfram Language function ",
 StyleBox[ButtonBox["Log",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Log"], "FunctionLink"],
 " with one argument computes the natural (base ",
 Cell[BoxData[
  FormBox["e", TraditionalForm]],ExpressionUUID->
  "e19f3c05-d5b1-4f80-9209-120baccc8fef"],
 ") logarithm of the argument. "
}], "Text",ExpressionUUID->"af5742a2-4b0c-4f51-b0b8-24b679370687"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f2", "=", 
  RowBox[{
   RowBox[{"3", "*", 
    RowBox[{"x", "^", "5"}]}], "+", 
   RowBox[{
    RowBox[{"x", "^", "3"}], "*", 
    RowBox[{"Log", "[", 
     RowBox[{
      RowBox[{"x", "^", "2"}], "+", 
      RowBox[{"2", "*", "x"}], "+", "1"}], "]"}]}]}]}]], "Input",
 InitializationCell->True,
 CellLabel->"In[34]:=",ExpressionUUID->"876de3d6-08e0-47ab-936f-92d8bb3f99ff"],

Cell[BoxData[
 RowBox[{
  RowBox[{"3", " ", 
   SuperscriptBox["x", "5"]}], "+", 
  RowBox[{
   SuperscriptBox["x", "3"], " ", 
   RowBox[{"Log", "[", 
    RowBox[{"1", "+", 
     RowBox[{"2", " ", "x"}], "+", 
     SuperscriptBox["x", "2"]}], "]"}]}]}]], "Output",
 CellLabel->"Out[34]=",ExpressionUUID->"7a7ed895-217f-4c8a-8e34-b58992f0eca3"]
}, Open  ]],

Cell[TextData[{
 "We could proceed as in the previous example and display a selection of \
graphs comparing ",
 StyleBox["f2", "Code"],
 " and ",
 StyleBox["x^n", "Code"],
 " for different exponents in order to find a likely choice of ",
 StyleBox["n", "Code"],
 " and then explore the coefficients. However, the Wolfram Language\
\[CloseCurlyQuote]s ",
 StyleBox[ButtonBox["Manipulate",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Manipulate"], "FunctionLink"],
 " function allows for a more interactive approach. The syntax for a ",
 StyleBox[ButtonBox["Manipulate",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Manipulate"], "FunctionLink"],
 " is very similar to that of ",
 StyleBox[ButtonBox["Table",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Table"], "FunctionLink"],
 ". The first argument is an expression involving one or more variables that \
will be altered by sliders or other controls. The first argument should \
produce the output you want to explore. In this case, the first argument will \
be the ",
 StyleBox[ButtonBox["Plot",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Plot"], "FunctionLink"],
 " function. "
}], "Text",ExpressionUUID->"1e0fc85b-b1c7-42b2-844f-9d3697e7f4bc"],

Cell[TextData[{
 "Following the first argument, we specify the variables that are to be \
manipulated. In this example, we need to modify the exponent ",
 StyleBox["n", "Code"],
 " and the coefficient ",
 StyleBox["c", "Code"],
 ". For the exponent, the variable ",
 StyleBox["n", "Code"],
 " should be allowed to range from 1 to some arbitrary maximum, say 20. \
Additionally, the exponent should be an integer, so we specify a step of 1. \
Thus the range specification for the exponent will be ",
 StyleBox["{n,1,20,1}", "Code"],
 ". Note that, in contrast with ",
 StyleBox[ButtonBox["Table",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Table"], "FunctionLink"],
 " which has a default step of 1, if a ",
 StyleBox[ButtonBox["Manipulate",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Manipulate"], "FunctionLink"],
 " is not provided a specific step value, it defaults to a continuous range \
of values. For the coefficient ",
 StyleBox["c", "Code"],
 ", we will allow it to range from 1 to 30 continuously, making its \
specification ",
 StyleBox["{c,1,30}", "Code"],
 "."
}], "Text",ExpressionUUID->"fcc9453e-c3bd-4221-be5b-0c926aead35f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"f2", ",", 
       RowBox[{"c", "*", 
        RowBox[{"x", "^", "n"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "5"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "10000"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*Cell[\"f(x)\",ExpressionUUID->\"1cdd8a88-7fce-4e22-9daf-\
15bd6fa5047b\"]\)\>\"", ",", "\"\<\!\(\*Cell[TextData[Cell[BoxData[FormBox[
SuperscriptBox[\"Cx\", \"n\"], \
TraditionalForm]],ExpressionUUID->\"928716bd-5299-4e4c-921b-ab235269fdb7\"]],\
ExpressionUUID->\"125277c2-cb46-42e1-b8cb-882394c6076c\"]\)\>\""}], "}"}]}]}],
     "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "20", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", "1", ",", "30"}], "}"}]}], "]"}]], "Input",
 InitializationCell->True,
 CellLabel->"In[35]:=",ExpressionUUID->"343b56ce-b9cf-4c37-9203-148d27e1153f"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`c$$ = 1, $CellContext`n$$ = 1, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], 1, 20, 1}, {
      Hold[$CellContext`c$$], 1, 30}}, Typeset`size$$ = {427., {111., 116.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`n$3304$$ = 0, $CellContext`c$3309$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`c$$ = 1, $CellContext`n$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$3304$$, 0], 
        Hold[$CellContext`c$$, $CellContext`c$3309$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[{$CellContext`f2, $CellContext`c$$ \
$CellContext`x^$CellContext`n$$}, {$CellContext`x, 0, 5}, 
        PlotRange -> {0, 10000}, 
        PlotLegends -> {
         "\!\(\*Cell[\"f(x)\"]\)", 
          "\!\(\*Cell[TextData[Cell[BoxData[FormBox[\nSuperscriptBox[\"Cx\", \
\"n\"], TraditionalForm]]]]]\)"}], 
      "Specifications" :> {{$CellContext`n$$, 1, 20, 1}, {$CellContext`c$$, 1,
          30}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{470., {169., 175.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellLabel->"Out[35]=",ExpressionUUID->"e781a3c2-97ec-4383-965f-f456447cec77"]
}, Open  ]],

Cell[TextData[{
 "Note that the ",
 StyleBox[ButtonBox["PlotRange",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/PlotRange"], "FunctionLink"],
 " option is useful here. Without it, ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " would continually resize the graph depending on the choices for the \
variables."
}], "Text",ExpressionUUID->"c23d3a06-f266-4a78-b814-2313a78aefcc"],

Cell[TextData[{
 "When you first execute the ",
 StyleBox[ButtonBox["Manipulate",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Manipulate"], "FunctionLink"],
 ", you will see only the graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", "x", ")"}], TraditionalForm]],ExpressionUUID->
  "c46c2f90-b1eb-45b4-923b-25f49ce162b4"],
 " since ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "\[CenterDot]", 
    SuperscriptBox["x", "1"]}], TraditionalForm]],ExpressionUUID->
  "3c6e958c-6822-419d-8a68-ed4503282bc8"],
 " is too small and lies along the ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "7cf7e01b-9bc9-4aeb-a957-5e0f95c8fe36"],
 " axis. To inspect the values of ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "431f46ca-25b7-48db-92c9-e14d52e9e1b2"],
 " and ",
 Cell[BoxData[
  FormBox["C", TraditionalForm]],ExpressionUUID->
  "5e484354-e61a-4804-aa72-a82f785358ff"],
 ", you can click on the small plus symbols on the right of the sliders."
}], "Text",ExpressionUUID->"6ceca387-199f-46c8-830c-beb1a9d80daf"],

Cell[TextData[{
 "As you use ",
 StyleBox[ButtonBox["Manipulate",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Manipulate"], "FunctionLink"],
 " to explore this problem, keep in mind that you are searching for the \
smallest ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "7ab94c35-130f-4714-b850-db1fe1e7b118"],
 " for which ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", "x", ")"}], TraditionalForm]],ExpressionUUID->
  "81e691b6-cb01-42a6-81c6-9226466bbc4e"],
 " is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"O", "(", 
    SuperscriptBox["x", "n"], ")"}], TraditionalForm]],ExpressionUUID->
  "497f1786-6486-42a3-b667-161f056a6428"],
 ". Therefore, once you find an ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "03d0a0cc-638d-4075-8d9b-54cd88be1c6c"],
 " and ",
 Cell[BoxData[
  FormBox["C", TraditionalForm]],ExpressionUUID->
  "adbc3227-6243-4a35-82f2-402f99bed42d"],
 " that work, decrease ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "607d5517-9b02-4e22-9d08-961c27fbf779"],
 " and make sure that no smaller ",
 Cell[BoxData[
  FormBox["C", TraditionalForm]],ExpressionUUID->
  "853f6a0c-fccd-4b03-b9ce-3a07c4cb29ab"],
 " will do. You may need to expand the domain to be sure."
}], "Text",ExpressionUUID->"85fee98f-50f1-41ee-af2e-cf17a076d481"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["3.3 Complexity of Algorithms", "Section",
 CellTags->"Section3",ExpressionUUID->"2392ce28-5988-4805-9075-becece410388"],

Cell["\<\
Section 3.3 of the textbook emphasizes worst-case complexity of algorithms \
and shows you how the worst-case complexity can be deductively determined. \
The textbook also mentions average-case complexity and shows how to compute \
the average-case complexity of the linear search algorithm (Example 4). \
\>", "Text",ExpressionUUID->"f266d145-36b4-4ff1-9564-d9c16d23e3ab"],

Cell["\<\
Average-case complexity is typically difficult to analyze deductively, but is \
important. From a practical standpoint, average-case complexity can help \
differentiate algorithms whose worst-case complexities are of the same order. \
Moreover, algorithms that have very poor worst-case complexity may have \
reasonable average-case complexity, provided that the \
\[OpenCurlyDoubleQuote]bad\[CloseCurlyDoubleQuote] inputs that produce the \
worst case are rare.\
\>", "Text",ExpressionUUID->"22435e6b-882c-467f-afde-ea64c6dcf3f5"],

Cell[TextData[{
 "Although average-case complexity is difficult to analyze, average-case ",
 StyleBox["performance",
  FontSlant->"Italic"],
 " can be computed fairly directly. Recall from the introduction to this \
chapter that we distinguish complexity of an algorithm from performance of a \
function. In this section we will see how ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " can be used to analyze average-case performance of functions \
experimentally. We will use the ",
 StyleBox["bubbleSort", "Code"],
 " function developed in Section 3.1 of this manual as an example. Our goal \
will be to produce a graph displaying the empirically determined average-case \
time performance of the procedure. "
}], "Text",ExpressionUUID->"cf3dfc33-6727-4c31-a24a-b753ac16686b"],

Cell["\<\
It is essential to note that performance depends on many factors besides the \
algorithm, including the programming language used. In particular, different \
languages are designed with different purposes, leading to different \
efficiencies. This means, for example, that in comparing two algorithms, it \
is possible that one will outperform the other when implemented in one \
language and the reverse could be true if they are implemented in a different \
language.\
\>", "Text",ExpressionUUID->"a63fe9a1-4970-444e-b601-a986bcf54e20"],

Cell[TextData[{
 "We begin by explaining the standard approach to timing Wolfram Language \
functions. The ",
 StyleBox[ButtonBox["Timing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Timing"], "FunctionLink"],
 " function takes one argument. It evaluates the expression (e.g., a function \
applied to input) and returns a 2-element list consisting of the time (in \
seconds) used and the result of the evaluation."
}], "Text",ExpressionUUID->"e0020eb1-df06-4663-93ec-e6cb0d411616"],

Cell[TextData[{
 "Here is an example of the use of the ",
 StyleBox[ButtonBox["Timing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Timing"], "FunctionLink"],
 " function."
}], "Text",ExpressionUUID->"da7561b2-6c56-46b5-90a5-894b7e6b8b1b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"findMax", "[", 
   RowBox[{"Range", "[", "10000", "]"}], "]"}], "]"}]], "Input",
 CellLabel->"In[36]:=",ExpressionUUID->"73d63f90-a7d1-4a2a-a803-7b53b85ed5ed"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.019288`", ",", "10000"}], "}"}]], "Output",
 CellLabel->"Out[36]=",ExpressionUUID->"cd321677-0cd0-4503-8125-26b8574bddfa"]
}, Open  ]],

Cell[TextData[{
 "Note that, in this example, the reported time includes the time taken by \
the ",
 StyleBox[ButtonBox["Range",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Range"], "FunctionLink"],
 " function to produce the list of integers from ",
 Cell[BoxData[
  FormBox["1", TraditionalForm]],ExpressionUUID->
  "dbcd6449-7b67-489c-8a13-609e16456f08"],
 " to ",
 Cell[BoxData[
  FormBox["10000", TraditionalForm]],ExpressionUUID->
  "36897060-63db-44aa-b81e-085a8ed2c2e1"],
 ". On the other hand, the ",
 StyleBox[ButtonBox["Timing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Timing"], "FunctionLink"],
 " function does not include any time used in generating or formatting \
output. This is negligible in this example, but for functions with lengthy or \
complex output, it is reassuring that this time is not being included."
}], "Text",ExpressionUUID->"f71045e0-812a-4efc-97b9-5936c9d48582"],

Cell[CellGroupData[{

Cell["Average Input", "Subsection",
 CellTags->"Section3a",ExpressionUUID->"2129dbfe-e898-4141-9921-87edd03dd49f"],

Cell["\<\
By average-case performance, we mean the average performance of a function on \
random input selected from all possible inputs of the given size. The \
particulars of how the random input is selected is a necessary component in \
the analysis. It is natural to assume that each possible input will appear \
with the same likelihood as every other, but it is important to recognize \
that this may not always be the case. It may be that, in the circumstances \
under which the algorithm is intended to be used, some inputs may appear with \
relatively higher or lower frequency. \
\>", "Text",ExpressionUUID->"5a173ce6-433a-46b3-bc58-53fe06507d9b"],

Cell[TextData[{
 "For ",
 StyleBox["bubbleSort", "Code"],
 ", we have no particular application in mind and so will assume that all \
inputs are equally likely. In order to generate a random input, we will use \
the ",
 StyleBox[ButtonBox["RandomSample",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/RandomSample"], "FunctionLink"],
 " function applied to the list produced by ",
 StyleBox[ButtonBox["Range",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Range"], "FunctionLink"],
 ". The ",
 StyleBox[ButtonBox["RandomSample",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/RandomSample"], "FunctionLink"],
 " function applied to a list produces a rearrangement of that list. The \
following produces a list of the first five positive integers in random order."
}], "Text",ExpressionUUID->"e5a15c2b-8fa2-4ef9-a48c-a4124cd48fd6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomSample", "[", 
  RowBox[{"Range", "[", "5", "]"}], "]"}]], "Input",
 CellLabel->"In[37]:=",ExpressionUUID->"24da49df-672e-4146-bd97-4c64fe68afa7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "4", ",", "1", ",", "5", ",", "3"}], "}"}]], "Output",
 CellLabel->"Out[37]=",ExpressionUUID->"4c57ff2c-c077-4035-a3f2-5e236524ff4f"]
}, Open  ]],

Cell[TextData[{
 "We can apply the ",
 StyleBox["bubbleSort", "Code"],
 " algorithm directly to the result and time how long it takes to execute. \
Note that we obtain the time, without the output from ",
 StyleBox["bubbleSort", "Code"],
 ", by accessing the first element of the list output by ",
 StyleBox[ButtonBox["Timing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Timing"], "FunctionLink"],
 "."
}], "Text",ExpressionUUID->"aff8f226-e0a5-480e-8478-2fbeeb19adb9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Timing", "[", 
   RowBox[{"bubbleSort", "[", 
    RowBox[{"RandomSample", "[", 
     RowBox[{"Range", "[", "20", "]"}], "]"}], "]"}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellLabel->"In[38]:=",ExpressionUUID->"0ffd9a8f-a001-4f06-9321-0f3b48edc7b4"],

Cell[BoxData["0.001603`"], "Output",
 CellLabel->"Out[38]=",ExpressionUUID->"47e96ec4-1c5b-4cc9-8aba-0ae23e75f615"]
}, Open  ]],

Cell[TextData[{
 "Since we are after average-case performance, we will want to execute ",
 StyleBox["bubbleSort", "Code"],
 " on many, say 100, different random inputs and average the time taken by \
each execution. To collect the 100 times, we can use a ",
 StyleBox[ButtonBox["Do",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Do"], "FunctionLink"],
 " loop to repeatedly execute the function. We use ",
 StyleBox[ButtonBox["Sow",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Sow"], "FunctionLink"],
 " and ",
 StyleBox[ButtonBox["Reap",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Reap"], "FunctionLink"],
 " to build the list of times, with ",
 StyleBox[ButtonBox["Sow",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Sow"], "FunctionLink"],
 " applied to the result of ",
 StyleBox[ButtonBox["Timing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Timing"], "FunctionLink"],
 " and ",
 StyleBox[ButtonBox["Reap",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Reap"], "FunctionLink"],
 " surrounding the loop. Recall that the first entry in the list output by ",
 StyleBox[ButtonBox["Reap",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Reap"], "FunctionLink"],
 " is the output of its argument. Since the argument to ",
 StyleBox[ButtonBox["Reap",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Reap"], "FunctionLink"],
 " is ",
 StyleBox[ButtonBox["Do",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Do"], "FunctionLink"],
 ", which has no output, the first element of the output will be ",
 StyleBox["Null", "Code"],
 ". The second element of the output from ",
 StyleBox[ButtonBox["Reap",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Reap"], "FunctionLink"],
 " is the list of lists sown by ",
 StyleBox[ButtonBox["Sow",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Sow"], "FunctionLink"],
 ". Thus, we will be able to access the list of times as the ",
 Cell["[[2,1]]", "myCode",ExpressionUUID->
  "474b119b-8343-48f2-b7f4-57dc6c305c57"],
 " element of the output from ",
 StyleBox[ButtonBox["Reap",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Reap"], "FunctionLink"],
 "."
}], "Text",ExpressionUUID->"d4353d0e-6e20-4210-8c6e-2816afe0380d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timesExampleReap", " ", "=", 
  RowBox[{"Reap", "[", "\[IndentingNewLine]", 
   RowBox[{"Do", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Sow", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Timing", "[", 
        RowBox[{"bubbleSort", "[", 
         RowBox[{"RandomSample", "[", 
          RowBox[{"Range", "[", "20", "]"}], "]"}], "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "\[IndentingNewLine]", "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", "100", "}"}]}], "]"}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellLabel->"In[39]:=",ExpressionUUID->"13e96f75-a8cc-45bd-9e60-e0a7df5c1b0b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"Null", ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
     "0.001205`", ",", "0.001404`", ",", "0.001677`", ",", "0.00151`", ",", 
      "0.001269`", ",", "0.001406`", ",", "0.001356`", ",", "0.001173`", ",", 
      "0.00118`", ",", "0.001393`", ",", "0.001399`", ",", "0.001151`", ",", 
      "0.001166`", ",", "0.001222`", ",", "0.001414`", ",", "0.001122`", ",", 
      "0.000996`", ",", "0.001263`", ",", "0.001319`", ",", "0.001259`", ",", 
      "0.001319`", ",", "0.001412`", ",", "0.001304`", ",", "0.001273`", ",", 
      "0.001242`", ",", "0.001024`", ",", "0.001131`", ",", "0.001269`", ",", 
      "0.001322`", ",", "0.001262`", ",", "0.00112`", ",", "0.001188`", ",", 
      "0.00113`", ",", "0.001173`", ",", "0.00108`", ",", "0.001307`", ",", 
      "0.001097`", ",", "0.001235`", ",", "0.001185`", ",", "0.000928`", ",", 
      "0.001218`", ",", "0.001`", ",", "0.001266`", ",", "0.001244`", ",", 
      "0.001103`", ",", "0.001373`", ",", "0.001284`", ",", "0.001238`", ",", 
      "0.001237`", ",", "0.001283`", ",", "0.001189`", ",", "0.001352`", ",", 
      "0.001228`", ",", "0.00105`", ",", "0.001116`", ",", "0.001212`", ",", 
      "0.001172`", ",", "0.001035`", ",", "0.001146`", ",", "0.001303`", ",", 
      "0.001256`", ",", "0.000952`", ",", "0.001263`", ",", "0.000988`", ",", 
      "0.001076`", ",", "0.00109`", ",", "0.001074`", ",", "0.001144`", ",", 
      "0.001048`", ",", "0.001315`", ",", "0.001227`", ",", "0.000855`", ",", 
      "0.001167`", ",", "0.001375`", ",", "0.001448`", ",", "0.001258`", ",", 
      "0.001324`", ",", "0.001262`", ",", "0.001293`", ",", "0.001111`", ",", 
      "0.00136`", ",", "0.00126`", ",", "0.001114`", ",", "0.00122`", ",", 
      "0.001157`", ",", "0.001228`", ",", "0.000991`", ",", "0.000992`", ",", 
      "0.001165`", ",", "0.001114`", ",", "0.001198`", ",", "0.001089`", ",", 
      "0.001315`", ",", "0.001284`", ",", "0.001178`", ",", "0.001334`", ",", 
      "0.001276`", ",", "0.001254`", ",", "0.001078`", ",", "0.001031`"}], 
     "}"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[39]=",ExpressionUUID->"9a6a6e54-11ee-441f-82e1-191ed86d0bb1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timesExample", "=", 
  RowBox[{"timesExampleReap", "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", "1"}], "]"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellLabel->"In[40]:=",ExpressionUUID->"c75a3393-2a8f-467d-873a-7c3886dd3100"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.001205`", ",", "0.001404`", ",", "0.001677`", ",", "0.00151`", ",", 
   "0.001269`", ",", "0.001406`", ",", "0.001356`", ",", "0.001173`", ",", 
   "0.00118`", ",", "0.001393`", ",", "0.001399`", ",", "0.001151`", ",", 
   "0.001166`", ",", "0.001222`", ",", "0.001414`", ",", "0.001122`", ",", 
   "0.000996`", ",", "0.001263`", ",", "0.001319`", ",", "0.001259`", ",", 
   "0.001319`", ",", "0.001412`", ",", "0.001304`", ",", "0.001273`", ",", 
   "0.001242`", ",", "0.001024`", ",", "0.001131`", ",", "0.001269`", ",", 
   "0.001322`", ",", "0.001262`", ",", "0.00112`", ",", "0.001188`", ",", 
   "0.00113`", ",", "0.001173`", ",", "0.00108`", ",", "0.001307`", ",", 
   "0.001097`", ",", "0.001235`", ",", "0.001185`", ",", "0.000928`", ",", 
   "0.001218`", ",", "0.001`", ",", "0.001266`", ",", "0.001244`", ",", 
   "0.001103`", ",", "0.001373`", ",", "0.001284`", ",", "0.001238`", ",", 
   "0.001237`", ",", "0.001283`", ",", "0.001189`", ",", "0.001352`", ",", 
   "0.001228`", ",", "0.00105`", ",", "0.001116`", ",", "0.001212`", ",", 
   "0.001172`", ",", "0.001035`", ",", "0.001146`", ",", "0.001303`", ",", 
   "0.001256`", ",", "0.000952`", ",", "0.001263`", ",", "0.000988`", ",", 
   "0.001076`", ",", "0.00109`", ",", "0.001074`", ",", "0.001144`", ",", 
   "0.001048`", ",", "0.001315`", ",", "0.001227`", ",", "0.000855`", ",", 
   "0.001167`", ",", "0.001375`", ",", "0.001448`", ",", "0.001258`", ",", 
   "0.001324`", ",", "0.001262`", ",", "0.001293`", ",", "0.001111`", ",", 
   "0.00136`", ",", "0.00126`", ",", "0.001114`", ",", "0.00122`", ",", 
   "0.001157`", ",", "0.001228`", ",", "0.000991`", ",", "0.000992`", ",", 
   "0.001165`", ",", "0.001114`", ",", "0.001198`", ",", "0.001089`", ",", 
   "0.001315`", ",", "0.001284`", ",", "0.001178`", ",", "0.001334`", ",", 
   "0.001276`", ",", "0.001254`", ",", "0.001078`", ",", "0.001031`"}], 
  "}"}]], "Output",
 CellLabel->"Out[40]=",ExpressionUUID->"15fe2b18-5414-4d87-a24c-c604416e91d0"]
}, Open  ]],

Cell["\<\
(Depending on the speed of your computer, you may need to increase the size \
of the input list.) \
\>", "Text",ExpressionUUID->"a6b71b76-2af6-471c-9c5d-9e5c4aff8243"],

Cell[TextData[{
 "To average the times, we apply the ",
 StyleBox[ButtonBox["Mean",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Mean"], "FunctionLink"],
 " function to the list of values."
}], "Text",ExpressionUUID->"ad978553-2aeb-4091-bf31-b71d64ee0b6d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mean", "[", "timesExample", "]"}]], "Input",
 CellLabel->"In[41]:=",ExpressionUUID->"ba64ee0e-e5b0-4101-aed0-09a01f1e2841"],

Cell[BoxData["0.0012109800000000002`"], "Output",
 CellLabel->"Out[41]=",ExpressionUUID->"790bc2f8-04d3-4144-8658-40a2e4db31c0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Graphing the Empirically Calculated Average-case Complexity", \
"Subsection",
 CellTags->"Section3b",ExpressionUUID->"266a488d-da31-4f80-875e-2b73d068b0dd"],

Cell[TextData[{
 "To graph the average time data, we use the ",
 StyleBox[ButtonBox["ListPlot",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/ListPlot"], "FunctionLink"],
 " function, first discussed in Section 2.3 of this manual. ",
 StyleBox[ButtonBox["ListPlot",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/ListPlot"], "FunctionLink"],
 " takes as its argument a list of lists where the sublists are ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "722c8822-791e-4e13-9fd3-8dd135a68c02"],
 "\[Dash]",
 Cell[BoxData[
  FormBox["y", TraditionalForm]],ExpressionUUID->
  "8518f97e-bded-4263-848a-3ad15c065215"],
 " pairs."
}], "Text",ExpressionUUID->"f4b27473-b62b-4b7d-845a-010412db8a18"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "2"}], "}"}]}], "}"}], "]"}]], "Input",
 CellLabel->"In[42]:=",ExpressionUUID->"4dde3395-6b2d-4134-958a-104b9ae1be29"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., 1.}, {2., 4.}, {3., 3.}, {4., 1.}, {5., 
      2.}}]}, {}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.9375000000000001, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1., 5.}, {0, 4.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[42]=",ExpressionUUID->"658d03ba-b008-4536-85c2-54553248d953"]
}, Open  ]],

Cell[TextData[{
 "We will now write a function that produces the list of data required by ",
 StyleBox[ButtonBox["ListPlot",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/ListPlot"], "FunctionLink"],
 ". This function will compute the average, over a number of trials, of the \
time taken to execute ",
 StyleBox["bubbleSort", "Code"],
 " on randomly generated lists of various sizes."
}], "Text",ExpressionUUID->"5cf7f0e5-120d-4510-86f1-6c1893e982ba"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getBubbleTimes", "[", 
    RowBox[{
    "trials_Integer", ",", "min_Integer", ",", "max_Integer", ",", 
     "step_Integer"}], "]"}], "/;", 
   RowBox[{
    RowBox[{"trials", ">", "0"}], "&&", 
    RowBox[{"min", ">", "0"}], "&&", 
    RowBox[{"max", ">", "min"}], "&&", 
    RowBox[{"step", ">", "0"}]}]}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"s", ",", 
      RowBox[{"avgTimeData", "=", 
       RowBox[{"{", "}"}]}], ",", "times", ",", "input"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"s", "=", "min"}], ",", 
       RowBox[{"s", "\[LessEqual]", "max"}], ",", 
       RowBox[{"s", "=", 
        RowBox[{"s", "+", "step"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"times", "=", 
         RowBox[{
          RowBox[{"Reap", "[", "\[IndentingNewLine]", 
           RowBox[{"Do", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"input", "=", 
               RowBox[{"RandomSample", "[", 
                RowBox[{"Range", "[", "s", "]"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"Sow", "[", 
               RowBox[{
                RowBox[{"Timing", "[", 
                 RowBox[{"bubbleSort", "[", "input", "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
             "\[IndentingNewLine]", "trials"}], "]"}], "\[IndentingNewLine]", 
           "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"avgTimeData", ",", 
          RowBox[{"{", 
           RowBox[{"s", ",", 
            RowBox[{"Mean", "[", "times", "]"}]}], "}"}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "avgTimeData"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellLabel->"In[43]:=",ExpressionUUID->"046c3ae4-2ffc-4f2a-b3cc-05c75909e1b4"],

Cell[TextData[{
 "Most of the function is enclosed in the ",
 StyleBox[ButtonBox["For",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/For"], "FunctionLink"],
 " loop with variable ",
 StyleBox["s", "Code"],
 ", representing the size of the input that will be passed to ",
 StyleBox["bubbleSort", "Code"],
 ". Within the ",
 StyleBox[ButtonBox["For",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/For"], "FunctionLink"],
 " loop are two statements: the first is an assignment to the symbol ",
 StyleBox["times", "Code"],
 ", the right hand side of which spans 6 lines of code, and the second \
appends the average of the data stored in ",
 StyleBox["times", "Code"],
 " to the symbol ",
 StyleBox["avgTimeData", "Code"],
 ". The right hand side of the ",
 StyleBox["times", "Code"],
 " assignment is where most of the work is done. A ",
 StyleBox[ButtonBox["Reap",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Reap"], "FunctionLink"],
 " encloses this section of code, and ",
 StyleBox["times", "Code"],
 " is assigned to the ",
 StyleBox["[[2,1]]", "Code"],
 " entry of the output of the ",
 StyleBox[ButtonBox["Reap",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Reap"], "FunctionLink"],
 ", which effectively assigns times to the sown values. Within the ",
 StyleBox[ButtonBox["Reap",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Reap"], "FunctionLink"],
 " is a ",
 StyleBox[ButtonBox["Do",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Do"], "FunctionLink"],
 " loop, the second argument of which, the number ",
 StyleBox["trials", "Code"],
 ", indicates that the body of the ",
 StyleBox[ButtonBox["Do",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Do"], "FunctionLink"],
 " loop will be executed a number of times dictated by the argument to the \
function. There is no need for a loop variable. Within the ",
 StyleBox[ButtonBox["Do",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Do"], "FunctionLink"],
 " loop, the symbol ",
 StyleBox["input", "Code"],
 " is assigned to the result of ",
 StyleBox[ButtonBox["RandomSample",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/RandomSample"], "FunctionLink"],
 " applied to the list of positive integers determined by the input size ",
 StyleBox["s", "Code"],
 ". Then, ",
 StyleBox["bubbleSort", "Code"],
 " is applied to this input within ",
 StyleBox[ButtonBox["Timing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Timing"], "FunctionLink"],
 " and ",
 StyleBox[ButtonBox["Sow",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Sow"], "FunctionLink"],
 " is applied to the time. Note that, unlike our example above, we moved the \
application of ",
 StyleBox[ButtonBox["RandomSample",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/RandomSample"], "FunctionLink"],
 " and ",
 StyleBox[ButtonBox["Range",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Range"], "FunctionLink"],
 " outside of the ",
 StyleBox[ButtonBox["Timing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Timing"], "FunctionLink"],
 " function, so that the time taken to generate the random input is not being \
included."
}], "Text",ExpressionUUID->"18a1aadd-1030-463f-93ba-c9098be19fd4"],

Cell["\<\
Now, we execute the function and use the result to create a graph.\
\>", "Text",ExpressionUUID->"f6956347-9b25-4fba-be2d-c2cec9137ac4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bubbleTimes", "=", 
  RowBox[{"getBubbleTimes", "[", 
   RowBox[{"100", ",", "10", ",", "50", ",", "10"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellLabel->"In[44]:=",ExpressionUUID->"e6326207-7c42-47ca-88e8-ca04df8cec21"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"10", ",", "0.0003308500000000001`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "0.0011696700000000003`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"30", ",", "0.00256641`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"40", ",", "0.004560850000000001`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"50", ",", "0.0072707`"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[44]=",ExpressionUUID->"ee254597-d63b-4e62-a9d0-04d41b5ff240"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "bubbleTimes", "]"}]], "Input",
 InitializationCell->True,
 CellLabel->"In[45]:=",ExpressionUUID->"dc644d61-f876-4a2e-83de-3a948ca23ecd"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{10., 0.0003308500000000001}, {20., 0.0011696700000000003`}, {
      30., 0.00256641}, {40., 0.004560850000000001}, {50., 
      0.0072707}}]}, {}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{9.375000000000002, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{10., 50.}, {0, 0.0072707}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[45]=",ExpressionUUID->"c74df162-2fb1-403b-a596-c9a9fabb1b36"]
}, Open  ]],

Cell[TextData[{
 "From the shape of the graph, it appears that the average-case performance \
of ",
 StyleBox["bubbleSort", "Code"],
 " is polynomial. This suggests that the complexity of the algorithm is also \
polynomial. Of course, a proof of that fact would require an analysis of the \
kind given in Example 4 of Section 3.3. "
}], "Text",ExpressionUUID->"acbb73a0-75df-4ae2-ba03-8669b0c05c4e"],

Cell["\<\
The reader can experiment with the function in order to produce finer detail \
(by decreasing the step) and to obtain data for larger input lists (by \
increasing the maximum list size). \
\>", "Text",ExpressionUUID->"358257bf-5b0c-4245-a340-140db89ca2fc"],

Cell["\<\
We conclude with a caveat. The empirical testing we have done in this section \
is an example of a way to get an idea of the average-case performance of a \
procedure. It can be used to compare two or more algorithms with each other \
and can indicate major differences in worst-case and average-case complexity \
(for instance, in an algorithm with exponential worst-case complexity and \
polynomial average-case complexity). Beyond generalities, the implementation \
of the algorithm, the computer running it, the computer language it is \
written in, and a host of other factors can play a sufficiently significant \
role that this approach is generally not helpful for making finer \
distinctions (between quadratic and cubic complexity, for example).\
\>", "Text",ExpressionUUID->"dfe0e687-347c-468b-900e-0a459da1fdbe"],

Cell["\<\
The reader should refer to the solution of Computer Project 10 below for a \
method of analyzing average case complexity that modifies the function in \
order to count the number of operations used with the input values. \
\>", "Text",ExpressionUUID->"809c3d39-6b70-49a1-92cb-651a102175cc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Solutions to Computer Projects and Computations and Explorations\
\>", "Section",
 CellTags->"Solutions",ExpressionUUID->"aee99956-2ca3-4bca-a05c-ea13a1d543ac"],

Cell[CellGroupData[{

Cell["Computer Project 7", "Subsection",
 CellTags->
  "SolutionsCP9",ExpressionUUID->"9a3aea56-f1f6-48de-8073-067d7e35f82f"],

Cell["\<\
Given two strings of characters use the naive string matching algorithm to \
determine whether the shorter string occurs in the longer string. \
\>", "Problem",ExpressionUUID->"405bab99-21c3-428e-b667-cd63b29c6e10"],

Cell["\<\
We begin, as usual, by following the pseudocode presented in the text main \
text as Algorithm 6. As before, we will need to adjust basic syntax for the \
loops and other elements. However, the pseudocode indicates that the input \
should include two sequences of characters. That makes for a clunky user \
experience. We would much rather be able to enter\
\>", "Text",ExpressionUUID->"4a722eb4-c871-4a44-829b-c9410b596226"],

Cell[BoxData[
 RowBox[{"stringMatch", "[", 
  RowBox[{"7", ",", "3", ",", "\"\<eceyeye\>\"", ",", "\"\<eye\>\""}], 
  "]"}]], "Input",
 Editable->False,
 Evaluatable->False,ExpressionUUID->"cf358782-0eb1-419f-a89d-ba7e98a6ae6c"],

Cell["rather than", "Text",ExpressionUUID->"c40ab58b-567a-45d1-8835-c02e9a6022ab"],

Cell[BoxData[
 RowBox[{"stringMatch", "[", 
  RowBox[{
  "7", ",", "3", ",", "\"\<e\>\"", ",", "\"\<c\>\"", ",", "\"\<e\>\"", ",", 
   "\"\<y\>\"", ",", "\"\<e\>\"", ",", "\"\<y\>\"", ",", "\"\<e\>\"", ",", 
   "\"\<e\>\"", ",", "\"\<y\>\"", ",", "\"\<e\>\""}], "]"}]], "Input",
 Editable->False,
 Evaluatable->False,ExpressionUUID->"c466a33c-0158-4b5a-b23b-58dbfb88d4ba"],

Cell[TextData[{
 "We will implement the more user-friendly version and apply the built-in \
function ",
 StyleBox[ButtonBox["Characters",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Characters"], "FunctionLink"],
 " in order to transform a string into a list of individual characters, as \
illustrated below."
}], "Text",ExpressionUUID->"cd532003-469e-430e-85fb-417a221da5bd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Characters", "[", "\"\<eceyeye\>\"", "]"}]], "Input",
 CellLabel->"In[46]:=",ExpressionUUID->"cec85f99-58d6-4c29-8508-f01ea1948495"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"e\"\>", ",", "\<\"c\"\>", ",", "\<\"e\"\>", ",", "\<\"y\"\>", 
   ",", "\<\"e\"\>", ",", "\<\"y\"\>", ",", "\<\"e\"\>"}], "}"}]], "Output",
 CellLabel->"Out[46]=",ExpressionUUID->"eb787991-9bc5-4ff5-94ef-fbdbb5468a51"]
}, Open  ]],

Cell["Here is our first attempt. ", "Text",ExpressionUUID->"b8e07271-74a1-4758-a510-b4aa13495ff3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"stringMatch", "[", 
    RowBox[{"n_Integer", ",", "m_Integer", ",", "t_String", ",", "p_String"}],
     "]"}], "/;", 
   RowBox[{
    RowBox[{"n", ">", "0"}], "&&", 
    RowBox[{"m", ">", "0"}], "&&", 
    RowBox[{"m", "\[LessEqual]", "n"}]}]}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"T", ",", "P", ",", "s", ",", "j"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"T", "=", 
      RowBox[{"Characters", "[", "t", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"P", "=", 
      RowBox[{"Characters", "[", "p", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"s", "=", "0"}], ",", 
       RowBox[{"s", "\[LessEqual]", 
        RowBox[{"n", "-", "m"}]}], ",", 
       RowBox[{"s", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"j", "=", "1"}], ";", "\[IndentingNewLine]", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"j", "\[LessEqual]", "m"}], "&&", 
           RowBox[{
            RowBox[{"T", "[", 
             RowBox[{"[", 
              RowBox[{"s", "+", "j"}], "]"}], "]"}], "\[Equal]", 
            RowBox[{"P", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}]}], ",", 
          RowBox[{"j", "=", 
           RowBox[{"j", "+", "1"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"j", ">", "m"}], ",", 
          RowBox[{"Print", "[", 
           RowBox[{"s", ",", "\"\< is a valid shift\>\""}], "]"}]}], 
         "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellLabel->"In[47]:=",ExpressionUUID->"5302ffd7-926a-4fec-b4ee-212854d1e2e9"],

Cell[TextData[{
 "Note that when ",
 StyleBox[ButtonBox["Print",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Print"], "FunctionLink"],
 " is applied to multiple arguments, it prints them one after the other in \
the same line. That is needed here in order for the value of ",
 StyleBox["s", "Code"],
 " to be displayed together with the rest of the text message."
}], "Text",ExpressionUUID->"690d4ed0-3c08-498b-addb-c845d2b7ea0e"],

Cell["Having written the function, we test it.", "Text",ExpressionUUID->"762e9cfd-3241-4f2e-9f27-ba215eb74b68"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"stringMatch", "[", 
  RowBox[{"7", ",", "3", ",", "\"\<eceyeye\>\"", ",", "\"\<eye\>\""}], 
  "]"}]], "Input",
 CellLabel->"In[48]:=",ExpressionUUID->"41b64149-65a8-4a85-ae25-ed1a12321ea2"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"2", "\[InvisibleSpace]", "\<\" is a valid shift\"\>"}],
  SequenceForm[2, " is a valid shift"],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[48]:=",ExpressionUUID->"72840be5-fd7c-4558-a6e8-5e3ac4a12341"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"4", "\[InvisibleSpace]", "\<\" is a valid shift\"\>"}],
  SequenceForm[4, " is a valid shift"],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[48]:=",ExpressionUUID->"a5eebec9-9cfe-457a-be02-3dc6f0933ab7"]
}, Open  ]]
}, Open  ]],

Cell["\<\
It is often a good idea, having written a working procedure, to reflect on it \
and think about whether it could be made simpler. In this case, you might \
start wondering why the lengths of the text and pattern are included as \
arguments to the function. Remember that the syntax for executing this \
function suggested by the pseudocode is \
\>", "Text",ExpressionUUID->"6ec72d8d-64d9-4c59-94b3-2323b00d5196"],

Cell[BoxData[
 RowBox[{"stringMatch", "[", 
  RowBox[{
  "7", ",", "3", ",", "\"\<e\>\"", ",", "\"\<c\>\"", ",", "\"\<e\>\"", ",", 
   "\"\<y\>\"", ",", "\"\<e\>\"", ",", "\"\<y\>\"", ",", "\"\<e\>\"", ",", 
   "\"\<e\>\"", ",", "\"\<y\>\"", ",", "\"\<e\>\""}], "]"}]], "Input",
 Editable->False,
 Evaluatable->False,ExpressionUUID->"983f7fc1-4cc9-4409-98f6-bb72c1d6e4db"],

Cell["\<\
With the text and pattern given as individual characters, the lengths are \
necessary in order to determine where the text stops and the pattern begins. \
In our implementation, the text and pattern are separate arguments, so the \
lengths can be computed by the function rather than entered by the user. Our \
final version of the naive string matcher is below.\
\>", "Text",ExpressionUUID->"9d84e918-30ab-4845-9678-c3402edbe0a6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"stringMatch", "[", 
   RowBox[{"t_String", ",", "p_String"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"T", ",", "n", ",", "P", ",", "m", ",", "s", ",", "j"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"T", "=", 
      RowBox[{"Characters", "[", "t", "]"}]}], ";", 
     RowBox[{"n", "=", 
      RowBox[{"Length", "[", "T", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"P", "=", 
      RowBox[{"Characters", "[", "p", "]"}]}], ";", 
     RowBox[{"m", "=", 
      RowBox[{"Length", "[", "P", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"s", "=", "0"}], ",", 
       RowBox[{"s", "\[LessEqual]", 
        RowBox[{"n", "-", "m"}]}], ",", 
       RowBox[{"s", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"j", "=", "1"}], ";", "\[IndentingNewLine]", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"j", "\[LessEqual]", "m"}], "&&", 
           RowBox[{
            RowBox[{"T", "[", 
             RowBox[{"[", 
              RowBox[{"s", "+", "j"}], "]"}], "]"}], "\[Equal]", 
            RowBox[{"P", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}]}], ",", 
          RowBox[{"j", "=", 
           RowBox[{"j", "+", "1"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"j", ">", "m"}], ",", 
          RowBox[{"Print", "[", 
           RowBox[{"s", ",", "\"\< is a valid shift\>\""}], "]"}]}], 
         "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellLabel->"In[49]:=",ExpressionUUID->"175e7467-0b18-4a15-9497-3f06b10160ac"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"stringMatch", "[", 
  RowBox[{"\"\<eceyeye\>\"", ",", "\"\<eye\>\""}], "]"}]], "Input",
 CellLabel->"In[50]:=",ExpressionUUID->"60268adb-ecd9-4e89-9017-1621912b81e3"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"2", "\[InvisibleSpace]", "\<\" is a valid shift\"\>"}],
  SequenceForm[2, " is a valid shift"],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[50]:=",ExpressionUUID->"1e9f4bf4-aafa-40c8-909c-1f7294ffefe0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"4", "\[InvisibleSpace]", "\<\" is a valid shift\"\>"}],
  SequenceForm[4, " is a valid shift"],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[50]:=",ExpressionUUID->"aabcce63-0713-4875-a646-77b492b5e606"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "The Wolfram Language, of course, includes extensive support for string \
manipulation, including a function that performs the same function as our \
naive string matcher called ",
 StyleBox[ButtonBox["StringPosition",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/StringPosition"], "FunctionLink"],
 "."
}], "Text",ExpressionUUID->"04cc6cb9-1292-4ed3-ac43-535bd9c2e32b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringPosition", "[", 
  RowBox[{"\"\<eceyeye\>\"", ",", "\"\<eye\>\""}], "]"}]], "Input",
 CellLabel->"In[51]:=",ExpressionUUID->"baf8eed5-ca21-4c81-ac6d-b98092aa371d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "7"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[51]=",ExpressionUUID->"6fba613a-69eb-4bf3-8358-9cd978301821"]
}, Open  ]],

Cell["\<\
The difference in output is that the built-in function, rather than \
indicating valid shifts, returns the starting and ending positions of where \
the pattern occurs in the text.\
\>", "Text",ExpressionUUID->"421108c9-37f3-400f-a4fb-4d31ab8ab19e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Computer Project 10", "Subsection",
 CellTags->
  "SolutionsCP9",ExpressionUUID->"8fb69fcf-f5e1-45d1-b9f3-d44865675e65"],

Cell[TextData[{
 "Given an ordered list of ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "df0213b2-028e-4ead-a231-f922dcb99c95"],
 " integers and an integer ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "67d0c4c9-904c-4426-868f-a4ea0dadb9dc"],
 " in the list, find the number of comparisons used to determine the position \
of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "fadb1896-e219-43af-95c4-00c0f9de295c"],
 " in the list using a linear search and using a binary search. "
}], "Problem",ExpressionUUID->"0e801174-d85e-4929-b253-dedfe64291d2"],

Cell[TextData[{
 StyleBox["Solution:",
  FontSlant->"Italic"],
 " There is no loss of generality to assume that the list of ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "11a11b0e-602b-42ce-b255-28db44047a33"],
 " integers is the list of integers from ",
 Cell[BoxData[
  FormBox["1", TraditionalForm]],ExpressionUUID->
  "a3b304e2-e63e-4947-841b-d3f40903f048"],
 " to ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "18a436f0-f75d-43ce-ba60-b3b5cfc4d9dc"],
 "."
}], "Text",ExpressionUUID->"e451489b-21c0-4ebf-a9c5-299e0ab1ce27"],

Cell[TextData[{
 "For the linear search algorithm provided as Algorithm 2 in Section 3.1 of \
the text, each step in the search requires 2 comparisons, one tests whether \
the end of the list has been reached and one tests whether the current \
element is the element being searched for. These are both contained in the \
Boolean expression that controls the ",
 StyleBox[ButtonBox["While",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/While"], "FunctionLink"],
 " loop. A final comparison is used after the ",
 StyleBox[ButtonBox["While",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/While"], "FunctionLink"],
 " loop is completed to determine whether the element was found or not. In \
the list of ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "5e2a0c01-36a6-4ada-b666-3e68bba3c537"],
 " integers ",
 Cell[BoxData[
  FormBox["1", TraditionalForm]],ExpressionUUID->
  "2b7bd323-5bc9-4646-a5b1-43b3949cdf17"],
 " through ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "dcbebb45-fe5c-4e3e-bbb1-b6e210e503f1"],
 ", the integer ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "c6f178c3-0d9f-47a0-8d3b-ecb7866bd407"],
 " is therefore found after ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"2", "x"}], "+", "1"}], TraditionalForm]],ExpressionUUID->
  "21efd3ee-5bba-4713-8b69-f3f85e397be6"],
 " comparisons. "
}], "Text",ExpressionUUID->"4099ee71-9f4e-41da-8842-e5404c94a11d"],

Cell[TextData[{
 "To determine the number of comparisons needed to find ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "7436c09c-41a0-4b74-93d5-2bde45e8956e"],
 " via the binary search algorithm, we modify the procedure we wrote in \
Section 3.1 of this manual to count comparisons. For reference, here is the \
original ",
 StyleBox["binarySearch", "Code"],
 " function. "
}], "Text",ExpressionUUID->"175fa1cf-e784-46a2-b0cb-89f7df889332"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"binarySearch", "[", 
    RowBox[{"x_Integer", ",", 
     RowBox[{"A", ":", 
      RowBox[{"{", "__Integer", "}"}]}]}], "]"}], "/;", 
   RowBox[{"Less", "@@", "A"}]}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"n", ",", "i", ",", "j", ",", "m", ",", "location"}], "}"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"n", "=", 
      RowBox[{"Length", "[", "A", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"i", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"j", "=", "n"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"i", "<", "j"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"m", "=", 
         RowBox[{"Floor", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"i", "+", "j"}], ")"}], "/", "2"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"x", ">", 
           RowBox[{"A", "[", 
            RowBox[{"[", "m", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"i", "=", 
           RowBox[{"m", "+", "1"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"j", "=", "m"}]}], "\[IndentingNewLine]", "]"}]}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"x", "\[Equal]", 
        RowBox[{"A", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"location", "=", "i"}], ",", "\[IndentingNewLine]", 
       RowBox[{"location", "=", "0"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", "location"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "myCode",
 Editable->False,ExpressionUUID->"3f304013-a251-4027-a9e9-2db44a626907"],

Cell[TextData[{
 "We modify this function to count comparisons. Each time through the ",
 StyleBox[ButtonBox["While",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/While"], "FunctionLink"],
 " loop accounts for two comparisons, the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"i", "<", "j"}], TraditionalForm]],ExpressionUUID->
  "061584a8-bd21-4ab1-917e-4f5cc9e37796"],
 " comparison that controls the loop and the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", ">", 
    RowBox[{"A", "[", "m", "]"}]}], TraditionalForm]],ExpressionUUID->
  "6f583993-694f-4c0e-ace9-95645a1aa80d"],
 " comparison in the ",
 StyleBox[ButtonBox["If",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/If"], "FunctionLink"],
 " statement. Therefore, we add a line of code to increment the comparison \
count by 2 at the start of the ",
 StyleBox[ButtonBox["While",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/While"], "FunctionLink"],
 " loop. In addition, we need to add one to the comparison count after the \
end of the loop to account for the comparison that terminates the loop. One \
final comparison is done, in the final ",
 StyleBox[ButtonBox["If",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/If"], "FunctionLink"],
 " statement, to determine if the search has succeeded or not. "
}], "Text",ExpressionUUID->"6db204d9-c290-4ccd-90fc-3628c57270c5"],

Cell[TextData[{
 "By incrementing the count after the final ",
 StyleBox[ButtonBox["If",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/If"], "FunctionLink"],
 " statement, the increment will be the final expression and consequently is \
what will be shown as the result of the function. Here is the modified \
function. "
}], "Text",ExpressionUUID->"83387ea0-792a-4e56-9b18-37769300294d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"binarySearchC", "[", 
    RowBox[{"x_Integer", ",", 
     RowBox[{"A", ":", 
      RowBox[{"{", "__Integer", "}"}]}]}], "]"}], "/;", 
   RowBox[{"Less", "@@", "A"}]}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"n", ",", "i", ",", "j", ",", "m", ",", "location", ",", 
      RowBox[{"count", "=", "0"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"n", "=", 
      RowBox[{"Length", "[", "A", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"i", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"j", "=", "n"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"i", "<", "j"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"count", "=", 
         RowBox[{"count", "+", "2"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"m", "=", 
         RowBox[{"Floor", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"i", "+", "j"}], ")"}], "/", "2"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"x", ">", 
           RowBox[{"A", "[", 
            RowBox[{"[", "m", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"i", "=", 
           RowBox[{"m", "+", "1"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"j", "=", "m"}]}], "\[IndentingNewLine]", "]"}]}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"count", "=", 
      RowBox[{"count", "+", "1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"x", "\[Equal]", 
        RowBox[{"A", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"location", "=", "i"}], ",", "\[IndentingNewLine]", 
       RowBox[{"location", "=", "0"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"count", "=", 
      RowBox[{"count", "+", "1"}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellLabel->"In[52]:=",ExpressionUUID->"0ce2fb8c-fda6-4941-a45e-8b922902de20"],

Cell["For example, to find 15 in the list from 1 to 20, it takes", "Text",ExpressionUUID->"83954133-a8c0-495d-b891-ce367e1724f3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"binarySearchC", "[", 
  RowBox[{"15", ",", 
   RowBox[{"Range", "[", "20", "]"}]}], "]"}]], "Input",
 CellLabel->"In[53]:=",ExpressionUUID->"2b3d5fdd-7eaf-4441-ac71-2fb87a600892"],

Cell[BoxData["10"], "Output",
 CellLabel->"Out[53]=",ExpressionUUID->"d2491de7-fb6d-4266-be8b-278e5e2eba16"]
}, Open  ]],

Cell["comparisons.", "Text",ExpressionUUID->"f9b72df5-2ebb-4f1f-902e-cbddb8e2e8d0"],

Cell[TextData[{
 "We can use the information above to compare the average number of \
comparisons required for a list of ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "089f381b-56a4-4e47-b8b2-a26741235998"],
 " elements. We need to determine the number of comparisons needed to find \
each value from ",
 Cell[BoxData[
  FormBox["1", TraditionalForm]],ExpressionUUID->
  "04fa4d78-723c-4d08-8428-6e424d77e367"],
 " to ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "37cd738b-b751-4d7d-be57-22c021ad3c73"],
 " in the list from ",
 Cell[BoxData[
  FormBox["1", TraditionalForm]],ExpressionUUID->
  "62d89fbd-d14c-4b75-87ab-2cc9a7068d35"],
 " to ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "9eadb7b1-4cb7-4d13-8a0d-e83bab01745a"],
 " and average these numbers of comparisons. For the linear search, we know \
that it takes ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"2", "x"}], "+", "1"}], TraditionalForm]],ExpressionUUID->
  "3887f907-23de-43b5-ab2e-7ed8c9e21ef0"],
 " comparisons, so the average can be found from "
}], "Text",ExpressionUUID->"fc573752-768a-4c1a-af97-7de3b08704b1"],

Cell[BoxData[
 FormBox[Cell[TextData[Cell[BoxData[
   FormBox[
    FractionBox[
     RowBox[{
      RowBox[{
       UnderoverscriptBox[
        StyleBox["\[Sum]",
         FontSize->14], 
        RowBox[{"x", "=", "1"}], "n",
        LimitsPositioning->False], " ", 
       RowBox[{"2", "x"}]}], "+", "1"}], "n"], TraditionalForm]],
   ExpressionUUID->"ea7c34c3-ffc0-4456-be32-0610db66b400"]],ExpressionUUID->
   "bea0f59d-468e-4fff-933a-8a53f27f2721"], TraditionalForm]], "Equation",Expr\
essionUUID->"a71b3810-86c8-47d3-ba22-ed0bc2efcb9a"],

Cell[TextData[{
 "We use ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "\[CloseCurlyQuote]s symbolic summation capabilities, specifically the ",
 StyleBox[ButtonBox["Sum",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Sum"], "FunctionLink"],
 " function (discussed in Section 2.4 of this manual)."
}], "Text",ExpressionUUID->"b03f3e77-6f32-490a-9497-94c9bcc27690"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"2", "*", "x"}], "+", "1"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "1", ",", "n"}], "}"}]}], "]"}], "/", "n"}]], "Input",
 CellLabel->"In[54]:=",ExpressionUUID->"a74cab73-5b94-45c2-9690-7fe0c7449596"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"2", " ", "n"}], "+", 
   SuperscriptBox["n", "2"]}], "n"]], "Output",
 CellLabel->"Out[54]=",ExpressionUUID->"74c39770-6f33-448c-91c3-ca44bfe68226"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "%", "]"}]], "Input",
 CellLabel->"In[55]:=",ExpressionUUID->"1232e00c-162c-471f-adc3-8c9de16efdcf"],

Cell[BoxData[
 RowBox[{"2", "+", "n"}]], "Output",
 CellLabel->"Out[55]=",ExpressionUUID->"230793b2-a677-4a4b-9f02-9c379265eb24"]
}, Open  ]],

Cell[TextData[{
 "(The ",
 StyleBox[ButtonBox["Simplify",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Simplify"], "FunctionLink"],
 " function forces ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to simplify expressions.)"
}], "Text",ExpressionUUID->"5b72dbe6-bb88-4e09-9a9c-1414b50a2adf"],

Cell[TextData[{
 "For the binary search function, we can find the average by applying our \
function above to each integer in turn and taking the average. The following \
function will produce the average number of comparisons required for a given \
value of ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "95d402d8-9b57-4ecf-86cf-8c8243eb7fa2"],
 ". "
}], "Text",ExpressionUUID->"c28f654d-446b-4b58-bfec-ad8f891a3864"],

Cell[BoxData[
 RowBox[{
  RowBox[{"binaryAvg", "[", "n_Integer", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"data", "=", 
       RowBox[{"{", "}"}]}], ",", "inputList", ",", "x"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"inputList", "=", 
      RowBox[{"Range", "[", "n", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"data", "=", 
      RowBox[{
       RowBox[{"Reap", "[", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"Sow", "[", 
           RowBox[{"binarySearchC", "[", 
            RowBox[{"x", ",", "inputList"}], "]"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"x", ",", "1", ",", "n"}], "}"}]}], "\[IndentingNewLine]", 
         "]"}], "\[IndentingNewLine]", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Mean", "[", "data", "]"}], "//", "N"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellLabel->"In[56]:=",ExpressionUUID->"8cd1687c-2c54-4fcc-8628-5d6dfbe9ff7b"],

Cell[TextData[{
 "The function ",
 StyleBox[ButtonBox["N",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/N"], "FunctionLink"],
 " is used to obtain a numeric (floating point) value of an exact expression. \
Without it, ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " would return a fraction as the result of this function, but we generally \
expect means to be reported as floating point numbers."
}], "Text",ExpressionUUID->"1ef43db6-f407-4cdf-98a7-8bd6b620f930"],

Cell[TextData[{
 "For example, in the list from 1 to 20, it requires an average of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"20", "+", "2"}], "=", "22"}], TraditionalForm]],ExpressionUUID->
  "bc62a8a5-165e-4384-adeb-c3bb4f41cea8"],
 " comparisons using the linear search and an average of 10.8 comparisons \
using the binary search."
}], "Text",ExpressionUUID->"b01679e8-d6d4-4256-bebf-7eaca5846bbf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"binaryAvg", "[", "20", "]"}]], "Input",
 CellLabel->"In[57]:=",ExpressionUUID->"11fcab8d-69ed-48cc-9ae5-f854735f5f6d"],

Cell[BoxData["10.8`"], "Output",
 CellLabel->"Out[57]=",ExpressionUUID->"f4bdc461-7e7b-46e2-a0c4-dff02a17bda6"]
}, Open  ]],

Cell[TextData[{
 "Next, we will graph the average number of comparisons as ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "82271207-de1e-4d02-9313-1b3d4fe1ba99"],
 " ranges from ",
 Cell[BoxData[
  FormBox["1", TraditionalForm]],ExpressionUUID->
  "14b6ff9a-ea01-43ff-b496-65906f2b20a7"],
 " to ",
 Cell[BoxData[
  FormBox["100", TraditionalForm]],ExpressionUUID->
  "9feab7bc-d44b-4f77-92b6-c9a553b6b0ca"],
 ". "
}], "Text",ExpressionUUID->"a38f3847-170f-4ce9-af91-56b3588db45a"],

Cell[TextData[{
 "For the linear search algorithm, we will graph the function ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "+", "2"}], TraditionalForm]],ExpressionUUID->
  "d1f781d0-595f-4b2c-88eb-fba89a5c8b81"],
 " using ",
 StyleBox[ButtonBox["Plot",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Plot"], "FunctionLink"],
 ". In Section 2.5 of this manual, we demonstrated how to overlay two graphs \
using the ",
 StyleBox[ButtonBox["Show",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Show"], "FunctionLink"],
 " function. We will use the same approach here. Keep in mind when doing this \
that since the two graphs are created separately, the functions will have the \
same color if you do not specify the color manually using the ",
 StyleBox[ButtonBox["PlotStyle",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/PlotStyle"], "FunctionLink"],
 " option."
}], "Text",ExpressionUUID->"214c3372-4dc8-4a41-a035-1bc1bb5a08ec"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"linearSearchGraph", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"n", "+", "2"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "100"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellLabel->"In[58]:=",ExpressionUUID->"24054349-53d7-4db0-a67c-a2d14ab24c07"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJw10H9Q02UAx/GFZ2x4hcBCQzSmFxmHO3coQgLfT+CPYPJjwNzzJKRwcBYq
IHKwBaZ150xBSy/8QZ2mmCnnERCoKfFrAXay1Jtx1qlsFuwEpA3KsbQW+X2e
P973+v+tyC1Kz/eSSCTJ0/2vOo8u8JI4hNDmcN/nJFJ8cHpP4KZKhyDcip+1
NE6KZmvTi+1TDoE6iPfGSinmZvt4DE6nUK3c42mbkmJYe3XQ+WBSmKy/94fe
KcNHa+efsvW4hK66gzcdD2bhSphtUVeVR8iucRyy9vjiM32LvLPKG0kxb/tY
ewIQdH3gtZAIOTMYCVXVqi1+wTi9uvdYq3QhutMXG1/+XcF8Fd+0DncuCQhl
hiGxqWt739+vM5eg0ctd5BepBPnw6SXpPBUOdW4Y7VdyIxCy7sdfLAu4y3HE
a2i8OYq7ArkzfTtuK7nRaDlRaXppHnclxnKPjStV3FhU7Oi+vX8RV4CjodbW
LgjQ68zFgyeBMmzwk53nvomTqcW+mV9y47Gy9G5I1QVuArw6bnzy21nuKsS+
EuS/+CJ3Na4mGZWVndw1yPvCcM55mbsWu2f8sDyjl/sW+j6tCRno4iZC8/Dj
r969zE1Cis4Sazdx1SgbPROx93vuOvjXmGMC+rnJcMrmWht+5qbgyZmH1i1m
bir0Wv+/5L+moi1s3/s+29IwOzDn26IC5kgaZtoTv8saYuZr0BJ//1pHAXNE
A70qcm+Enbk5HY/ro1PnFzLH07HvkqR3zhhzawbaz9+R1W5m2jNwITRLd/gR
c1smGiPrMj4vYI5kovBWDQ2aYJZoYdYcD1eUM11axOdvaoiaZO5Yj+IZluhe
A9O9Hi3LZKV5Lma5DsfVaRX7S5gTOkQ9iq8OnWLqCcYUbrWllPknwU+6r//1
lDEfEzQe0DaFG5huglJ3U6BxJ/Mfgqc3C2xRRubzFC/svlt24igRnUOhvN9x
6r0rRPQNitnywswjbUQ0hmIiMdjb1E5E4ygutuq3BpuIaAJF3AHVihvXiaia
IiWmrn/ZPSKaTbG0RLMrZ5CIbqTwP+dRHbQR0RyKgYCso/YhIppP8c6oPLd2
nIgWUkBhkvc5iGgxxULd9r7JCSJaQjHcbQ5PdhHRcoprUxWDhukPzzRQ1CvD
Dp99QkQrKKrz7qyyTH955k6Kolqjy+Mhorso/gP1lzGG
       "]]},
     Annotation[#, "Charting`Private`Tag$148575#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1, 100}, {0., 101.99999797959184`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[58]=",ExpressionUUID->"1f1d5d10-7428-406e-bb76-b971a9e6c8e6"]
}, Open  ]],

Cell["", "Text",ExpressionUUID->"15d5d710-ca26-48da-96b0-0fc3950fbb3e"],

Cell[TextData[{
 "For the binary search algorithm, we must first create the necessary data \
before we can graph it with the ",
 StyleBox[ButtonBox["ListPlot",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/ListPlot"], "FunctionLink"],
 " function. Recall from Section 3.2 of this manual that ",
 StyleBox[ButtonBox["ListPlot",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/ListPlot"], "FunctionLink"],
 " accepts a list of the ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "7e7ba730-dcfd-4b93-b396-4fbd47c46a0a"],
 "\[Dash]",
 Cell[BoxData[
  FormBox["y", TraditionalForm]],ExpressionUUID->
  "28165219-8ce5-4586-9b43-ea9279ae6efd"],
 " pairs given as sublists. The ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "a6e67cab-86b8-4096-b0d5-a41ea1272731"],
 " values will be the values of ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "03d03425-9580-4248-b332-37a21a5eb074"],
 ". "
}], "Text",ExpressionUUID->"0c46a861-3917-407d-9b29-bf63b849d3a0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"binarySearchdata", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", 
       RowBox[{"binaryAvg", "[", "n", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "100"}], "}"}]}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellLabel->"In[59]:=",ExpressionUUID->"729ef16a-829c-425d-9033-3b46a45b4ff2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"binarySearchGraph", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"binarySearchdata", ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellLabel->"In[60]:=",ExpressionUUID->"527a5e79-f887-4440-ab68-041c317bb9c7"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0, 0, 1], PointSize[0.009166666666666668], AbsoluteThickness[
     1.6], PointBox[CompressedData["
1:eJxdk1lIVHEYxYckCHtIyaIyM80ll8bKPXP8XMfdmXHGGYuUorCHRKIXM7Ap
o8VIKcwoTFsMsU3azNzSyMigshJ7MFKTcOnBICJHDZrRc4T8+A/f/O65h/u/
3/9ctz0Fun2LFArFXuvP1ufqZxT+yP/dAX2JGGZrxYLrq9CdJHC2nOevz93v
Al4rT/P7G/P714HXL+juEl42HFY2TPaQK5dt5Qb2koDm0Rtnle7gjXLntq3I
vhLxYLl1bQD7i+1pjflkpbS22Iq8ef45c32LFM4WeSv2Qw6UkIrPmpxYT3AQ
9kcOlqLqkcPVI+QQ7NcLHCp1oW1jaQXkMOyfHC5DRU731UPkbXgfb3CEeD2+
1JMTQ96O9yNHyprdz+ocK8kqvC85SgaOTLT9+UqW+TnONrOIanKwZJkKrIjG
PKhHi6W0YbK0gXoM5kM9RlLPv2/udPKBHot5gc2xYqkssC7qcZgf9Th5YVlV
Vd5JPR7zpB4vJe3XAkaX+kJPwHzB5gSZqs2wLupqzJu6WsYjnH9fPUc9EfOn
nigPVUF9p15RT8J5UE+S6SlbUU/G+fhBT5Yet+DOQj+wIgXnRT1FTNMnnxSY
qKfi/KinikdT+aDqOPU0nCf1NIlsdN8fVk89HedLPV0OdjvcvfmWegbOm3qG
zLRPTLdPUNeg+8910cjkMVfrAps1yAO4QyNeH+0uPtoJVmiRD/q1cqZG+y2v
gn4t8kK/ViJXP9813k2/DvmhXyevy12jimfo1yFPm+DXib+l60KuP1iRiXyB
JVMc8757v8wGmzORN/ozxf5Xy44vJ+jXI3/06+V0/JuOT/fo1yOP9OtlpZ1n
64de+g3IJ/0GmbLYin4D8qqE3yDv+q4PHHABK7KQX7BkSa3r31F1FNichTzT
b+VbudZFvxH5pt8oR6fG6mqK6Tci7/Qbpat+4FBKFf0m5J9+k0xHqxe3N9Fv
wvdAv0l8ND+M9r30Z+P7UMo/qzuvqQ==
      "]]}, {}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 100.}, {0, 15.44}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[60]=",ExpressionUUID->"ff324592-4aa7-49ee-88a3-3335f3912f43"]
}, Open  ]],

Cell[TextData[{
 "We overlay the two graphs using ",
 StyleBox[ButtonBox["Show",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Show"], "FunctionLink"],
 "."
}], "Text",ExpressionUUID->"c7065598-eee0-4668-9e01-fe96dd747590"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"linearSearchGraph", ",", "binarySearchGraph"}], "]"}]], "Input",
 InitializationCell->True,
 CellLabel->"In[61]:=",ExpressionUUID->"4cb2246c-76df-442b-8156-797b3b03ef9c"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1:eJw10H9Q02UAx/GFZ2x4hcBCQzSmFxmHO3coQgLfT+CPYPJjwNzzJKRwcBYq
IHKwBaZ150xBSy/8QZ2mmCnnERCoKfFrAXay1Jtx1qlsFuwEpA3KsbQW+X2e
P973+v+tyC1Kz/eSSCTJ0/2vOo8u8JI4hNDmcN/nJFJ8cHpP4KZKhyDcip+1
NE6KZmvTi+1TDoE6iPfGSinmZvt4DE6nUK3c42mbkmJYe3XQ+WBSmKy/94fe
KcNHa+efsvW4hK66gzcdD2bhSphtUVeVR8iucRyy9vjiM32LvLPKG0kxb/tY
ewIQdH3gtZAIOTMYCVXVqi1+wTi9uvdYq3QhutMXG1/+XcF8Fd+0DncuCQhl
hiGxqWt739+vM5eg0ctd5BepBPnw6SXpPBUOdW4Y7VdyIxCy7sdfLAu4y3HE
a2i8OYq7ArkzfTtuK7nRaDlRaXppHnclxnKPjStV3FhU7Oi+vX8RV4CjodbW
LgjQ68zFgyeBMmzwk53nvomTqcW+mV9y47Gy9G5I1QVuArw6bnzy21nuKsS+
EuS/+CJ3Na4mGZWVndw1yPvCcM55mbsWu2f8sDyjl/sW+j6tCRno4iZC8/Dj
r969zE1Cis4Sazdx1SgbPROx93vuOvjXmGMC+rnJcMrmWht+5qbgyZmH1i1m
bir0Wv+/5L+moi1s3/s+29IwOzDn26IC5kgaZtoTv8saYuZr0BJ//1pHAXNE
A70qcm+Enbk5HY/ro1PnFzLH07HvkqR3zhhzawbaz9+R1W5m2jNwITRLd/gR
c1smGiPrMj4vYI5kovBWDQ2aYJZoYdYcD1eUM11axOdvaoiaZO5Yj+IZluhe
A9O9Hi3LZKV5Lma5DsfVaRX7S5gTOkQ9iq8OnWLqCcYUbrWllPknwU+6r//1
lDEfEzQe0DaFG5huglJ3U6BxJ/Mfgqc3C2xRRubzFC/svlt24igRnUOhvN9x
6r0rRPQNitnywswjbUQ0hmIiMdjb1E5E4ygutuq3BpuIaAJF3AHVihvXiaia
IiWmrn/ZPSKaTbG0RLMrZ5CIbqTwP+dRHbQR0RyKgYCso/YhIppP8c6oPLd2
nIgWUkBhkvc5iGgxxULd9r7JCSJaQjHcbQ5PdhHRcoprUxWDhukPzzRQ1CvD
Dp99QkQrKKrz7qyyTH955k6Kolqjy+Mhorso/gP1lzGG
        "]]},
      Annotation[#, "Charting`Private`Tag$148575#1"]& ]}, {}, {}}, {{}, {{}, 
     {RGBColor[0, 0, 1], PointSize[0.009166666666666668], AbsoluteThickness[
      1.6], PointBox[CompressedData["
1:eJxdk1lIVHEYxYckCHtIyaIyM80ll8bKPXP8XMfdmXHGGYuUorCHRKIXM7Ap
o8VIKcwoTFsMsU3azNzSyMigshJ7MFKTcOnBICJHDZrRc4T8+A/f/O65h/u/
3/9ctz0Fun2LFArFXuvP1ufqZxT+yP/dAX2JGGZrxYLrq9CdJHC2nOevz93v
Al4rT/P7G/P714HXL+juEl42HFY2TPaQK5dt5Qb2koDm0Rtnle7gjXLntq3I
vhLxYLl1bQD7i+1pjflkpbS22Iq8ef45c32LFM4WeSv2Qw6UkIrPmpxYT3AQ
9kcOlqLqkcPVI+QQ7NcLHCp1oW1jaQXkMOyfHC5DRU731UPkbXgfb3CEeD2+
1JMTQ96O9yNHyprdz+ocK8kqvC85SgaOTLT9+UqW+TnONrOIanKwZJkKrIjG
PKhHi6W0YbK0gXoM5kM9RlLPv2/udPKBHot5gc2xYqkssC7qcZgf9Th5YVlV
Vd5JPR7zpB4vJe3XAkaX+kJPwHzB5gSZqs2wLupqzJu6WsYjnH9fPUc9EfOn
nigPVUF9p15RT8J5UE+S6SlbUU/G+fhBT5Yet+DOQj+wIgXnRT1FTNMnnxSY
qKfi/KinikdT+aDqOPU0nCf1NIlsdN8fVk89HedLPV0OdjvcvfmWegbOm3qG
zLRPTLdPUNeg+8910cjkMVfrAps1yAO4QyNeH+0uPtoJVmiRD/q1cqZG+y2v
gn4t8kK/ViJXP9813k2/DvmhXyevy12jimfo1yFPm+DXib+l60KuP1iRiXyB
JVMc8757v8wGmzORN/ozxf5Xy44vJ+jXI3/06+V0/JuOT/fo1yOP9OtlpZ1n
64de+g3IJ/0GmbLYin4D8qqE3yDv+q4PHHABK7KQX7BkSa3r31F1FNichTzT
b+VbudZFvxH5pt8oR6fG6mqK6Tci7/Qbpat+4FBKFf0m5J9+k0xHqxe3N9Fv
wvdAv0l8ND+M9r30Z+P7UMo/qzuvqQ==
       "]]}, {}}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1, 100}, {0., 101.99999797959184`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[61]=",ExpressionUUID->"85ad4d8d-d239-452d-83cc-fe79a688c760"]
}, Open  ]],

Cell[TextData[{
 "Below we display the same graph using ",
 StyleBox[ButtonBox["Legended",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Legended"], "FunctionLink"],
 " and ",
 StyleBox[ButtonBox["LineLegend",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/LineLegend"], "FunctionLink"],
 " to illustrate some of the additional legending options."
}], "Text",ExpressionUUID->"0846372f-d52a-4a62-977b-47540e6df7f4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Legended", "[", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{"linearSearchGraph", ",", "binarySearchGraph"}], "]"}], ",", 
   RowBox[{"LineLegend", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Red", ",", "Blue"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<linear\>\"", ",", "\"\<binary\>\""}], "}"}], ",", 
     RowBox[{"LegendFunction", "\[Rule]", "Framed"}]}], "]"}]}], 
  "]"}]], "Input",
 CellLabel->"In[62]:=",ExpressionUUID->"bff1ce9b-1ffb-42a1-ba73-8d8c5e74e625"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1:eJw10H9Q02UAx/GFZ2x4hcBCQzSmFxmHO3coQgLfT+CPYPJjwNzzJKRwcBYq
IHKwBaZ150xBSy/8QZ2mmCnnERCoKfFrAXay1Jtx1qlsFuwEpA3KsbQW+X2e
P973+v+tyC1Kz/eSSCTJ0/2vOo8u8JI4hNDmcN/nJFJ8cHpP4KZKhyDcip+1
NE6KZmvTi+1TDoE6iPfGSinmZvt4DE6nUK3c42mbkmJYe3XQ+WBSmKy/94fe
KcNHa+efsvW4hK66gzcdD2bhSphtUVeVR8iucRyy9vjiM32LvLPKG0kxb/tY
ewIQdH3gtZAIOTMYCVXVqi1+wTi9uvdYq3QhutMXG1/+XcF8Fd+0DncuCQhl
hiGxqWt739+vM5eg0ctd5BepBPnw6SXpPBUOdW4Y7VdyIxCy7sdfLAu4y3HE
a2i8OYq7ArkzfTtuK7nRaDlRaXppHnclxnKPjStV3FhU7Oi+vX8RV4CjodbW
LgjQ68zFgyeBMmzwk53nvomTqcW+mV9y47Gy9G5I1QVuArw6bnzy21nuKsS+
EuS/+CJ3Na4mGZWVndw1yPvCcM55mbsWu2f8sDyjl/sW+j6tCRno4iZC8/Dj
r969zE1Cis4Sazdx1SgbPROx93vuOvjXmGMC+rnJcMrmWht+5qbgyZmH1i1m
bir0Wv+/5L+moi1s3/s+29IwOzDn26IC5kgaZtoTv8saYuZr0BJ//1pHAXNE
A70qcm+Enbk5HY/ro1PnFzLH07HvkqR3zhhzawbaz9+R1W5m2jNwITRLd/gR
c1smGiPrMj4vYI5kovBWDQ2aYJZoYdYcD1eUM11axOdvaoiaZO5Yj+IZluhe
A9O9Hi3LZKV5Lma5DsfVaRX7S5gTOkQ9iq8OnWLqCcYUbrWllPknwU+6r//1
lDEfEzQe0DaFG5huglJ3U6BxJ/Mfgqc3C2xRRubzFC/svlt24igRnUOhvN9x
6r0rRPQNitnywswjbUQ0hmIiMdjb1E5E4ygutuq3BpuIaAJF3AHVihvXiaia
IiWmrn/ZPSKaTbG0RLMrZ5CIbqTwP+dRHbQR0RyKgYCso/YhIppP8c6oPLd2
nIgWUkBhkvc5iGgxxULd9r7JCSJaQjHcbQ5PdhHRcoprUxWDhukPzzRQ1CvD
Dp99QkQrKKrz7qyyTH955k6Kolqjy+Mhorso/gP1lzGG
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$148575#1"]& ]}}, {}, {}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         PointBox[CompressedData["
1:eJxdk1lIVHEYxYckCHtIyaIyM80ll8bKPXP8XMfdmXHGGYuUorCHRKIXM7Ap
o8VIKcwoTFsMsU3azNzSyMigshJ7MFKTcOnBICJHDZrRc4T8+A/f/O65h/u/
3/9ctz0Fun2LFArFXuvP1ufqZxT+yP/dAX2JGGZrxYLrq9CdJHC2nOevz93v
Al4rT/P7G/P714HXL+juEl42HFY2TPaQK5dt5Qb2koDm0Rtnle7gjXLntq3I
vhLxYLl1bQD7i+1pjflkpbS22Iq8ef45c32LFM4WeSv2Qw6UkIrPmpxYT3AQ
9kcOlqLqkcPVI+QQ7NcLHCp1oW1jaQXkMOyfHC5DRU731UPkbXgfb3CEeD2+
1JMTQ96O9yNHyprdz+ocK8kqvC85SgaOTLT9+UqW+TnONrOIanKwZJkKrIjG
PKhHi6W0YbK0gXoM5kM9RlLPv2/udPKBHot5gc2xYqkssC7qcZgf9Th5YVlV
Vd5JPR7zpB4vJe3XAkaX+kJPwHzB5gSZqs2wLupqzJu6WsYjnH9fPUc9EfOn
nigPVUF9p15RT8J5UE+S6SlbUU/G+fhBT5Yet+DOQj+wIgXnRT1FTNMnnxSY
qKfi/KinikdT+aDqOPU0nCf1NIlsdN8fVk89HedLPV0OdjvcvfmWegbOm3qG
zLRPTLdPUNeg+8910cjkMVfrAps1yAO4QyNeH+0uPtoJVmiRD/q1cqZG+y2v
gn4t8kK/ViJXP9813k2/DvmhXyevy12jimfo1yFPm+DXib+l60KuP1iRiXyB
JVMc8757v8wGmzORN/ozxf5Xy44vJ+jXI3/06+V0/JuOT/fo1yOP9OtlpZ1n
64de+g3IJ/0GmbLYin4D8qqE3yDv+q4PHHABK7KQX7BkSa3r31F1FNichTzT
b+VbudZFvxH5pt8oR6fG6mqK6Tci7/Qbpat+4FBKFf0m5J9+k0xHqxe3N9Fv
wvdAv0l8ND+M9r30Z+P7UMo/qzuvqQ==
          "]]}, {}}}, {}, {}, {}, {}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {1, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{1, 100}, {0., 101.99999797959184`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"linear\"", "\"binary\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0, 0, 1], Editable -> False, Selectable -> False]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", "Framed"}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellLabel->"Out[62]=",ExpressionUUID->"1ccc60ac-3ef1-4c68-8162-61c470d058d8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Computations and Explorations 1", "Subsection",
 PageBreakWithin->False,
 CellTags->
  "SolutionsCE1",ExpressionUUID->"97d12ca7-a057-4054-864d-0ceba0c264d2"],

Cell[TextData[{
 "We know that ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["n", "b"], TraditionalForm]],ExpressionUUID->
  "38d92409-2c86-45cd-848d-12c1879dabb2"],
 " is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"O", "(", 
    SuperscriptBox["d", "n"], ")"}], TraditionalForm]],ExpressionUUID->
  "418bc2ca-402e-4c1d-b515-f163f5da814a"],
 " when ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]],ExpressionUUID->
  "b4f2814e-5838-47e2-8959-268a059ae86b"],
 " and ",
 Cell[BoxData[
  FormBox["d", TraditionalForm]],ExpressionUUID->
  "0cf99c8a-0a6b-4b98-9918-33b05d27dd65"],
 " are positive numbers with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"d", "\[GreaterEqual]", "2"}], TraditionalForm]],ExpressionUUID->
  "42f6fad4-b76a-4e87-8f0f-5e904836c14b"],
 ". Give values of the constants ",
 Cell[BoxData[
  FormBox["C", TraditionalForm]],ExpressionUUID->
  "3a973250-905f-40c7-a914-10969dedb6e8"],
 " and ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]],ExpressionUUID->
  "5e46ce87-9eaf-4c52-b960-e63d92981fc5"],
 " such that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["n", "b"], "\[LessEqual]", 
    RowBox[{"C", "\[CenterDot]", 
     SuperscriptBox["d", "n"]}]}], TraditionalForm]],ExpressionUUID->
  "bdfc6e0e-fd06-42e2-a1b6-422f683eccbf"],
 " whenever ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", ">", "k"}], TraditionalForm]],ExpressionUUID->
  "0e52c71c-7768-4b49-8871-3f13cf886d80"],
 " for each of these sets of values: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", "=", "10"}], TraditionalForm]],ExpressionUUID->
  "910bfc0d-3b72-400d-81fd-a9415d3f59ea"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"d", "=", "2"}], TraditionalForm]],ExpressionUUID->
  "0f4fec31-792b-4ddb-860b-9301222c5318"],
 "; ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", "=", "20"}], TraditionalForm]],ExpressionUUID->
  "f4d7f102-35c2-43b4-a4b9-54183eed0894"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"d", "=", "3"}], TraditionalForm]],ExpressionUUID->
  "57bb87e1-bc28-4cc4-9261-895db73b5956"],
 "; ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", "=", "1000"}], TraditionalForm]],ExpressionUUID->
  "1e6695f0-4704-4f1d-8756-c3a4c1444f27"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"d", "=", "7"}], TraditionalForm]],ExpressionUUID->
  "688e03a4-89f9-4218-98f9-26477ef82fd2"],
 "."
}], "Problem",
 PageBreakAbove->False,
 PageBreakWithin->
  False,ExpressionUUID->"f842e071-af69-42d8-8d31-ca867ec4483a"],

Cell[TextData[{
 StyleBox["Solution:",
  FontSlant->"Italic"],
 " For ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", "=", "10"}], TraditionalForm]],ExpressionUUID->
  "a9411e29-4a7c-47e2-bdb0-af2e3b920f85"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"d", "=", "2"}], TraditionalForm]],ExpressionUUID->
  "e14738d9-bd81-45e7-b289-05c1187b4b16"],
 ", we need to compare the function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "n", ")"}], "=", 
    SuperscriptBox["n", "10"]}], TraditionalForm]],ExpressionUUID->
  "982cf187-1556-46bf-ac09-ff4bdda9ae7f"],
 " to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"g", "(", "n", ")"}], "=", 
    SuperscriptBox["2", "n"]}], TraditionalForm]],ExpressionUUID->
  "30a36464-4bb9-41d7-8dc4-b34705a5a3e8"],
 ". Following the approach we took in Section 3.2, we will use ",
 StyleBox[ButtonBox["Manipulate",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Manipulate"], "FunctionLink"],
 " to graph the functions while dynamically changing the value of ",
 Cell[BoxData[
  FormBox["C", TraditionalForm]],ExpressionUUID->
  "55f340fb-8a85-42bc-a750-fb0708401ad0"],
 ". Note that the values of ",
 Cell[BoxData[
  FormBox["C", TraditionalForm]],ExpressionUUID->
  "c7f953bb-5968-463c-8a0b-86478fb038ce"],
 " that will suffice with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", "<", "20"}], TraditionalForm]],ExpressionUUID->
  "cbc4c027-9c4c-4ded-a031-ee110ea55e4d"],
 " are extremely large. When exploring other values of ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]],ExpressionUUID->
  "278dd873-9f6e-4b22-8098-74a3491e949d"],
 " and ",
 Cell[BoxData[
  FormBox["d", TraditionalForm]],ExpressionUUID->
  "2aa83dd8-756b-405b-9d86-27e55cb8fe6e"],
 ", you may have to modify the maximum values for ",
 Cell[BoxData[
  FormBox["C", TraditionalForm]],ExpressionUUID->
  "52d76085-b9ca-4286-bb21-6869750a090d"],
 ". It is also possible to find smaller values of ",
 Cell[BoxData[
  FormBox["C", TraditionalForm]],ExpressionUUID->
  "0eb64735-3194-48bb-90f6-3358983f73bc"],
 " by increasing the horizontal extent of the graph."
}], "Text",ExpressionUUID->"6b23c49b-b821-43a1-a69c-b4abbff3e14c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"n", "^", "10"}], ",", 
       RowBox[{"c", "*", 
        RowBox[{"2", "^", "n"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "20"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\!\(\*Cell[TextData[Cell[BoxData[FormBox[
SuperscriptBox[\"n\", \"10\"], \
TraditionalForm]],ExpressionUUID->\"27972972-d150-4f5d-935d-a6f7290f01af\"]],\
ExpressionUUID->\"bafb2304-5173-465c-9cbb-f3eb317a1e52\"]\)\>\"", ",", 
        "\"\<\!\(\*Cell[TextData[Cell[BoxData[FormBox[RowBox[{\"C\", \" \", 
SuperscriptBox[\"2\", \"n\"]}], \
TraditionalForm]],ExpressionUUID->\"f38a20a4-b3cd-4878-8699-6534a0444acf\"]],\
ExpressionUUID->\"97383b8e-ddc6-475a-a1d3-19004db6bec1\"]\)\>\""}], "}"}]}]}],
     "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", "0", ",", 
     RowBox[{"10", "^", "8"}]}], "}"}]}], "]"}]], "Input",
 InitializationCell->True,
 CellLabel->"In[63]:=",ExpressionUUID->"ac9937c0-274f-4679-96d2-77e1d1feaf8e"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`c$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`c$$], 0, 100000000}}, Typeset`size$$ = {
    431., {99., 105.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`c$153811$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`c$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`c$$, $CellContext`c$153811$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[{$CellContext`n^10, $CellContext`c$$ 
         2^$CellContext`n}, {$CellContext`n, 0, 20}, 
        PlotLegends -> {
         "\!\(\*Cell[TextData[Cell[BoxData[FormBox[\nSuperscriptBox[\"n\", \
\"10\"], TraditionalForm]]]]]\)", 
          "\!\(\*Cell[TextData[Cell[BoxData[FormBox[\n RowBox[{\"C\", \" \", \
\nSuperscriptBox[\"2\", \"n\"]}], TraditionalForm]]]]]\)"}], 
      "Specifications" :> {{$CellContext`c$$, 0, 100000000}}, "Options" :> {},
       "DefaultOptions" :> {}],
     ImageSizeCache->{474., {144., 150.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellLabel->"Out[63]=",ExpressionUUID->"799632d1-abfd-40f1-99b2-5a223bfa87d2"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercises", "Section",
 CellTags->"Exercises",ExpressionUUID->"9d4ceca6-b160-43b5-b313-6a1287b57d06"],

Cell[CellGroupData[{

Cell[TextData[{
 "Write step-by-step instructions, then pseudocode, and then implement an \
algorithm in the Wolfram Language to determine the ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]],ExpressionUUID->
  "954d8256-bf78-4dac-b05b-8296ab7ecf28"],
 " largest integers in a list of integers."
}], "Item1Exercise",ExpressionUUID->"e2150973-f2e6-4672-ac75-6e604e87450d"],

Cell["\<\
Implement the linear search presented as Algorithm 2 in Section 3.1 of the \
text. \
\>", "Item1Exercise",ExpressionUUID->"de39c0af-9ba8-4261-ae2b-09c6ffe60919"],

Cell["\<\
Implement the insertion sort presented as Algorithm 5 in Section 3.1 of the \
text. \
\>", "Item1Exercise",ExpressionUUID->"dd9505ca-2fe1-479c-9649-3ca9bc8c0a4a"],

Cell["\<\
Implement the cashier\[CloseCurlyQuote]s algorithm presented as Algorithm 7 \
in Section 3.1 of the text. \
\>", "Item1Exercise",ExpressionUUID->"6547c7bf-74b1-4db0-872c-39a145225078"],

Cell["\<\
Implement the algorithm for scheduling talks presented as Algorithm 8 in \
Section 3.1 of the text. \
\>", "Item1Exercise",ExpressionUUID->"fe076f98-dae7-4e99-ba9d-ccf1b076e39f"],

Cell["\<\
Implement the brute-force algorithm for finding the closest pair of points as \
presented in Algorithm 3 in Section 3.3 of the text. \
\>", "Item1Exercise",ExpressionUUID->"1245ad4a-725b-41cd-90ff-45cb1637b04f"],

Cell[TextData[{
 "Modify the ",
 StyleBox["bubbleSort", "Code"],
 " function so that it terminates when no more interchanges are necessary. \
(See Exercise 39 from Section 3.1.)"
}], "Item1Exercise",ExpressionUUID->"84ecdfdf-019b-4c77-a3be-0af39199eecb"],

Cell["\<\
Implement the selection sort algorithm in the Wolfram Language. (Refer to the \
preamble to Exercise 43 in Section 3.1 for information on selection sort.) \
\>", "Item1Exercise",ExpressionUUID->"715a234a-9697-44a5-9113-83319825f4d8"],

Cell["\<\
Implement the binary insertion sort in the Wolfram Language. (Refer to the \
preamble to Exercise 49 in Section 3.1 for information on the binary \
insertion sort.)\
\>", "Item1Exercise",ExpressionUUID->"197c3718-0b21-4ec5-9952-ee79e4ebe8ca"],

Cell["\<\
Implement the deferred acceptance algorithm in the Wolfram Language. (Refer \
to the preamble to Exercise 65 in Section 3.1 for information on the deferred \
acceptance algorithm.)\
\>", "Item1Exercise",ExpressionUUID->"2a58affa-ed7e-41fc-8f6d-a00ea2f2900f"],

Cell["\<\
Implement the Boyer\[Dash]Moore majority vote algorithm in the Wolfram \
Language. (Refer tot he preamble to Exercise 68 in Section 3.1 for \
information on the majority vote algorithm.)\
\>", "Item1Exercise",ExpressionUUID->"3712d07f-ba54-4e6b-97c7-6cd90dae5430"],

Cell[TextData[{
 "Following the solution to Computations and Explorations 1, use ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to determine values for ",
 Cell[BoxData[
  FormBox["C", TraditionalForm]],ExpressionUUID->
  "fbeecb84-fe6c-439d-aaa9-2fdc81996434"],
 " and ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]],ExpressionUUID->
  "61f03646-646e-48cf-af01-5738a5976259"],
 " that witness for the fact that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", "x", ")"}], TraditionalForm]],ExpressionUUID->
  "4ce6a96e-c01a-4aed-acee-69b871eb2a44"],
 " is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"O", "(", 
    RowBox[{"g", "(", "x", ")"}], ")"}], TraditionalForm]],ExpressionUUID->
  "92911176-2bf9-430c-8da6-a82273f50044"],
 " for each of the pairs of functions given below."
}], "Item1Exercise",ExpressionUUID->"5e5bdc4a-e01b-4b96-bb02-287736d9651a"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{"7", "\[CenterDot]", 
     RowBox[{"ln", "(", 
      RowBox[{
       RowBox[{"3", 
        SuperscriptBox["x", "2"]}], "-", 
       RowBox[{"2", "x"}], "+", "5"}], ")"}]}]}], TraditionalForm]],
  ExpressionUUID->"190bddd5-377c-4150-8c60-15d85f2c92c4"],
 "; ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"g", "(", "x", ")"}], "=", "x"}], TraditionalForm]],
  ExpressionUUID->"56053388-2a65-4e52-8d04-a7efed1ca5e0"]
}], "Item2Exercise",ExpressionUUID->"d115eea7-bf1e-4547-965d-c97894334f44"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    FractionBox[
     SuperscriptBox["x", "4"], 
     RowBox[{
      SuperscriptBox["x", "2"], "-", 
      RowBox[{"4", "x"}], "-", "4"}]]}], TraditionalForm]],ExpressionUUID->
  "88128fec-6d7d-4afe-8584-d3a4db858bed"],
 "; ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"g", "(", "x", ")"}], "=", 
    SuperscriptBox["x", "2"]}], TraditionalForm]],ExpressionUUID->
  "5755a543-c90a-48de-aa7b-2219295d1f5c"]
}], "Item2Exercise",ExpressionUUID->"b5b5d46a-ff34-432b-a55f-b369245384bf"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     RowBox[{"\[LeftFloor]", "x", "\[RightFloor]"}], "\[CenterDot]", 
     RowBox[{"\[LeftCeiling]", "x", "\[RightCeiling]"}]}]}], 
   TraditionalForm]],ExpressionUUID->"a43a78b4-77c4-4f7c-8b47-32d81f9f9bef"],
 "; ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"g", "(", "x", ")"}], "=", 
    SuperscriptBox["x", "2"]}], TraditionalForm]],ExpressionUUID->
  "46d46c7b-334e-483b-8a83-efb4b9ece8d3"]
}], "Item2Exercise",ExpressionUUID->"636e2e54-e11b-4f1d-94cf-a33c4f34b38a"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{"n", "\[CenterDot]", 
     RowBox[{"ln", "(", "n", ")"}]}]}], TraditionalForm]],ExpressionUUID->
  "a70d97ba-3c8a-4308-a80e-f0c24d48fbd5"],
 "; ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"g", "(", "x", ")"}], "=", 
    RowBox[{"ln", "(", 
     RowBox[{"n", "!"}], ")"}]}], TraditionalForm]],ExpressionUUID->
  "b7e7a5e5-e16a-4008-a576-cc6b56f1e83e"]
}], "Item2Exercise",ExpressionUUID->"4b073670-2651-42d2-9a81-88fb2f13ed2f"]
}, Open  ]],

Cell[TextData[{
 "Using the approach described in Section 3.3 of this manual, compare the \
average-case performance of the ",
 StyleBox["bubbleSort", "Code"],
 " function presented in Section 3.1 to the Wolfram \
Language\[CloseCurlyQuote]s ",
 StyleBox[ButtonBox["Sort",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Sort"], "FunctionLink"],
 " function."
}], "Item1Exercise",ExpressionUUID->"0b371dde-789d-4e24-9ea8-eee80e3860fe"],

Cell[TextData[{
 "Using the solution to Computer Project 10 as a model, compare the \
average-case complexity (as measured by number of comparisons) of the ",
 StyleBox["bubbleSort", "Code"],
 " function with the modified procedure that you implemented as Exercise 7. "
}], "Item1Exercise",ExpressionUUID->"2967f9d2-d4a5-4057-a011-766ce0322b5b"],

Cell[TextData[{
 "Using the solution to Computer Project 10 as a model, compare the \
average-case complexity (as measured by number of comparisons) of the ",
 StyleBox["bubbleSort", "Code"],
 " function with the other sort procedures you wrote (e.g., insertion sort, \
selection sort, or binary selection sort)."
}], "Item1Exercise",ExpressionUUID->"7d66d9c0-f9c4-482d-b853-425e33499b74"],

Cell[TextData[{
 "Implement the two algorithms suggested by Exercise 31 of Section 3.1 for \
determining whether two strings are anagrams. Then, using the approach \
described in Section 3.3 of this manual, compare the average-case performance \
of the two algorithms. Compare the results of your performance analysis with \
the big-",
 Cell[BoxData[
  FormBox["O", TraditionalForm]],ExpressionUUID->
  "903f95c2-8e0a-4ebd-9249-d13cbfff79ad"],
 " estimates you found in Exercise 38 of Section 3.3."
}], "Item1Exercise",ExpressionUUID->"688c8232-93ea-4190-a97a-0553488b3011"],

Cell[TextData[{
 "Implement the two algorithms suggested by Exercise 32 of Section 3.1 for \
finding the closest of ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "4e8f488a-8094-4ff0-8776-3a3bd3c6c2da"],
 " real numbers. Then, using the approach described in Section 3.3 of this \
manual, compare the average-case performance of the two algorithms. Compare \
the results of your performance analysis with the big-",
 Cell[BoxData[
  FormBox["O", TraditionalForm]],ExpressionUUID->
  "6c137c8c-6220-4187-8327-fdbd7a708932"],
 " estimates you found in Exercise 39 of Section 3.3."
}], "Item1Exercise",ExpressionUUID->"e0d62ef1-7b07-428f-807a-396b946adc43"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
PrintingStyleEnvironment->"Working",
WindowSize->{725, 850},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
DockedCells->Cell[
  BoxData[
   TagBox[
    GridBox[{{"\"Exploring Discrete Mathematics with Mathematica\"", 
       ActionMenuBox[
       "\"Navigation\"", {
        "\"CloseAll\"" :> Module[{$CellContext`DJSection$}, SelectionMove[
             SelectedNotebook[], All, Notebook]; FrontEndExecute[
             FrontEndToken["SelectionOpenAllGroups"]]; 
           Do[NotebookLocate[$CellContext`DJSection$]; FrontEndExecute[
               FrontEndToken["OpenCloseGroup"]], {$CellContext`DJSection$, {
              "Section1a", "Section1b", "Section1c", "Section2a", "Section2b",
                "Section2c", "Section3a", "Section3b", "SolutionsCE1", 
               "SolutionsCP9", "Section1", "Section2", "Section3", 
               "Solutions", "Exercises"}}]; SelectionMove[
             SelectedNotebook[], Before, Notebook]], "\"Section1\"" :> 
         Module[{}, Do[NotebookLocate[$CellContext`DJSection]; FrontEndExecute[
                FrontEndToken[
                "SelectionCloseAllGroups"]], {$CellContext`DJSection, {
               "Section1", "Section2", "Section3", "Solutions", "Exercises"}}]
              NotebookLocate["Section1"]; FrontEndExecute[
             FrontEndToken["SelectionCloseAllGroups"]]; FrontEndExecute[
             FrontEndToken["SelectionOpenAllGroups"]]; SelectionMove[
             SelectedNotebook[], Before, Cell]], "\"Section2\"" :> 
         Module[{}, Do[NotebookLocate[$CellContext`DJSection]; FrontEndExecute[
                FrontEndToken[
                "SelectionCloseAllGroups"]], {$CellContext`DJSection, {
               "Section1", "Section2", "Section3", "Solutions", "Exercises"}}]
              NotebookLocate["Section2"]; FrontEndExecute[
             FrontEndToken["SelectionCloseAllGroups"]]; FrontEndExecute[
             FrontEndToken["SelectionOpenAllGroups"]]; SelectionMove[
             SelectedNotebook[], Before, Cell]], "\"Section3\"" :> 
         Module[{}, Do[NotebookLocate[$CellContext`DJSection]; FrontEndExecute[
                FrontEndToken[
                "SelectionCloseAllGroups"]], {$CellContext`DJSection, {
               "Section1", "Section2", "Section3", "Solutions", "Exercises"}}]
              NotebookLocate["Section3"]; FrontEndExecute[
             FrontEndToken["SelectionCloseAllGroups"]]; FrontEndExecute[
             FrontEndToken["SelectionOpenAllGroups"]]; SelectionMove[
             SelectedNotebook[], Before, Cell]], "\"Solutions\"" :> 
         Module[{}, Do[NotebookLocate[$CellContext`DJSection]; FrontEndExecute[
                FrontEndToken[
                "SelectionCloseAllGroups"]], {$CellContext`DJSection, {
               "Section1", "Section2", "Section3", "Solutions", "Exercises"}}]
              NotebookLocate["Solutions"]; FrontEndExecute[
             FrontEndToken["SelectionCloseAllGroups"]]; FrontEndExecute[
             FrontEndToken["SelectionOpenAllGroups"]]; SelectionMove[
             SelectedNotebook[], Before, Cell]], "\"Exercises\"" :> 
         Module[{}, Do[NotebookLocate[$CellContext`DJSection]; FrontEndExecute[
                FrontEndToken[
                "SelectionCloseAllGroups"]], {$CellContext`DJSection, {
               "Section1", "Section2", "Section3", "Solutions", "Exercises"}}]
              NotebookLocate["Exercises"]; FrontEndExecute[
             FrontEndToken["SelectionCloseAllGroups"]]; FrontEndExecute[
             FrontEndToken["SelectionOpenAllGroups"]]; SelectionMove[
             SelectedNotebook[], Before, Cell]], "\"Open All\"" :> 
         Module[{$CellContext`DJSection$}, 
           Do[NotebookLocate[$CellContext`DJSection$]; FrontEndExecute[
               FrontEndToken[
               "SelectionOpenAllGroups"]], {$CellContext`DJSection$, {
              "Exercises", "Section1", "Section1a", "Section1b", "Section1c", 
               "Section2", "Section2a", "Section2b", "Section2c", "Section3", 
               "Section3a", "Section3b", "Solutions", "SolutionsCE1", 
               "SolutionsCP9"}}] SelectionMove[
             SelectedNotebook[], Before, Notebook]]}]}}, 
     GridBoxAlignment -> {
      "Columns" -> {Left, Baseline}, "Rows" -> {Right, Baseline}}, AutoDelete -> 
     False, GridBoxItemSize -> {"Columns" -> {
         Scaled[0.8], 
         Scaled[0.2]}}], "Grid"]], "DockedCell", FontFamily -> "Times"],
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
ShowSelection->True,
Magnification->1,
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> 
     FrontEnd`FileName[{"Book"}, "Textbook.nb", CharacterEncoding -> 
       "UTF-8"]]], 
   Cell[
    StyleData[All, "Printout"], PageWidth -> PaperWidth, 
    CellHorizontalScrolling -> True, 
    CellLabelMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
    ShowAutoStyles -> False, 
    AutoStyleOptions -> {"HighlightMisspelledWords" -> False}, ScriptMinSize -> 
    9, MenuSortingValue -> 1500, 
    PrivateFontOptions -> {"FontType" -> "Outline"}, Magnification -> 1], 
   Cell[
    StyleData["Title"], Editable -> False, ShowCellBracket -> Automatic, 
    CellGroupingRules -> {"TitleGrouping", 0}, PageBreakBelow -> False, 
    DefaultNewInlineCellStyle -> {}, LanguageCategory -> "NaturalLanguage", 
    FontFamily -> "Helvetica", FontSize -> 25, FontWeight -> "Bold", 
    FontColor -> GrayLevel[0.137255]], 
   Cell[
    StyleData["BookChapterTitle", StyleDefinitions -> StyleData["Title"]], 
    CellFrame -> {{0, 0}, {1, 1}}, CellDingbat -> Cell[
      BoxData[
       GraphicsBox[{{
          RGBColor[0.09375, 0.570313, 0.816406], 
          RectangleBox[{0, 0}]}, {
          GrayLevel[1], FontSize -> 35, FontWeight -> Bold, FontFamily -> 
          "Helvetica", 
          InsetBox[
           CounterBox["ChapterNumber"], {0.5, 0.45}, {Center, Center}]}}, 
        ImageSize -> {70, 70}]], "Output"], 
    CellMargins -> {{100, 0}, {20, 20}}, CellFrameColor -> GrayLevel[1]], 
   Cell[
    StyleData["DockedCell"], CellMargins -> {{12, 12}, {20, 0}}, 
    CellGroupingRules -> "TitleGrouping", 
    ConversionRules :> {"TeX" -> {"\n\\chapter{", "}"}}, 
    TaggingRules :> {"CounterSettings" -> {"CounterTarget" -> "CellGroup"}}, 
    PageBreakAbove -> False, PageBreakBelow -> False, LineSpacing -> {1, 2}, 
    MenuSortingValue -> 1105, FontFamily -> "Helvetica", FontSize -> 27, 
    FontWeight -> "Bold", Background -> RGBColor[0.09375, 0.570313, 0.816406],
     CounterBoxOptions -> {
     CounterFunction :> Identity}, $CellContext`DefaultReturnCreatedCellStyle -> 
    "Section"], 
   Cell[
    StyleData["FunctionLink"], ConversionRules :> {"TeX" -> {{"", 
         $CellContext`ExportAsHyperRef[], ""}, {"", Automatic, ""}}}, 
    MenuSortingValue -> 1105, ButtonStyleMenuListing -> None, FontFamily -> 
    "Courier", FontVariations -> {"Underline" -> True}, FontColor -> 
    RGBColor[0, 0, 1], 
    ButtonBoxOptions -> {Active -> True, ButtonFunction :> (FrontEndExecute[{
         FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> ButtonData}], 
   Cell[
    StyleData["Problem"], CellMargins -> {{40, 12}, {15, 15}}, 
    CellGroupingRules -> {"GroupTogetherNestedGrouping", 15010}, 
    ConversionRules :> {
     "TeX" -> {{"", Automatic, ""}, {"\n\n", Automatic, ""}}}, 
    TaggingRules :> {
     "ExtraConversionRules" -> {"General" -> {"RestartList" -> False}}}], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Item1Exercise"], CellDingbat -> Cell[
         TextData[{
           CounterBox["Item1Exercise"], "."}], CellSize -> {30, Inherited}, 
         TextAlignment -> Right, FontWeight -> "Bold"], 
       CellMargins -> {{50, 12}, {3, 5}}, 
       CellGroupingRules -> {"GroupTogetherNestedGrouping", 17000}, 
       CellFrameLabels -> {{None, None}, {None, None}}, CellFrameLabelMargins -> 
       6, CounterIncrements -> "Item1Exercise", 
       CounterAssignments -> {{"Item2Exercise", 0}}, MenuSortingValue -> 
       4100], 
      Cell[
       StyleData["Item1Exercise", "Printout"], CellDingbat -> Cell[
         TextData[{
           CounterBox["Item1Exercise"], "."}], CellSize -> {20, Inherited}, 
         TextAlignment -> Right, FontWeight -> "Bold"], 
       CellMargins -> {{35, 12}, {3, 5}}, 
       CellGroupingRules -> {"GroupTogetherNestedGrouping", 17000}, 
       CellFrameLabels -> {{None, None}, {None, None}}, CellFrameLabelMargins -> 
       6]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["ExerciseContinuation"], CellMargins -> {{50, 12}, {1, 3}}, 
       CellGroupingRules -> {"GroupTogetherNestedGrouping", 17000}, 
       CellFrameLabels -> {{None, None}, {None, None}}, CellFrameLabelMargins -> 
       6, MenuSortingValue -> 4101], 
      Cell[
       StyleData["ExerciseContinuation", "Printout"], 
       CellMargins -> {{35, 12}, {1, 3}}, 
       CellFrameLabels -> {{None, None}, {None, None}}, CellFrameLabelMargins -> 
       6]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Item2Exercise"], CellDingbat -> Cell[
         TextData[{
           CounterBox["Item2Exercise"], "."}], CellSize -> {32, Inherited}, 
         TextAlignment -> Right, FontWeight -> "Bold"], 
       CellMargins -> {{75, 12}, {1, 2}}, 
       CellGroupingRules -> {"GroupTogetherNestedGrouping", 17100}, 
       CellFrameLabels -> {{None, None}, {None, None}}, CellFrameLabelMargins -> 
       6, CounterIncrements -> "Item2Exercise", MenuSortingValue -> 4200, 
       CounterBoxOptions -> {CounterFunction :> (Part[
           CharacterRange["a", "z"], #]& )}], 
      Cell[
       StyleData["Item2Exercise", "Printout"], CellDingbat -> Cell[
         TextData[{
           CounterBox["Item2Exercise"], "."}], CellSize -> {20, Inherited}, 
         TextAlignment -> Right, FontWeight -> "Bold"], 
       CellMargins -> {{50, 12}, {1, 2}}, 
       CellFrameLabels -> {{None, None}, {None, None}}, CellFrameLabelMargins -> 
       6, CounterBoxOptions -> {CounterFunction :> (Part[
           CharacterRange["a", "z"], #]& )}]}, Open]], 
   Cell[
    StyleData["ExerciseEquation"], CellMargins -> {{36, 12}, {7, 7}}, 
    CellGroupingRules -> {"GroupTogetherNestedGrouping", 17200}, 
    CellHorizontalScrolling -> True, 
    CellFrameLabels -> {{None, None}, {None, None}}, DefaultFormatType -> 
    TraditionalForm, InputAutoReplacements -> {}, TextAlignment -> Center, 
    MenuSortingValue -> 4300, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}], 
   Cell[
    StyleData["myCode"], CellMargins -> {{66, 10}, {5, 10}}, 
    StyleKeyMapping -> {"=" -> "WolframAlphaShort"}, Evaluatable -> False, 
    CellGroupingRules -> "InputGrouping", TextClipboardType -> "InputText", 
    PageBreakWithin -> False, GroupPageBreakWithin -> False, 
    DefaultFormatType -> DefaultInputFormatType, ContextMenu -> 
    FEPrivate`FrontEndResource["ContextMenus", "myCode"], ShowAutoStyles -> 
    True, "TwoByteSyntaxCharacterAutoReplacement" -> True, 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    AutoItalicWords -> {}, AutoQuoteCharacters -> {}, 
    PasteAutoQuoteCharacters -> {}, LanguageCategory -> "Mathematica", 
    FormatType -> InputForm, NumberMarks -> True, 
    LinebreakAdjustments -> {0.85, 2, 10, 0, 1}, CounterIncrements -> "Code", 
    MenuSortingValue -> 1495, MenuCommandKey -> "8", FontWeight -> 
    "Bold", $CellContext`StripStyleOnPaste -> True], 
   Cell[
    StyleData["CodeVar"], DefaultFormatType -> DefaultInputFormatType, 
    LineBreakWithin -> False, MenuSortingValue -> 10000, FontWeight -> "Bold",
     FontSlant -> "Italic", FontColor -> GrayLevel[0.4]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Section"], CellFrame -> {{6, 0}, {0, 1}}, ShowCellBracket -> 
       Automatic, CellMargins -> {{12, 12}, {3, 24}}, 
       CellGroupingRules -> {"SectionGrouping", 30}, 
       ConversionRules :> {
        "TeX" -> {"\n\\section{", "}"}, 
         "HTML" -> {"<h3 class=\"Section\">", "</h3>"}}, 
       TaggingRules :> {
        "CounterSettings" -> {
          "CounterFormat" -> {"BookChapterNumber", ".", "Section"}, 
           "CounterTarget" -> "Cell", "XRefPrefix" -> "Section"}}, 
       PageBreakBelow -> False, CellFrameMargins -> {{8, 8}, {4, 6}}, 
       CellFrameColor -> RGBColor[0.09375, 0.570313, 0.816406], TabSpacings -> 
       2.1, CounterIncrements -> {
        "Section", "SectionHeader", "SubsectionHeader", "SubsubsectionHeader",
          "SubsubsubsectionHeader"}, FontFamily -> "Helvetica", FontSize -> 
       16, FontWeight -> "Bold", Background -> GrayLevel[0.999985]], 
      Cell[
       StyleData["Section", "Printout"], CellFrame -> {{4, 0}, {0, 0.5}}, 
       CellMargins -> {{2, 2}, {3, 21}}, CellFrameMargins -> {{6, 6}, {3, 5}},
        CellFrameColor -> RGBColor[0.09375, 0.570313, 0.816406]], 
      Cell[
       StyleData["Section", "DoubleSpacedPrintout"], 
       CellFrame -> {{4, 0}, {0, 0.5}}, CellMargins -> {{2, 2}, {3, 21}}, 
       CellFrameMargins -> {{6, 6}, {3, 5}}, CellFrameColor -> 
       RGBColor[0.09375, 0.570313, 0.816406], FontSize -> 14]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Subsubsection"], CellDingbat -> None, 
       CellMargins -> {{12, 12}, {0, 6}}, 
       CellElementSpacings -> {"ClosedGroupTopMargin" -> 12}, 
       CellGroupingRules -> {"SectionGrouping", 50}, 
       ConversionRules :> {
        "TeX" -> {"\n\\subsubsection{", "}"}, 
         "HTML" -> {"<h5 class=\"Subsubsection\">", "</h5>"}}, PageBreakBelow -> 
       False, CellFrameLabelMargins -> 4, 
       CounterIncrements -> {
        "Subsubsection", "SubsubsectionHeader", "SubsubsubsectionHeader"}, 
       FontFamily -> "Helvetica", FontSize -> 11, FontWeight -> "Bold", 
       FontSlant -> "Italic"], 
      Cell[
       StyleData["Subsubsection", "Printout"], FontFamily -> "Helvetica", 
       FontSize -> 11, FontWeight -> "Bold", FontSlant -> "Italic"]}, Open]], 
   
   Cell[
    StyleData["Equation"], CellMargins -> {{26, 10}, {7, 7}}, 
    ConversionRules :> {
     "HTML" -> {{"", ""}, {"<p class=\"Equation\">", "</p>"}}}, 
    CellHorizontalScrolling -> True, DefaultFormatType -> TraditionalForm, 
    InputAutoReplacements -> {}, TextAlignment -> Center, CounterIncrements -> 
    "Equation", ButtonBoxOptions -> {Appearance -> {Automatic, None}}], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Item1Numbered"], CellDingbat -> Cell[
         TextData[{
           CounterBox["Item1Numbered"], "."}], CellSize -> {32, Inherited}, 
         TextAlignment -> Right, 
         TextJustification -> (FontWeight -> "Plain")], 
       CellMargins -> {{36, 12}, {1, 3}}, 
       CellGroupingRules -> {"GroupTogetherNestedGrouping", 15000}, 
       ConversionRules :> {{"TeX" -> {"\n\\item ", ""}}, {
         "HTML" -> {"<li>", "</li>"}}}, 
       TaggingRules :> {
        "ExtraConversionRules" -> {
          "General" -> {"NestingLevel" -> 30}, 
           "TeX" -> {"CellGroupEnvironment" -> "enumerate"}, 
           "HTML" -> {"CellGroupEnvironment" -> "ol"}}}, 
       CellFrameLabels -> {{None, None}, {None, None}}, CellFrameLabelMargins -> 
       6, TextJustification -> 1, CounterIncrements -> "Item1Numbered", 
       CounterAssignments -> {{"Item2Numbered", 0}, {"Item3Numbered", 0}}], 
      Cell[
       StyleData["Item1Numbered", "Printout"], CellDingbat -> Cell[
         TextData[{
           CounterBox["Item1Numbered"], "."}], CellSize -> {20, Inherited}, 
         TextAlignment -> Right, FontWeight -> "Plain"], 
       CellMargins -> {{24, 2}, {1, 2}}, CellFrameLabelMargins -> 3, 
       TextJustification -> 1]}, Open]], 
   Cell[
    StyleData["InitializationCell"], Background -> GrayLevel[1]], 
   Cell[
    StyleData["Item1"], TextJustification -> 1], 
   Cell[
    StyleData["Item1Printout"], TextJustification -> 1, MenuSortingValue -> 
    10000], 
   Cell[
    StyleData["Code"], FormatType -> InputForm]}, Visible -> False, 
  FrontEndVersion -> 
  "11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, 2018)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Section1"->{
  Cell[3246, 79, 111, 1, 55, "Section",ExpressionUUID->"97a1c89a-f900-4ef2-897a-18bdd3ed428b",
   CellTags->"Section1"]},
 "Section1a"->{
  Cell[4751, 108, 120, 1, 32, "Subsection",ExpressionUUID->"6d07dc9e-88c9-4cc0-9b54-0fe1b16baa34",
   CellTags->"Section1a"]},
 "Section1b"->{
  Cell[14517, 353, 114, 1, 32, "Subsection",ExpressionUUID->"3698e4da-6c76-410b-ad52-d5f6bfa6be7d",
   CellTags->"Section1b"]},
 "Section1c"->{
  Cell[28763, 734, 112, 1, 32, "Subsection",ExpressionUUID->"1b6a45fa-7e76-4a03-8729-85181591ad5f",
   CellTags->"Section1c"]},
 "Section2"->{
  Cell[38670, 1016, 124, 1, 55, "Section",ExpressionUUID->"8d65f244-2e1c-4890-836e-50fb1f1002e0",
   CellTags->"Section2"]},
 "Section2a"->{
  Cell[41778, 1108, 161, 5, 35, "Subsection",ExpressionUUID->"e967fbe1-a442-41d9-867a-b2702535b25d",
   CellTags->"Section2a"]},
 "Section2b"->{
  Cell[194044, 4183, 361, 10, 33, "Subsection",ExpressionUUID->"e7044e32-ae60-4d67-825c-83cab7a6e359",
   CellTags->"Section2b"]},
 "Section2c"->{
  Cell[301264, 6333, 117, 1, 32, "Subsection",ExpressionUUID->"64e0c4c7-62c1-4d8b-8d12-c325f7e06953",
   CellTags->"Section2c"]},
 "Section3"->{
  Cell[312391, 6643, 125, 1, 55, "Section",ExpressionUUID->"2392ce28-5988-4805-9075-becece410388",
   CellTags->"Section3"]},
 "Section3a"->{
  Cell[316866, 6748, 114, 1, 32, "Subsection",ExpressionUUID->"2129dbfe-e898-4141-9921-87edd03dd49f",
   CellTags->"Section3a"]},
 "Section3b"->{
  Cell[328005, 7007, 162, 2, 32, "Subsection",ExpressionUUID->"266a488d-da31-4f80-875e-2b73d068b0dd",
   CellTags->"Section3b"]},
 "Solutions"->{
  Cell[340733, 7356, 170, 3, 55, "Section",ExpressionUUID->"aee99956-2ca3-4bca-a05c-ea13a1d543ac",
   CellTags->"Solutions"]},
 "SolutionsCP9"->{
  Cell[340928, 7363, 125, 2, 32, "Subsection",ExpressionUUID->"9a3aea56-f1f6-48de-8073-067d7e35f82f",
   CellTags->"SolutionsCP9"],
  Cell[351512, 7652, 126, 2, 32, "Subsection",ExpressionUUID->"8fb69fcf-f5e1-45d1-b9f3-d44865675e65",
   CellTags->"SolutionsCP9"]},
 "SolutionsCE1"->{
  Cell[393950, 8715, 163, 3, 32, "Subsection",ExpressionUUID->"97d12ca7-a057-4054-864d-0ceba0c264d2",
   PageBreakWithin->False,
   CellTags->"SolutionsCE1"]},
 "Exercises"->{
  Cell[401854, 8942, 107, 1, 55, "Section",ExpressionUUID->"9d4ceca6-b160-43b5-b313-6a1287b57d06",
   CellTags->"Exercises"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Section1", 426638, 9493},
 {"Section1a", 426776, 9496},
 {"Section1b", 426919, 9499},
 {"Section1c", 427063, 9502},
 {"Section2", 427206, 9505},
 {"Section2a", 427347, 9508},
 {"Section2b", 427492, 9511},
 {"Section2c", 427639, 9514},
 {"Section3", 427784, 9517},
 {"Section3a", 427926, 9520},
 {"Section3b", 428072, 9523},
 {"Solutions", 428218, 9526},
 {"SolutionsCP9", 428364, 9529},
 {"SolutionsCE1", 428648, 9534},
 {"Exercises", 428824, 9538}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 147, 3, 108, "BookChapterTitle",ExpressionUUID->"908cd556-e505-4181-a220-00ee00ce0df6",
 CounterAssignments->{{"ChapterNumber", 3}}],
Cell[CellGroupData[{
Cell[752, 29, 86, 0, 55, "Section",ExpressionUUID->"2cae07be-e164-4aec-be74-744e181510ac"],
Cell[841, 31, 687, 11, 65, "Text",ExpressionUUID->"c25b1c62-d311-46e2-993f-d9840deac894"],
Cell[1531, 44, 1678, 30, 140, "Text",ExpressionUUID->"72fcad99-4eab-4383-81f5-b0409249efb3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3246, 79, 111, 1, 55, "Section",ExpressionUUID->"97a1c89a-f900-4ef2-897a-18bdd3ed428b",
 CellTags->"Section1"],
Cell[3360, 82, 859, 13, 95, "Text",ExpressionUUID->"3af70217-0fff-4ade-81f4-b27d0cd128c8"],
Cell[4222, 97, 504, 7, 65, "Text",ExpressionUUID->"368715af-36c1-455e-b3ff-f1c1ec0b47f6"],
Cell[CellGroupData[{
Cell[4751, 108, 120, 1, 32, "Subsection",ExpressionUUID->"6d07dc9e-88c9-4cc0-9b54-0fe1b16baa34",
 CellTags->"Section1a"],
Cell[4874, 111, 704, 10, 80, "Text",ExpressionUUID->"472a02a9-f6e1-44d3-9646-6c2192abf37c"],
Cell[5581, 123, 446, 8, 36, "Text",ExpressionUUID->"04cf2242-82d9-4d84-bcaf-667f32af2410"],
Cell[6030, 133, 399, 12, 70, "myCode",ExpressionUUID->"5100680f-9239-47e6-970b-1645cd31a858"],
Cell[6432, 147, 571, 14, 58, "Text",ExpressionUUID->"880cbb77-fce0-48be-bdcb-4de6ceb63169"],
Cell[7006, 163, 407, 6, 50, "Text",ExpressionUUID->"cfb27ee5-8249-4d59-81c5-89c3ece9af49"],
Cell[7416, 171, 488, 13, 89, "myCode",ExpressionUUID->"b1ea2541-4493-49cc-87ca-45a20558bea0"],
Cell[7907, 186, 389, 8, 36, "Text",ExpressionUUID->"de74bbe8-99ba-403f-b9c9-203e7ade74c2"],
Cell[8299, 196, 776, 21, 108, "myCode",ExpressionUUID->"c2f26d21-3f63-499c-a0c5-6966707ee4b2"],
Cell[9078, 219, 284, 6, 24, "Text",ExpressionUUID->"cf35caac-6863-47fc-9c7e-f179f8734ab4"],
Cell[9365, 227, 908, 17, 67, "Text",ExpressionUUID->"1dc5fa56-4726-47ac-b7fa-88ca821e210d"],
Cell[10276, 246, 1054, 28, 127, "myCode",ExpressionUUID->"d2560eeb-03f6-4191-bd78-067cd5104ea2"],
Cell[11333, 276, 307, 4, 35, "Text",ExpressionUUID->"324014e3-40c2-4a2a-a89b-473c2c8075a8"],
Cell[11643, 282, 1123, 30, 146, "Input",ExpressionUUID->"0c48212e-2d71-4418-aaee-280fb76feca5",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[12791, 316, 250, 6, 31, "Input",ExpressionUUID->"418d3afd-b5ee-4aed-b3b9-23bc0dc78139"],
Cell[13044, 324, 107, 1, 31, "Output",ExpressionUUID->"02ce7ac4-1ab0-4154-8655-976d6714d918"]
}, Open  ]],
Cell[13166, 328, 652, 9, 80, "Text",ExpressionUUID->"67591ab4-eb19-46ff-9a30-bf84a37d0f61"],
Cell[13821, 339, 659, 9, 80, "Text",ExpressionUUID->"9d125aa6-358c-4fd1-8130-f6def511a631"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14517, 353, 114, 1, 32, "Subsection",ExpressionUUID->"3698e4da-6c76-410b-ad52-d5f6bfa6be7d",
 CellTags->"Section1b"],
Cell[14634, 356, 480, 7, 50, "Text",ExpressionUUID->"b73520e3-43fe-496d-9c90-011f25175ef0"],
Cell[15117, 365, 1313, 26, 96, "Text",ExpressionUUID->"c0f1850f-3382-4016-9577-d3dbf5ee209d"],
Cell[16433, 393, 1674, 42, 317, "Input",ExpressionUUID->"e62c708e-e6c5-4812-927c-f8d7662879a0"],
Cell[18110, 437, 143, 2, 20, "Text",ExpressionUUID->"96d118c0-2193-41fb-b441-51bb832e8987"],
Cell[CellGroupData[{
Cell[18278, 443, 383, 8, 31, "Input",ExpressionUUID->"c25b107c-fc2a-429f-b6e9-7ba5b14f13be"],
Cell[18664, 453, 106, 1, 31, "Output",ExpressionUUID->"24c54b2c-53cf-4489-88f1-490e7481268e"]
}, Open  ]],
Cell[18785, 457, 376, 7, 35, "Text",ExpressionUUID->"46fb10a0-0df6-4023-8be4-5a58a98167a5"],
Cell[19164, 466, 1780, 44, 336, "Input",ExpressionUUID->"a40195d8-8a66-4c95-8143-a26652eea9db"],
Cell[20947, 512, 99, 0, 20, "Text",ExpressionUUID->"47976ebf-2555-439b-8547-6b4ed75d136e"],
Cell[CellGroupData[{
Cell[21071, 516, 383, 8, 31, "Input",ExpressionUUID->"d21035ac-1002-4c4d-aca8-e4605295160d"],
Cell[21457, 526, 107, 1, 31, "Output",ExpressionUUID->"f501a3f4-91c4-4b07-a590-fe9f1d058799"]
}, Open  ]],
Cell[21579, 530, 345, 5, 35, "Text",ExpressionUUID->"7aea9778-7b05-4610-8fbe-1fd164bcd599"],
Cell[CellGroupData[{
Cell[21949, 539, 259, 6, 31, "Input",ExpressionUUID->"6244bb57-e91e-4089-978b-47527c80ea4d"],
Cell[22211, 547, 106, 1, 31, "Output",ExpressionUUID->"a183cdd9-fa96-4125-8fed-5fc0f4196742"]
}, Open  ]],
Cell[22332, 551, 472, 9, 51, "Text",ExpressionUUID->"1d7840c4-830f-4aa7-9f92-ba83a05cac1f"],
Cell[CellGroupData[{
Cell[22829, 564, 201, 4, 31, "Input",ExpressionUUID->"3948a716-5c5c-4fcc-b17b-4077f4f61cb6"],
Cell[23033, 570, 109, 1, 31, "Output",ExpressionUUID->"11832e2d-508f-456e-8e62-cb594afda49d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23179, 576, 201, 4, 31, "Input",ExpressionUUID->"d6805065-ffb0-4f8c-aafc-fc231e9e632c"],
Cell[23383, 582, 110, 1, 31, "Output",ExpressionUUID->"253366d9-7c72-4445-ac4e-a674ac79a5d6"]
}, Open  ]],
Cell[23508, 586, 265, 6, 21, "Text",ExpressionUUID->"8a29694b-e78c-466a-b36b-a20d458c2101"],
Cell[CellGroupData[{
Cell[23798, 596, 169, 3, 31, "Input",ExpressionUUID->"fa2475f1-7c61-4837-9314-c414f0bcd5c6"],
Cell[23970, 601, 139, 2, 31, "Output",ExpressionUUID->"165cc09b-0109-484d-984a-be1c4352ea88"]
}, Open  ]],
Cell[24124, 606, 941, 27, 58, "Text",ExpressionUUID->"6ffc0f65-9305-4873-9511-1a2d2d735a04"],
Cell[25068, 635, 1863, 47, 336, "Input",ExpressionUUID->"d2ed0e16-53b4-46e8-8072-b71ec5ce9b08",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[26956, 686, 383, 8, 31, "Input",ExpressionUUID->"45cfca5f-6e47-42d5-9603-15cfd1a9cf37"],
Cell[27342, 696, 108, 1, 31, "Output",ExpressionUUID->"db394db4-91a5-4960-9c97-f380bb05505c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27487, 702, 259, 6, 31, "Input",ExpressionUUID->"01d4f4cf-59d5-43c7-9078-23e35354c4f6"],
Cell[27749, 710, 260, 6, 31, "Output",ExpressionUUID->"5bc3f1fd-6644-4491-8383-98cc153d045f"]
}, Open  ]],
Cell[28024, 719, 702, 10, 84, "Text",ExpressionUUID->"afe7457c-3211-4166-be04-a8b790a1dc9a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28763, 734, 112, 1, 32, "Subsection",ExpressionUUID->"1b6a45fa-7e76-4a03-8729-85181591ad5f",
 CellTags->"Section1c"],
Cell[28878, 737, 169, 3, 20, "Text",ExpressionUUID->"48c32761-4b5e-4db0-8150-ce40bb7f082c"],
Cell[29050, 742, 512, 12, 36, "Text",ExpressionUUID->"afc10ebb-5678-488b-951f-b44d02cec535"],
Cell[29565, 756, 1500, 41, 184, "myCode",ExpressionUUID->"52fcd28d-9d26-46a9-afe4-a5977a348f96"],
Cell[31068, 799, 454, 10, 58, "Text",ExpressionUUID->"eb1d6bcf-e3db-41ab-bae1-1b7e746c6a4f"],
Cell[31525, 811, 1580, 44, 184, "myCode",ExpressionUUID->"872542a0-e65a-4426-ada0-7dd8eff0c07c"],
Cell[33108, 857, 887, 20, 76, "Text",ExpressionUUID->"cca7962c-212d-4cae-9a54-b4febf2b8330"],
Cell[33998, 879, 497, 11, 58, "Text",ExpressionUUID->"11225068-80b0-479d-b943-c5e0e1039bf0"],
Cell[34498, 892, 279, 5, 39, "Text",ExpressionUUID->"c822066a-669f-4a85-957d-300bd9975630"],
Cell[CellGroupData[{
Cell[34802, 901, 152, 2, 16, "Item1Numbered",ExpressionUUID->"29fb64be-f374-44d6-9df3-a34cf57d57ae"],
Cell[34957, 905, 150, 2, 16, "Item1Numbered",ExpressionUUID->"b3015a6c-3029-4ee0-998b-2b53ded30cdb"],
Cell[35110, 909, 179, 3, 16, "Item1Numbered",ExpressionUUID->"fb9227e0-94c7-440a-9f6e-d7ea30bcbafe"]
}, Open  ]],
Cell[35304, 915, 917, 27, 127, "Input",ExpressionUUID->"091e8243-73e8-4620-8de9-7535eff0c191",
 InitializationCell->True],
Cell[36224, 944, 396, 7, 54, "Text",ExpressionUUID->"01c4771e-1f98-4f95-9192-56b17cef970e"],
Cell[36623, 953, 1488, 39, 203, "Input",ExpressionUUID->"d76c7b69-1fee-4eb8-9aa2-651feb773a53",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[38136, 996, 254, 6, 31, "Input",ExpressionUUID->"b9c38179-1947-4ea4-b8b3-5dafc039c730"],
Cell[38393, 1004, 216, 5, 31, "Output",ExpressionUUID->"3e1c20ad-553f-4c21-9298-33060c67c182"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[38670, 1016, 124, 1, 55, "Section",ExpressionUUID->"8d65f244-2e1c-4890-836e-50fb1f1002e0",
 CellTags->"Section2"],
Cell[38797, 1019, 1490, 39, 65, "Text",ExpressionUUID->"348156fb-dcc9-4c94-a172-75445502c94c"],
Cell[40290, 1060, 1463, 44, 43, "Text",ExpressionUUID->"11b1d57a-5197-449a-b86c-24c7d071f4fd"],
Cell[CellGroupData[{
Cell[41778, 1108, 161, 5, 35, "Subsection",ExpressionUUID->"e967fbe1-a442-41d9-867a-b2702535b25d",
 CellTags->"Section2a"],
Cell[41942, 1115, 316, 7, 21, "Text",ExpressionUUID->"c2217703-b1ab-44da-860a-c776e53a570c"],
Cell[CellGroupData[{
Cell[42283, 1126, 321, 9, 31, "Input",ExpressionUUID->"7be7742e-5cef-4718-bca7-1d08db3d847b",
 InitializationCell->True],
Cell[42607, 1137, 268, 7, 32, "Output",ExpressionUUID->"6e58ebfe-837b-4a3a-877c-af8a9e807771"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42912, 1149, 179, 4, 31, "Input",ExpressionUUID->"af2696c2-d38b-4944-a30d-d115eb2b410e",
 InitializationCell->True],
Cell[43094, 1155, 130, 2, 32, "Output",ExpressionUUID->"ffeaf77e-db7c-4748-8a3e-8650b694a9b2"]
}, Open  ]],
Cell[43239, 1160, 624, 14, 51, "Text",ExpressionUUID->"f6648909-f749-47b0-ab55-e97389c7c89f"],
Cell[43866, 1176, 427, 11, 20, "Text",ExpressionUUID->"9b6ebff2-3de5-457c-9de1-4dcc0ab1fd0d"],
Cell[CellGroupData[{
Cell[44318, 1191, 220, 5, 31, "Input",ExpressionUUID->"06eceae9-8ce3-4f5c-818d-9c136c5858a5"],
Cell[44541, 1198, 5164, 102, 230, "Output",ExpressionUUID->"7db5d68c-70a1-4175-adf8-83db9443e0fd"]
}, Open  ]],
Cell[49720, 1303, 1336, 41, 96, "Text",ExpressionUUID->"37689db6-10de-4437-9173-5b2ca4fa3959"],
Cell[CellGroupData[{
Cell[51081, 1348, 555, 15, 31, "Input",ExpressionUUID->"58a0942e-af42-4f8b-8ae8-1bf60b939856"],
Cell[51639, 1365, 38339, 663, 123, "Output",ExpressionUUID->"e4cbc2e0-9a33-4094-9df4-54a2f2bbc91f"]
}, Open  ]],
Cell[89993, 2031, 1322, 36, 52, "Text",ExpressionUUID->"44d24ac7-b56a-4178-9483-2427bfeb2663"],
Cell[CellGroupData[{
Cell[91340, 2071, 271, 6, 31, "Input",ExpressionUUID->"82b2c7ab-357d-46ad-ad29-094293d65e10"],
Cell[91614, 2079, 4673, 93, 224, "Output",ExpressionUUID->"e724ace8-fb1b-4ff2-aea3-0caf38a10d7f"]
}, Open  ]],
Cell[96302, 2175, 870, 24, 35, "Text",ExpressionUUID->"976fd751-d3a1-488a-ab0f-709acff54153"],
Cell[CellGroupData[{
Cell[97197, 2203, 347, 9, 31, "Input",ExpressionUUID->"996233fe-4437-41c4-82ac-961d2f5ca4da"],
Cell[97547, 2214, 4689, 93, 234, "Output",ExpressionUUID->"e26733c7-88cd-4cfd-bb66-6ee5c9400cca"]
}, Open  ]],
Cell[102251, 2310, 1122, 30, 52, "Text",ExpressionUUID->"ddb56a58-65fa-456b-945f-eb5a300d509e"],
Cell[CellGroupData[{
Cell[103398, 2344, 432, 12, 31, "Input",ExpressionUUID->"66409445-a623-4f95-9450-7a5419229db1"],
Cell[103833, 2358, 3057, 65, 239, "Output",ExpressionUUID->"9ed7dca6-9f74-41cb-80cb-091e46ad7c1e"]
}, Open  ]],
Cell[106905, 2426, 401, 9, 40, "Text",ExpressionUUID->"6f82a064-3949-4c9f-97a2-ddc8c865e18e"],
Cell[107309, 2437, 302, 6, 21, "Text",ExpressionUUID->"db2625a7-3ffc-47a4-a1bc-b1dc5fea82e2"],
Cell[CellGroupData[{
Cell[107636, 2447, 269, 7, 31, "Input",ExpressionUUID->"8fd22ed9-9d50-49ef-9276-21132e616dd4"],
Cell[107908, 2456, 9883, 182, 233, "Output",ExpressionUUID->"45c9c445-3fb4-48fd-8b54-2f98a09ef878"]
}, Open  ]],
Cell[117806, 2641, 1327, 46, 89, "Text",ExpressionUUID->"1a67e701-9a79-4c2d-94ac-7e751cdd9bdc"],
Cell[CellGroupData[{
Cell[119158, 2691, 378, 10, 31, "Input",ExpressionUUID->"b6beff3c-3fe0-43c5-bec7-6d69402fcfb4"],
Cell[119539, 2703, 9847, 182, 233, "Output",ExpressionUUID->"f0ce595d-f4cc-4e46-a2f0-f81afff8c1ca"]
}, Open  ]],
Cell[129401, 2888, 385, 8, 36, "Text",ExpressionUUID->"3fb8263f-fab0-4636-86ec-2604d8f1bb7d"],
Cell[129789, 2898, 524, 13, 21, "Text",ExpressionUUID->"20aab817-3631-48b2-97be-20f307fa5df1"],
Cell[130316, 2913, 490, 11, 36, "Text",ExpressionUUID->"d9ef3a4b-b13f-439f-8284-f355e1393930"],
Cell[CellGroupData[{
Cell[130831, 2928, 327, 8, 31, "Input",ExpressionUUID->"c56e10c8-437a-4095-a5bf-4f77fb7f0460"],
Cell[131161, 2938, 20459, 398, 235, "Output",ExpressionUUID->"38f9e3f4-60a2-495e-ae94-f0cdfee3ab50"]
}, Open  ]],
Cell[151635, 3339, 360, 7, 21, "Text",ExpressionUUID->"42e8d2a7-7e22-47a9-8ad0-8b40d3b5bae5"],
Cell[CellGroupData[{
Cell[152020, 3350, 340, 9, 31, "Input",ExpressionUUID->"d90fe0fe-0a37-4918-9f0e-3344236b685a"],
Cell[152363, 3361, 20250, 391, 235, "Output",ExpressionUUID->"2aa32f07-cd43-4e1d-9f5c-27afadda56e0"]
}, Open  ]],
Cell[172628, 3755, 207, 3, 20, "Text",ExpressionUUID->"3b061ce6-b634-42ab-858f-a8fc77ea152d"],
Cell[CellGroupData[{
Cell[172860, 3762, 386, 10, 31, "Input",ExpressionUUID->"7c03bd33-ffd9-4058-8db5-9cfaf7ea43e2"],
Cell[173249, 3774, 20188, 389, 235, "Output",ExpressionUUID->"912bfac5-2432-4f04-93ee-4fdcb31b06e1"]
}, Open  ]],
Cell[193452, 4166, 555, 12, 37, "Text",ExpressionUUID->"8781d043-0957-41d6-916b-4542930ea57d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[194044, 4183, 361, 10, 33, "Subsection",ExpressionUUID->"e7044e32-ae60-4d67-825c-83cab7a6e359",
 CellTags->"Section2b"],
Cell[194408, 4195, 683, 17, 39, "Text",ExpressionUUID->"6d53eab1-b007-4b61-8db4-09d82fc64362"],
Cell[CellGroupData[{
Cell[195116, 4216, 422, 12, 31, "Input",ExpressionUUID->"20ead970-cc7b-43ca-b730-bbfff2e7e2ce"],
Cell[195541, 4230, 20198, 390, 235, "Output",ExpressionUUID->"7fde38af-3de3-4499-8d76-acc42b9a3c4b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[215776, 4625, 422, 12, 31, "Input",ExpressionUUID->"51ff2003-26b0-4fb5-a82d-10e9a2febcf4"],
Cell[216201, 4639, 20198, 390, 235, "Output",ExpressionUUID->"7e5a96c1-ab28-4330-ba74-075d82bf7f52"]
}, Open  ]],
Cell[CellGroupData[{
Cell[236436, 5034, 422, 12, 31, "Input",ExpressionUUID->"0a008915-4564-4b57-b556-f39119dd403a"],
Cell[236861, 5048, 20198, 390, 235, "Output",ExpressionUUID->"f31f732a-d801-4502-acdd-367bbcee7030"]
}, Open  ]],
Cell[CellGroupData[{
Cell[257096, 5443, 422, 12, 31, "Input",ExpressionUUID->"d7426008-7db5-4ef8-ac01-e6172f49e560"],
Cell[257521, 5457, 20202, 390, 235, "Output",ExpressionUUID->"d9c7b51c-fce9-47f7-9182-11d06f9047f6"]
}, Open  ]],
Cell[277738, 5850, 930, 28, 41, "Text",ExpressionUUID->"35ba3c76-0918-493c-8c7e-6a07c1f8939d"],
Cell[CellGroupData[{
Cell[278693, 5882, 423, 12, 31, "Input",ExpressionUUID->"d6efcc88-0c8f-42af-a3d7-3162a3906517"],
Cell[279119, 5896, 21425, 411, 229, "Output",ExpressionUUID->"3c668aa9-4611-425f-9ffa-362e92eb8bab"]
}, Open  ]],
Cell[300559, 6310, 668, 18, 41, "Text",ExpressionUUID->"de36f7a5-dd98-452f-a712-353473468f0f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[301264, 6333, 117, 1, 32, "Subsection",ExpressionUUID->"64e0c4c7-62c1-4d8b-8d12-c325f7e06953",
 CellTags->"Section2c"],
Cell[301384, 6336, 1793, 52, 58, "Text",ExpressionUUID->"af5742a2-4b0c-4f51-b0b8-24b679370687"],
Cell[CellGroupData[{
Cell[303202, 6392, 399, 12, 31, "Input",ExpressionUUID->"876de3d6-08e0-47ab-936f-92d8bb3f99ff",
 InitializationCell->True],
Cell[303604, 6406, 344, 10, 34, "Output",ExpressionUUID->"7a7ed895-217f-4c8a-8e34-b58992f0eca3"]
}, Open  ]],
Cell[303963, 6419, 1209, 29, 90, "Text",ExpressionUUID->"1e0fc85b-b1c7-42b2-844f-9d3697e7f4bc"],
Cell[305175, 6450, 1148, 27, 115, "Text",ExpressionUUID->"fcc9453e-c3bd-4221-be5b-0c926aead35f"],
Cell[CellGroupData[{
Cell[306348, 6481, 1100, 28, 56, "Input",ExpressionUUID->"343b56ce-b9cf-4c37-9203-148d27e1153f",
 InitializationCell->True],
Cell[307451, 6511, 2092, 42, 361, "Output",ExpressionUUID->"e781a3c2-97ec-4383-965f-f456447cec77"]
}, Open  ]],
Cell[309558, 6556, 386, 10, 36, "Text",ExpressionUUID->"c23d3a06-f266-4a78-b814-2313a78aefcc"],
Cell[309947, 6568, 1065, 29, 38, "Text",ExpressionUUID->"6ceca387-199f-46c8-830c-beb1a9d80daf"],
Cell[311015, 6599, 1327, 38, 51, "Text",ExpressionUUID->"85fee98f-50f1-41ee-af2e-cf17a076d481"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[312391, 6643, 125, 1, 55, "Section",ExpressionUUID->"2392ce28-5988-4805-9075-becece410388",
 CellTags->"Section3"],
Cell[312519, 6646, 383, 5, 50, "Text",ExpressionUUID->"f266d145-36b4-4ff1-9564-d9c16d23e3ab"],
Cell[312905, 6653, 541, 8, 65, "Text",ExpressionUUID->"22435e6b-882c-467f-afde-ea64c6dcf3f5"],
Cell[313449, 6663, 784, 15, 84, "Text",ExpressionUUID->"cf3dfc33-6727-4c31-a24a-b753ac16686b"],
Cell[314236, 6680, 548, 8, 65, "Text",ExpressionUUID->"a63fe9a1-4970-444e-b601-a986bcf54e20"],
Cell[314787, 6690, 485, 9, 51, "Text",ExpressionUUID->"e0020eb1-df06-4663-93ec-e6cb0d411616"],
Cell[315275, 6701, 242, 6, 21, "Text",ExpressionUUID->"da7561b2-6c56-46b5-90a5-894b7e6b8b1b"],
Cell[CellGroupData[{
Cell[315542, 6711, 209, 4, 31, "Input",ExpressionUUID->"73d63f90-a7d1-4a2a-a803-7b53b85ed5ed"],
Cell[315754, 6717, 164, 3, 31, "Output",ExpressionUUID->"cd321677-0cd0-4503-8125-26b8574bddfa"]
}, Open  ]],
Cell[315933, 6723, 908, 21, 52, "Text",ExpressionUUID->"f71045e0-812a-4efc-97b9-5936c9d48582"],
Cell[CellGroupData[{
Cell[316866, 6748, 114, 1, 32, "Subsection",ExpressionUUID->"2129dbfe-e898-4141-9921-87edd03dd49f",
 CellTags->"Section3a"],
Cell[316983, 6751, 657, 9, 80, "Text",ExpressionUUID->"5a173ce6-433a-46b3-bc58-53fe06507d9b"],
Cell[317643, 6762, 832, 19, 55, "Text",ExpressionUUID->"e5a15c2b-8fa2-4ef9-a48c-a4124cd48fd6"],
Cell[CellGroupData[{
Cell[318500, 6785, 176, 3, 31, "Input",ExpressionUUID->"24da49df-672e-4146-bd97-4c64fe68afa7"],
Cell[318679, 6790, 182, 3, 31, "Output",ExpressionUUID->"4c57ff2c-c077-4035-a3f2-5e236524ff4f"]
}, Open  ]],
Cell[318876, 6796, 473, 11, 43, "Text",ExpressionUUID->"aff8f226-e0a5-480e-8478-2fbeeb19adb9"],
Cell[CellGroupData[{
Cell[319374, 6811, 304, 7, 31, "Input",ExpressionUUID->"0ffd9a8f-a001-4f06-9321-0f3b48edc7b4"],
Cell[319681, 6820, 115, 1, 31, "Output",ExpressionUUID->"47e96ec4-1c5b-4cc9-8aba-0ae23e75f615"]
}, Open  ]],
Cell[319811, 6824, 2167, 58, 110, "Text",ExpressionUUID->"d4353d0e-6e20-4210-8c6e-2816afe0380d"],
Cell[CellGroupData[{
Cell[322003, 6886, 698, 16, 146, "Input",ExpressionUUID->"13e96f75-a8cc-45bd-9e60-e0a7df5c1b0b",
 InitializationCell->True],
Cell[322704, 6904, 2177, 32, 279, "Output",ExpressionUUID->"9a6a6e54-11ee-441f-82e1-191ed86d0bb1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[324918, 6941, 258, 6, 31, "Input",ExpressionUUID->"c75a3393-2a8f-467d-873a-7c3886dd3100",
 InitializationCell->True],
Cell[325179, 6949, 2021, 29, 260, "Output",ExpressionUUID->"15fe2b18-5414-4d87-a24c-c604416e91d0"]
}, Open  ]],
Cell[327215, 6981, 177, 3, 20, "Text",ExpressionUUID->"a6b71b76-2af6-471c-9c5d-9e5c4aff8243"],
Cell[327395, 6986, 258, 6, 21, "Text",ExpressionUUID->"ad978553-2aeb-4091-bf31-b71d64ee0b6d"],
Cell[CellGroupData[{
Cell[327678, 6996, 147, 2, 31, "Input",ExpressionUUID->"ba64ee0e-e5b0-4101-aed0-09a01f1e2841"],
Cell[327828, 7000, 128, 1, 31, "Output",ExpressionUUID->"790bc2f8-04d3-4144-8658-40a2e4db31c0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[328005, 7007, 162, 2, 32, "Subsection",ExpressionUUID->"266a488d-da31-4f80-875e-2b73d068b0dd",
 CellTags->"Section3b"],
Cell[328170, 7011, 715, 18, 36, "Text",ExpressionUUID->"f4b27473-b62b-4b7d-845a-010412db8a18"],
Cell[CellGroupData[{
Cell[328910, 7033, 472, 14, 31, "Input",ExpressionUUID->"4dde3395-6b2d-4134-958a-104b9ae1be29"],
Cell[329385, 7049, 1259, 35, 243, "Output",ExpressionUUID->"658d03ba-b008-4536-85c2-54553248d953"]
}, Open  ]],
Cell[330659, 7087, 453, 9, 40, "Text",ExpressionUUID->"5cf7f0e5-120d-4510-86f1-6c1893e982ba"],
Cell[331115, 7098, 2103, 55, 279, "Input",ExpressionUUID->"046c3ae4-2ffc-4f2a-b3cc-05c75909e1b4",
 InitializationCell->True],
Cell[333221, 7155, 3128, 86, 189, "Text",ExpressionUUID->"18a1aadd-1030-463f-93ba-c9098be19fd4"],
Cell[336352, 7243, 145, 2, 20, "Text",ExpressionUUID->"f6956347-9b25-4fba-be2d-c2cec9137ac4"],
Cell[CellGroupData[{
Cell[336522, 7249, 255, 5, 31, "Input",ExpressionUUID->"e6326207-7c42-47ca-88e8-ca04df8cec21",
 InitializationCell->True],
Cell[336780, 7256, 513, 13, 51, "Output",ExpressionUUID->"ee254597-d63b-4e62-a9d0-04d41b5ff240"]
}, Open  ]],
Cell[CellGroupData[{
Cell[337330, 7274, 177, 3, 31, "Input",ExpressionUUID->"dc644d61-f876-4a2e-83de-3a948ca23ecd",
 InitializationCell->True],
Cell[337510, 7279, 1351, 36, 232, "Output",ExpressionUUID->"c74df162-2fb1-403b-a596-c9a9fabb1b36"]
}, Open  ]],
Cell[338876, 7318, 399, 7, 54, "Text",ExpressionUUID->"acbb73a0-75df-4ae2-ba03-8669b0c05c4e"],
Cell[339278, 7327, 266, 4, 35, "Text",ExpressionUUID->"358257bf-5b0c-4245-a340-140db89ca2fc"],
Cell[339547, 7333, 834, 11, 95, "Text",ExpressionUUID->"dfe0e687-347c-468b-900e-0a459da1fdbe"],
Cell[340384, 7346, 300, 4, 35, "Text",ExpressionUUID->"809c3d39-6b70-49a1-92cb-651a102175cc"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[340733, 7356, 170, 3, 55, "Section",ExpressionUUID->"aee99956-2ca3-4bca-a05c-ea13a1d543ac",
 CellTags->"Solutions"],
Cell[CellGroupData[{
Cell[340928, 7363, 125, 2, 32, "Subsection",ExpressionUUID->"9a3aea56-f1f6-48de-8073-067d7e35f82f",
 CellTags->"SolutionsCP9"],
Cell[341056, 7367, 225, 3, 55, "Problem",ExpressionUUID->"405bab99-21c3-428e-b667-cd63b29c6e10"],
Cell[341284, 7372, 435, 6, 50, "Text",ExpressionUUID->"4a722eb4-c871-4a44-829b-c9410b596226"],
Cell[341722, 7380, 228, 5, 31, "Input",ExpressionUUID->"cf358782-0eb1-419f-a89d-ba7e98a6ae6c",
 Evaluatable->False],
Cell[341953, 7387, 82, 0, 20, "Text",ExpressionUUID->"c40ab58b-567a-45d1-8835-c02e9a6022ab"],
Cell[342038, 7389, 372, 7, 31, "Input",ExpressionUUID->"c466a33c-0158-4b5a-b23b-58dbfb88d4ba",
 Evaluatable->False],
Cell[342413, 7398, 379, 8, 36, "Text",ExpressionUUID->"cd532003-469e-430e-85fb-417a221da5bd"],
Cell[CellGroupData[{
Cell[342817, 7410, 156, 2, 31, "Input",ExpressionUUID->"cec85f99-58d6-4c29-8508-f01ea1948495"],
Cell[342976, 7414, 262, 4, 31, "Output",ExpressionUUID->"eb787991-9bc5-4ff5-94ef-fbdbb5468a51"]
}, Open  ]],
Cell[343253, 7421, 98, 0, 20, "Text",ExpressionUUID->"b8e07271-74a1-4758-a510-b4aa13495ff3"],
Cell[343354, 7423, 1777, 47, 203, "Input",ExpressionUUID->"5302ffd7-926a-4fec-b4ee-212854d1e2e9"],
Cell[345134, 7472, 433, 9, 40, "Text",ExpressionUUID->"690d4ed0-3c08-498b-addb-c845d2b7ea0e"],
Cell[345570, 7483, 111, 0, 20, "Text",ExpressionUUID->"762e9cfd-3241-4f2e-9f27-ba215eb74b68"],
Cell[CellGroupData[{
Cell[345706, 7487, 213, 4, 31, "Input",ExpressionUUID->"41b64149-65a8-4a85-ae25-ed1a12321ea2"],
Cell[CellGroupData[{
Cell[345944, 7495, 275, 7, 24, "Print",ExpressionUUID->"72840be5-fd7c-4558-a6e8-5e3ac4a12341"],
Cell[346222, 7504, 275, 7, 24, "Print",ExpressionUUID->"a5eebec9-9cfe-457a-be02-3dc6f0933ab7"]
}, Open  ]]
}, Open  ]],
Cell[346524, 7515, 422, 6, 50, "Text",ExpressionUUID->"6ec72d8d-64d9-4c59-94b3-2323b00d5196"],
Cell[346949, 7523, 372, 7, 31, "Input",ExpressionUUID->"983f7fc1-4cc9-4409-98f6-bb72c1d6e4db",
 Evaluatable->False],
Cell[347324, 7532, 441, 6, 50, "Text",ExpressionUUID->"9d84e918-30ab-4845-9678-c3402edbe0a6"],
Cell[347768, 7540, 1754, 45, 184, "Input",ExpressionUUID->"175e7467-0b18-4a15-9497-3f06b10160ac"],
Cell[CellGroupData[{
Cell[349547, 7589, 190, 3, 31, "Input",ExpressionUUID->"60268adb-ecd9-4e89-9017-1621912b81e3"],
Cell[CellGroupData[{
Cell[349762, 7596, 275, 7, 24, "Print",ExpressionUUID->"1e9f4bf4-aafa-40c8-909c-1f7294ffefe0"],
Cell[350040, 7605, 275, 7, 24, "Print",ExpressionUUID->"aabcce63-0713-4875-a646-77b492b5e606"]
}, Open  ]]
}, Open  ]],
Cell[350342, 7616, 389, 8, 36, "Text",ExpressionUUID->"04cc6cb9-1292-4ed3-ac43-535bd9c2e32b"],
Cell[CellGroupData[{
Cell[350756, 7628, 193, 3, 31, "Input",ExpressionUUID->"baf8eed5-ca21-4c81-ac6d-b98092aa371d"],
Cell[350952, 7633, 250, 7, 31, "Output",ExpressionUUID->"6fba613a-69eb-4bf3-8358-9cd978301821"]
}, Open  ]],
Cell[351217, 7643, 258, 4, 35, "Text",ExpressionUUID->"421108c9-37f3-400f-a4fb-4d31ab8ab19e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[351512, 7652, 126, 2, 32, "Subsection",ExpressionUUID->"8fb69fcf-f5e1-45d1-b9f3-d44865675e65",
 CellTags->"SolutionsCP9"],
Cell[351641, 7656, 621, 15, 55, "Problem",ExpressionUUID->"0e801174-d85e-4929-b253-dedfe64291d2"],
Cell[352265, 7673, 575, 16, 20, "Text",ExpressionUUID->"e451489b-21c0-4ebf-a9c5-299e0ab1ce27"],
Cell[352843, 7691, 1454, 37, 81, "Text",ExpressionUUID->"4099ee71-9f4e-41da-8842-e5404c94a11d"],
Cell[354300, 7730, 463, 10, 39, "Text",ExpressionUUID->"175fa1cf-e784-46a2-b0cb-89f7df889332"],
Cell[354766, 7742, 1831, 46, 336, "myCode",ExpressionUUID->"3f304013-a251-4027-a9e9-2db44a626907"],
Cell[356600, 7790, 1335, 32, 84, "Text",ExpressionUUID->"6db204d9-c290-4ccd-90fc-3628c57270c5"],
Cell[357938, 7824, 389, 8, 36, "Text",ExpressionUUID->"83387ea0-792a-4e56-9b18-37769300294d"],
Cell[358330, 7834, 2148, 53, 393, "Input",ExpressionUUID->"0ce2fb8c-fda6-4941-a45e-8b922902de20",
 InitializationCell->True],
Cell[360481, 7889, 129, 0, 20, "Text",ExpressionUUID->"83954133-a8c0-495d-b891-ce367e1724f3"],
Cell[CellGroupData[{
Cell[360635, 7893, 203, 4, 31, "Input",ExpressionUUID->"2b3d5fdd-7eaf-4441-ac71-2fb87a600892"],
Cell[360841, 7899, 108, 1, 31, "Output",ExpressionUUID->"d2491de7-fb6d-4266-be8b-278e5e2eba16"]
}, Open  ]],
Cell[360964, 7903, 83, 0, 20, "Text",ExpressionUUID->"f9b72df5-2ebb-4f1f-902e-cbddb8e2e8d0"],
Cell[361050, 7905, 1165, 31, 50, "Text",ExpressionUUID->"fc573752-768a-4c1a-af97-7de3b08704b1"],
Cell[362218, 7938, 541, 14, 60, "Equation",ExpressionUUID->"a71b3810-86c8-47d3-ba22-ed0bc2efcb9a"],
Cell[362762, 7954, 372, 9, 21, "Text",ExpressionUUID->"b03f3e77-6f32-490a-9497-94c9bcc27690"],
Cell[CellGroupData[{
Cell[363159, 7967, 294, 8, 31, "Input",ExpressionUUID->"a74cab73-5b94-45c2-9690-7fe0c7449596"],
Cell[363456, 7977, 199, 5, 50, "Output",ExpressionUUID->"74c39770-6f33-448c-91c3-ca44bfe68226"]
}, Open  ]],
Cell[CellGroupData[{
Cell[363692, 7987, 140, 2, 31, "Input",ExpressionUUID->"1232e00c-162c-471f-adc3-8c9de16efdcf"],
Cell[363835, 7991, 129, 2, 31, "Output",ExpressionUUID->"230793b2-a677-4a4b-9f02-9c379265eb24"]
}, Open  ]],
Cell[363979, 7996, 301, 9, 21, "Text",ExpressionUUID->"5b72dbe6-bb88-4e09-9a9c-1414b50a2adf"],
Cell[364283, 8007, 442, 9, 35, "Text",ExpressionUUID->"c28f654d-446b-4b58-bfec-ad8f891a3864"],
Cell[364728, 8018, 1183, 31, 184, "Input",ExpressionUUID->"8cd1687c-2c54-4fcc-8628-5d6dfbe9ff7b",
 InitializationCell->True],
Cell[365914, 8051, 472, 11, 36, "Text",ExpressionUUID->"1ef43db6-f407-4cdf-98a7-8bd6b620f930"],
Cell[366389, 8064, 413, 9, 35, "Text",ExpressionUUID->"b01679e8-d6d4-4256-bebf-7eaca5846bbf"],
Cell[CellGroupData[{
Cell[366827, 8077, 142, 2, 31, "Input",ExpressionUUID->"11fcab8d-69ed-48cc-9ae5-f854735f5f6d"],
Cell[366972, 8081, 111, 1, 31, "Output",ExpressionUUID->"f4bdc461-7e7b-46e2-a0c4-dff02a17bda6"]
}, Open  ]],
Cell[367098, 8085, 503, 14, 20, "Text",ExpressionUUID->"a38f3847-170f-4ce9-af91-56b3588db45a"],
Cell[367604, 8101, 930, 22, 68, "Text",ExpressionUUID->"214c3372-4dc8-4a41-a035-1bc1bb5a08ec"],
Cell[CellGroupData[{
Cell[368559, 8127, 365, 9, 31, "Input",ExpressionUUID->"24054349-53d7-4db0-a67c-a2d14ab24c07",
 InitializationCell->True],
Cell[368927, 8138, 2655, 61, 233, "Output",ExpressionUUID->"1f1d5d10-7428-406e-bb76-b971a9e6c8e6"]
}, Open  ]],
Cell[371597, 8202, 71, 0, 20, "Text",ExpressionUUID->"15d5d710-ca26-48da-96b0-0fc3950fbb3e"],
Cell[371671, 8204, 1018, 27, 37, "Text",ExpressionUUID->"0c46a861-3917-407d-9b29-bf63b849d3a0"],
Cell[372692, 8233, 405, 11, 31, "Input",ExpressionUUID->"729ef16a-829c-425d-9033-3b46a45b4ff2",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[373122, 8248, 287, 6, 31, "Input",ExpressionUUID->"527a5e79-f887-4440-ab68-041c317bb9c7",
 InitializationCell->True],
Cell[373412, 8256, 2197, 51, 243, "Output",ExpressionUUID->"ff324592-4aa7-49ee-88a3-3335f3912f43"]
}, Open  ]],
Cell[375624, 8310, 224, 6, 21, "Text",ExpressionUUID->"c7065598-eee0-4668-9e01-fe96dd747590"],
Cell[CellGroupData[{
Cell[375873, 8320, 218, 4, 31, "Input",ExpressionUUID->"4cb2246c-76df-442b-8156-797b3b03ef9c",
 InitializationCell->True],
Cell[376094, 8326, 3834, 81, 233, "Output",ExpressionUUID->"85ad4d8d-d239-452d-83cc-fe79a688c760"]
}, Open  ]],
Cell[379943, 8410, 415, 10, 21, "Text",ExpressionUUID->"0846372f-d52a-4a62-977b-47540e6df7f4"],
Cell[CellGroupData[{
Cell[380383, 8424, 515, 13, 51, "Input",ExpressionUUID->"bff1ce9b-1ffb-42a1-ba73-8d8c5e74e625"],
Cell[380901, 8439, 13000, 270, 235, "Output",ExpressionUUID->"1ccc60ac-3ef1-4c68-8162-61c470d058d8"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[393950, 8715, 163, 3, 32, "Subsection",ExpressionUUID->"97d12ca7-a057-4054-864d-0ceba0c264d2",
 PageBreakWithin->False,
 CellTags->"SolutionsCE1"],
Cell[394116, 8720, 2409, 80, 63, "Problem",ExpressionUUID->"f842e071-af69-42d8-8d31-ca867ec4483a",
 PageBreakAbove->False,
 PageBreakWithin->False],
Cell[396528, 8802, 2155, 61, 69, "Text",ExpressionUUID->"6b23c49b-b821-43a1-a69c-b4abbff3e14c"],
Cell[CellGroupData[{
Cell[398708, 8867, 1122, 27, 56, "Input",ExpressionUUID->"ac9937c0-274f-4679-96d2-77e1d1feaf8e",
 InitializationCell->True],
Cell[399833, 8896, 1960, 39, 311, "Output",ExpressionUUID->"799632d1-abfd-40f1-99b2-5a223bfa87d2"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[401854, 8942, 107, 1, 55, "Section",ExpressionUUID->"9d4ceca6-b160-43b5-b313-6a1287b57d06",
 CellTags->"Exercises"],
Cell[CellGroupData[{
Cell[401986, 8947, 373, 7, 33, "Item1Exercise",ExpressionUUID->"e2150973-f2e6-4672-ac75-6e604e87450d"],
Cell[402362, 8956, 171, 3, 20, "Item1Exercise",ExpressionUUID->"de39c0af-9ba8-4261-ae2b-09c6ffe60919"],
Cell[402536, 8961, 172, 3, 20, "Item1Exercise",ExpressionUUID->"dd9505ca-2fe1-479c-9649-3ca9bc8c0a4a"],
Cell[402711, 8966, 194, 3, 20, "Item1Exercise",ExpressionUUID->"6547c7bf-74b1-4db0-872c-39a145225078"],
Cell[402908, 8971, 188, 3, 20, "Item1Exercise",ExpressionUUID->"fe076f98-dae7-4e99-ba9d-ccf1b076e39f"],
Cell[403099, 8976, 221, 3, 20, "Item1Exercise",ExpressionUUID->"1245ad4a-725b-41cd-90ff-45cb1637b04f"],
Cell[403323, 8981, 254, 5, 37, "Item1Exercise",ExpressionUUID->"84ecdfdf-019b-4c77-a3be-0af39199eecb"],
Cell[403580, 8988, 243, 3, 33, "Item1Exercise",ExpressionUUID->"715a234a-9697-44a5-9113-83319825f4d8"],
Cell[403826, 8993, 252, 4, 33, "Item1Exercise",ExpressionUUID->"197c3718-0b21-4ec5-9952-ee79e4ebe8ca"],
Cell[404081, 8999, 268, 4, 33, "Item1Exercise",ExpressionUUID->"2a58affa-ed7e-41fc-8f6d-a00ea2f2900f"],
Cell[404352, 9005, 274, 4, 33, "Item1Exercise",ExpressionUUID->"3712d07f-ba54-4e6b-97c7-6cd90dae5430"],
Cell[404629, 9011, 866, 24, 33, "Item1Exercise",ExpressionUUID->"5e5bdc4a-e01b-4b96-bb02-287736d9651a"],
Cell[CellGroupData[{
Cell[405520, 9039, 602, 18, 21, "Item2Exercise",ExpressionUUID->"d115eea7-bf1e-4547-965d-c97894334f44"],
Cell[406125, 9059, 583, 18, 30, "Item2Exercise",ExpressionUUID->"b5b5d46a-ff34-432b-a55f-b369245384bf"],
Cell[406711, 9079, 586, 16, 18, "Item2Exercise",ExpressionUUID->"636e2e54-e11b-4f1d-94cf-a33c4f34b38a"],
Cell[407300, 9097, 541, 16, 15, "Item2Exercise",ExpressionUUID->"4b073670-2651-42d2-9a81-88fb2f13ed2f"]
}, Open  ]],
Cell[407856, 9116, 434, 10, 38, "Item1Exercise",ExpressionUUID->"0b371dde-789d-4e24-9ea8-eee80e3860fe"],
Cell[408293, 9128, 345, 5, 37, "Item1Exercise",ExpressionUUID->"2967f9d2-d4a5-4057-a011-766ce0322b5b"],
Cell[408641, 9135, 389, 6, 50, "Item1Exercise",ExpressionUUID->"7d66d9c0-f9c4-482d-b853-425e33499b74"],
Cell[409033, 9143, 574, 10, 46, "Item1Exercise",ExpressionUUID->"688c8232-93ea-4190-a97a-0553488b3011"],
Cell[409610, 9155, 677, 13, 46, "Item1Exercise",ExpressionUUID->"e0d62ef1-7b07-428f-807a-396b946adc43"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

